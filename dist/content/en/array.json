{
	"erlref": {
		"header": {
			"copyright": {
				"year": [
					"2007",
					"2016"
				],
				"holder": "Ericsson AB. All Rights Reserved."
			},
			"legalnotice": "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.",
			"title": "array",
			"prepared": {},
			"responsible": {},
			"docno": "1",
			"approved": {},
			"checked": {},
			"date": {},
			"rev": "A",
			"file": "array.xml"
		},
		"module": {
			"since": "",
			"$t": "array"
		},
		"modulesummary": "Functional, extendible arrays.",
		"description": {
			"p": [
				"Functional, extendible arrays. Arrays can have fixed size, or can grow automatically as needed. A default value is used for entries that have not been explicitly set.",
				{
					"em": "zero"
				},
				{
					"c": "undefined",
					"seealso": {
						"marker": "#reset-2",
						"c": "reset/2"
					}
				},
				{
					"c": [
						"I",
						"I"
					],
					"seealso": {
						"marker": "#resize-2",
						"c": "resize/2"
					}
				},
				{
					"em": "Examples:"
				},
				{
					"c": "undefined"
				},
				{
					"c": "true"
				},
				"Read back a stored value:",
				"Accessing an unset entry returns default value:",
				"Accessing an entry beyond the last set entry also returns the default value, if the array does not have fixed size:",
				"\"Sparse\" functions ignore default-valued entries:",
				"An extendible array can be made fixed-size later:",
				"A fixed-size array does not grow automatically and does not allow accesses beyond the last set entry:"
			],
			"pre": [
				"A0 = array:new(10).10 = array:size(A0).",
				"A1 = array:set(17, true, array:new()).18 = array:size(A1).",
				"true = array:get(17, A1).",
				"undefined = array:get(3, A1)",
				"undefined = array:get(18, A1).",
				"A2 = array:set(4, false, A1).[{4, false}, {17, true}] = array:sparse_to_orddict(A2).",
				"A3 = array:fix(A2).",
				"{'EXIT',{badarg,_}} = (catch array:set(18, true, A3)).{'EXIT',{badarg,_}} = (catch array:get(18, A3))."
			]
		},
		"datatypes": {
			"datatype": [
				{
					"name": {
						"name": "array",
						"n_vars": "1"
					},
					"desc": {
						"p": "A functional, extendible array. The representation is not documented and is subject to change without notice. Notice that arrays cannot be directly compared for equality."
					}
				},
				{
					"name": {
						"name": "array",
						"n_vars": "0"
					}
				},
				{
					"name": {
						"name": "array_indx"
					}
				},
				{
					"name": {
						"name": "array_opts"
					}
				},
				{
					"name": {
						"name": "array_opt"
					}
				},
				{
					"name": {
						"name": "indx_pairs"
					}
				},
				{
					"name": {
						"name": "indx_pair"
					}
				}
			]
		},
		"funcs": {
			"func": [
				{
					"name": {
						"name": "default",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Get the value used for uninitialized entries.",
					"desc": {
						"marker": {
							"id": "default-1"
						},
						"p": [
							"Gets the value used for uninitialized entries.",
							{
								"seealso": {
									"marker": "#new-2",
									"c": "new/2"
								}
							}
						]
					}
				},
				{
					"name": {
						"name": "fix",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Fix the array size.",
					"desc": {
						"marker": {
							"id": "fix-1"
						},
						"p": [
							"Fixes the array size. This prevents it from growing automatically upon insertion.",
							{
								"seealso": [
									{
										"marker": "#set-3",
										"c": "set/3"
									},
									{
										"marker": "#relax-1",
										"c": "relax/1"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "foldl",
						"arity": "3",
						"since": ""
					},
					"fsummary": "Fold the array elements using the specified function and initial accumulator value.",
					"desc": {
						"marker": {
							"id": "foldl-3"
						},
						"p": [
							{
								"c": [
									{
										"anno": "Function"
									},
									"badarg"
								]
							},
							{
								"seealso": [
									{
										"marker": "#foldr-3",
										"c": "foldr/3"
									},
									{
										"marker": "#map-2",
										"c": "map/2"
									},
									{
										"marker": "#sparse_foldl-3",
										"c": "sparse_foldl/3"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "foldr",
						"arity": "3",
						"since": ""
					},
					"fsummary": "Fold the array elements right-to-left using the specified function and initial accumulator value.",
					"desc": {
						"marker": {
							"id": "foldr-3"
						},
						"p": [
							{
								"c": [
									{
										"anno": "Function"
									},
									"badarg"
								]
							},
							{
								"seealso": [
									{
										"marker": "#foldl-3",
										"c": "foldl/3"
									},
									{
										"marker": "#map-2",
										"c": "map/2"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "from_list",
						"arity": "1",
						"since": ""
					},
					"fsummary": {
						"c": "from_list(List, undefined)"
					},
					"desc": {
						"marker": {
							"id": "from_list-1"
						},
						"p": {
							"seealso": {
								"marker": "#from_list-2",
								"c": {
									"anno": "List"
								}
							}
						}
					}
				},
				{
					"name": {
						"name": "from_list",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Convert a list to an extendible array.",
					"desc": {
						"marker": {
							"id": "from_list-2"
						},
						"p": [
							{
								"c": [
									{
										"anno": "Default"
									},
									{
										"anno": "List"
									},
									"badarg"
								]
							},
							{
								"seealso": [
									{
										"marker": "#new-2",
										"c": "new/2"
									},
									{
										"marker": "#to_list-1",
										"c": "to_list/1"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "from_orddict",
						"arity": "1",
						"since": ""
					},
					"fsummary": {
						"c": "from_orddict(Orddict, undefined)"
					},
					"desc": {
						"marker": {
							"id": "from_orddict-1"
						},
						"p": {
							"seealso": {
								"marker": "#from_orddict-2",
								"c": {
									"anno": "Orddict"
								}
							}
						}
					}
				},
				{
					"name": {
						"name": "from_orddict",
						"arity": "2",
						"since": ""
					},
					"fsummary": {
						"c": "{Index, Value}"
					},
					"desc": {
						"marker": {
							"id": "from_orddict-2"
						},
						"p": [
							{
								"c": [
									{
										"anno": "Value"
									},
									{
										"anno": "Default"
									},
									{
										"anno": "Orddict"
									},
									"badarg"
								]
							},
							{
								"seealso": [
									{
										"marker": "#new-2",
										"c": "new/2"
									},
									{
										"marker": "#to_orddict-1",
										"c": "to_orddict/1"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "get",
						"arity": "2",
						"since": ""
					},
					"fsummary": {
						"c": "I"
					},
					"desc": {
						"marker": {
							"id": "get-2"
						},
						"p": [
							{
								"c": [
									{
										"anno": "I"
									},
									{
										"anno": "I"
									},
									{
										"anno": "I"
									},
									"badarg"
								]
							},
							{
								"c": [
									{
										"anno": "I"
									},
									{
										"anno": "Array"
									}
								]
							},
							{
								"seealso": {
									"marker": "#set-3",
									"c": "set/3"
								}
							}
						]
					}
				},
				{
					"name": {
						"name": "is_array",
						"arity": "1",
						"since": ""
					},
					"fsummary": {
						"c": [
							"true",
							"X",
							"false"
						]
					},
					"desc": {
						"marker": {
							"id": "is_array-1"
						},
						"p": {
							"c": [
								"true",
								{
									"anno": "X"
								},
								"false",
								{
									"anno": "X"
								},
								"true"
							]
						}
					}
				},
				{
					"name": {
						"name": "is_fix",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Check if the array has fixed size.",
					"desc": {
						"marker": {
							"id": "is_fix-1"
						},
						"p": [
							{
								"c": [
									"true",
									"false"
								]
							},
							{
								"seealso": {
									"marker": "#fix-1",
									"c": "fix/1"
								}
							}
						]
					}
				},
				{
					"name": {
						"name": "map",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Map the specified function onto each array element.",
					"desc": {
						"marker": {
							"id": "map-2"
						},
						"p": [
							{
								"c": [
									{
										"anno": "Function"
									},
									"badarg"
								]
							},
							{
								"seealso": [
									{
										"marker": "#foldl-3",
										"c": "foldl/3"
									},
									{
										"marker": "#foldr-3",
										"c": "foldr/3"
									},
									{
										"marker": "#sparse_map-2",
										"c": "sparse_map/2"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "new",
						"arity": "0",
						"since": ""
					},
					"fsummary": "Create a new, extendible array with initial size zero.",
					"desc": {
						"marker": {
							"id": "new-0"
						},
						"p": [
							"Creates a new, extendible array with initial size zero.",
							{
								"seealso": [
									{
										"marker": "#new-1",
										"c": "new/1"
									},
									{
										"marker": "#new-2",
										"c": "new/2"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "new",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Create a new array according to the specified options.",
					"desc": {
						"marker": {
							"id": "new-1"
						},
						"p": [
							{
								"c": "0"
							},
							{
								"c": {
									"anno": "Options"
								}
							},
							"Options are processed in the order they occur in the list, that is, later options have higher precedence.",
							"The default value is used as the value of uninitialized entries, and cannot be changed once the array has been created.",
							{
								"em": "Examples:"
							},
							"creates a fixed-size array of size 100.",
							{
								"c": "0"
							},
							{
								"c": "-1"
							},
							{
								"seealso": [
									{
										"marker": "#fix-1",
										"c": "fix/1"
									},
									{
										"marker": "#from_list-2",
										"c": "from_list/2"
									},
									{
										"marker": "#get-2",
										"c": "get/2"
									},
									{
										"marker": "#new-0",
										"c": "new/0"
									},
									{
										"marker": "#new-2",
										"c": "new/2"
									},
									{
										"marker": "#set-3",
										"c": "set/3"
									}
								]
							}
						],
						"taglist": {
							"tag": [
								{
									"c": [
										"N::integer() >= 0",
										"{size, N::integer() >= 0}"
									]
								},
								{
									"c": [
										"fixed",
										"{fixed, true}"
									]
								},
								{
									"c": "{fixed, false}"
								},
								{
									"c": "{default, Value}"
								}
							],
							"item": [
								{
									"p": {
										"c": [
											"{fixed, true}",
											"N",
											"badarg"
										]
									}
								},
								{
									"p": {
										"seealso": {
											"marker": "#fix-1",
											"c": "fix/1"
										}
									}
								},
								{
									"p": "Creates an extendible (non-fixed-size) array."
								},
								{
									"p": {
										"c": "Value"
									}
								}
							]
						},
						"pre": [
							"array:new(100)",
							"array:new({default,0})",
							"array:new([{size,10},{fixed,false},{default,-1}])"
						]
					}
				},
				{
					"name": {
						"name": "new",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Create a new array according to the specified size and options.",
					"desc": {
						"marker": {
							"id": "new-2"
						},
						"p": [
							{
								"c": [
									{
										"anno": "Size"
									},
									"badarg",
									{
										"anno": "Options"
									},
									{
										"anno": "Size"
									}
								]
							},
							{
								"c": [
									{
										"anno": "Options"
									},
									{
										"anno": [
											"Size",
											"Options"
										]
									},
									{
										"anno": [
											"Size",
											"Options"
										]
									}
								]
							},
							{
								"em": "Example:"
							},
							{
								"c": "0"
							},
							{
								"seealso": {
									"marker": "#new-1",
									"c": "new/1"
								}
							}
						],
						"pre": "array:new(100, {default,0})"
					}
				},
				{
					"name": {
						"name": "relax",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Make the array resizable.",
					"desc": {
						"marker": {
							"id": "relax-1"
						},
						"p": [
							{
								"seealso": {
									"marker": "#fix-1",
									"c": "fix/1"
								}
							},
							{
								"seealso": {
									"marker": "#fix-1",
									"c": "fix/1"
								}
							}
						]
					}
				},
				{
					"name": {
						"name": "reset",
						"arity": "2",
						"since": ""
					},
					"fsummary": {
						"c": "I"
					},
					"desc": {
						"marker": {
							"id": "reset-2"
						},
						"p": [
							{
								"c": [
									{
										"anno": "I"
									},
									{
										"anno": "I"
									}
								],
								"seealso": {
									"marker": "#resize-2",
									"c": "resize/2"
								}
							},
							{
								"c": [
									{
										"anno": "I"
									},
									{
										"anno": "I"
									},
									"badarg"
								],
								"seealso": {
									"marker": "#set-3",
									"c": "set/3"
								}
							},
							{
								"seealso": [
									{
										"marker": "#new-2",
										"c": "new/2"
									},
									{
										"marker": "#set-3",
										"c": "set/3"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "resize",
						"arity": "1",
						"since": ""
					},
					"fsummary": {
						"c": "sparse_size/1"
					},
					"desc": {
						"marker": {
							"id": "resize-1"
						},
						"p": [
							{
								"seealso": {
									"marker": "#sparse_size-1",
									"c": "sparse_size/1"
								}
							},
							{
								"seealso": [
									{
										"marker": "#resize-2",
										"c": "resize/2"
									},
									{
										"marker": "#sparse_size-1",
										"c": "sparse_size/1"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "resize",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Change the array size.",
					"desc": {
						"marker": {
							"id": "resize-2"
						},
						"p": {
							"c": [
								{
									"anno": "Size"
								},
								"badarg"
							]
						}
					}
				},
				{
					"name": {
						"name": "set",
						"arity": "3",
						"since": ""
					},
					"fsummary": {
						"c": [
							"I",
							"Value"
						]
					},
					"desc": {
						"marker": {
							"id": "set-3"
						},
						"p": [
							{
								"c": [
									{
										"anno": "I"
									},
									{
										"anno": "Value"
									},
									{
										"anno": "I"
									},
									{
										"anno": "I"
									},
									"badarg"
								]
							},
							{
								"c": [
									{
										"anno": "I"
									},
									{
										"anno": "Array"
									},
									{
										"anno": "I"
									}
								]
							},
							{
								"seealso": [
									{
										"marker": "#get-2",
										"c": "get/2"
									},
									{
										"marker": "#reset-2",
										"c": "reset/2"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "size",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Get the number of entries in the array.",
					"desc": {
						"marker": {
							"id": "size-1"
						},
						"p": [
							{
								"c": [
									"0",
									{
										"anno": "Array"
									}
								]
							},
							{
								"seealso": [
									{
										"marker": "#set-3",
										"c": "set/3"
									},
									{
										"marker": "#sparse_size-1",
										"c": "sparse_size/1"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "sparse_foldl",
						"arity": "3",
						"since": ""
					},
					"fsummary": "Fold the array elements using the specified function and initial accumulator value, skipping default-valued entries.",
					"desc": {
						"marker": {
							"id": "sparse_foldl-3"
						},
						"p": [
							{
								"c": [
									{
										"anno": "Function"
									},
									"badarg"
								]
							},
							{
								"seealso": [
									{
										"marker": "#foldl-3",
										"c": "foldl/3"
									},
									{
										"marker": "#sparse_foldr-3",
										"c": "sparse_foldr/3"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "sparse_foldr",
						"arity": "3",
						"since": ""
					},
					"fsummary": "Fold the array elements right-to-left using the specified function and initial accumulator value, skipping default-valued entries.",
					"desc": {
						"marker": {
							"id": "sparse_foldr-3"
						},
						"p": [
							{
								"c": [
									{
										"anno": "Function"
									},
									"badarg"
								]
							},
							{
								"seealso": [
									{
										"marker": "#foldr-3",
										"c": "foldr/3"
									},
									{
										"marker": "#sparse_foldl-3",
										"c": "sparse_foldl/3"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "sparse_map",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Map the specified function onto each array element, skipping default-valued entries.",
					"desc": {
						"marker": {
							"id": "sparse_map-2"
						},
						"p": [
							{
								"c": [
									{
										"anno": "Function"
									},
									"badarg"
								]
							},
							{
								"seealso": {
									"marker": "#map-2",
									"c": "map/2"
								}
							}
						]
					}
				},
				{
					"name": {
						"name": "sparse_size",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Get the number of entries in the array up until the last non-default-valued entry.",
					"desc": {
						"marker": {
							"id": "sparse_size-1"
						},
						"p": [
							{
								"c": [
									"I+1",
									"I"
								]
							},
							{
								"seealso": [
									{
										"marker": "#resize-1",
										"c": "resize/1"
									},
									{
										"marker": "#size-1",
										"c": "size/1"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "sparse_to_list",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Convert the array to a list, skipping default-valued entries.",
					"desc": {
						"marker": {
							"id": "sparse_to_list-1"
						},
						"p": [
							"Converts the array to a list, skipping default-valued entries.",
							{
								"seealso": {
									"marker": "#to_list-1",
									"c": "to_list/1"
								}
							}
						]
					}
				},
				{
					"name": {
						"name": "sparse_to_orddict",
						"arity": "1",
						"since": ""
					},
					"fsummary": {
						"c": "{Index, Value}"
					},
					"desc": {
						"marker": {
							"id": "sparse_to_orddict-1"
						},
						"p": [
							{
								"c": {
									"anno": "Value"
								}
							},
							{
								"seealso": {
									"marker": "#to_orddict-1",
									"c": "to_orddict/1"
								}
							}
						]
					}
				},
				{
					"name": {
						"name": "to_list",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Convert the array to a list.",
					"desc": {
						"marker": {
							"id": "to_list-1"
						},
						"p": [
							"Converts the array to a list.",
							{
								"seealso": [
									{
										"marker": "#from_list-2",
										"c": "from_list/2"
									},
									{
										"marker": "#sparse_to_list-1",
										"c": "sparse_to_list/1"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "to_orddict",
						"arity": "1",
						"since": ""
					},
					"fsummary": {
						"c": "{Index, Value}"
					},
					"desc": {
						"marker": {
							"id": "to_orddict-1"
						},
						"p": [
							{
								"c": {
									"anno": "Value"
								}
							},
							{
								"seealso": [
									{
										"marker": "#from_orddict-2",
										"c": "from_orddict/2"
									},
									{
										"marker": "#sparse_to_orddict-1",
										"c": "sparse_to_orddict/1"
									}
								]
							}
						]
					}
				}
			]
		}
	}
}