{
	"erlref": {
		"header": {
			"copyright": {
				"year": [
					"1996",
					"2016"
				],
				"holder": "Ericsson AB, All Rights Reserved"
			},
			"legalnotice": "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. The Initial Developer of the Original Code is Ericsson AB.",
			"title": "erl_internal",
			"prepared": "Robert Virding",
			"responsible": "Bjarne Dcker",
			"docno": "1",
			"approved": "Bjarne Dcker",
			"checked": {},
			"date": "1997-01-21",
			"rev": "B",
			"file": "erl_internal.xml"
		},
		"module": {
			"since": "",
			"$t": "erl_internal"
		},
		"modulesummary": "Internal Erlang definitions.",
		"description": {
			"p": "This module defines Erlang BIFs, guard tests, and operators. This module is only of interest to programmers who manipulate Erlang code."
		},
		"funcs": {
			"func": [
				{
					"name": {
						"name": "add_predefined_functions",
						"arity": "1",
						"since": "OTP 20.0"
					},
					"fsummary": "Add code for pre-defined functions.",
					"desc": {
						"p": {
							"c": [
								{
									"anno": "Forms"
								},
								"module_info/0"
							]
						}
					}
				},
				{
					"name": {
						"name": "arith_op",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Test for an arithmetic operator.",
					"desc": {
						"p": {
							"c": [
								"true",
								{
									"anno": [
										"OpName",
										"Arity"
									]
								},
								"false"
							]
						}
					}
				},
				{
					"name": {
						"name": "bif",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Test for an Erlang BIF.",
					"desc": {
						"p": {
							"c": [
								"true",
								{
									"anno": [
										"Name",
										"Arity"
									]
								},
								"false"
							]
						}
					}
				},
				{
					"name": {
						"name": "bool_op",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Test for a Boolean operator.",
					"desc": {
						"p": {
							"c": [
								"true",
								{
									"anno": [
										"OpName",
										"Arity"
									]
								},
								"false"
							]
						}
					}
				},
				{
					"name": {
						"name": "comp_op",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Test for a comparison operator.",
					"desc": {
						"p": {
							"c": [
								"true",
								{
									"anno": [
										"OpName",
										"Arity"
									]
								},
								"false"
							]
						}
					}
				},
				{
					"name": {
						"name": "guard_bif",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Test for an Erlang BIF allowed in guards.",
					"desc": {
						"p": {
							"c": [
								"true",
								{
									"anno": [
										"Name",
										"Arity"
									]
								},
								"false"
							]
						}
					}
				},
				{
					"name": {
						"name": "list_op",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Test for a list operator.",
					"desc": {
						"p": {
							"c": [
								"true",
								{
									"anno": [
										"OpName",
										"Arity"
									]
								},
								"false"
							]
						}
					}
				},
				{
					"name": {
						"name": "op_type",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Return operator type.",
					"desc": {
						"p": {
							"c": [
								{
									"anno": "Type"
								},
								{
									"anno": [
										"OpName",
										"Arity"
									]
								},
								"function_clause"
							]
						}
					}
				},
				{
					"name": {
						"name": "send_op",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Test for a send operator.",
					"desc": {
						"p": {
							"c": [
								"true",
								{
									"anno": [
										"OpName",
										"Arity"
									]
								},
								"false"
							]
						}
					}
				},
				{
					"name": {
						"name": "type_test",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Test for a valid type test.",
					"desc": {
						"p": {
							"c": [
								"true",
								{
									"anno": [
										"Name",
										"Arity"
									]
								},
								"false"
							]
						}
					}
				}
			]
		}
	}
}