{
	"erlref": {
		"header": {
			"copyright": {
				"year": [
					"1996",
					"2016"
				],
				"holder": "Ericsson AB, All Rights Reserved"
			},
			"legalnotice": "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. The Initial Developer of the Original Code is Ericsson AB.",
			"title": "erl_id_trans",
			"prepared": "Robert Virding",
			"responsible": "Bjarne Dcker",
			"docno": "1",
			"approved": "Bjarne Dcker",
			"checked": {},
			"date": "1997-01-21",
			"rev": "B",
			"file": "erl_id_trans.xml"
		},
		"module": {
			"since": "",
			"$t": "erl_id_trans"
		},
		"modulesummary": "An identity parse transform.",
		"description": {
			"p": {
				"c": [
					"{parse_transform,Module}",
					"parse_transform/2"
				]
			}
		},
		"funcs": {
			"func": {
				"name": {
					"since": "",
					"$t": "parse_transform(Forms, Options) -> Forms"
				},
				"fsummary": "Transform Erlang forms.",
				"type": {
					"v": [
						{
							"seealso": [
								{
									"marker": "erl_parse#type-abstract_form",
									"$t": "erl_parse:abstract_form()"
								},
								{
									"marker": "erl_parse#type-form_info",
									"$t": "erl_parse:form_info()"
								}
							]
						},
						{
							"seealso": {
								"marker": "compile#type-option",
								"$t": "compile:option()"
							}
						}
					]
				},
				"desc": {
					"p": "Performs an identity transformation on Erlang forms, as an example."
				}
			}
		},
		"section": [
			{
				"title": "Parse Transformations",
				"p": "Parse transformations are used if a programmer wants to use Erlang syntax, but with different semantics. The original Erlang code is then transformed into other Erlang code.",
				"note": {
					"p": "Programmers are strongly advised not to engage in parse transformations. No support is offered for problems encountered."
				}
			},
			{
				"title": "See Also",
				"p": {
					"seealso": [
						{
							"marker": "erl_parse",
							"c": "erl_parse(3)"
						},
						{
							"marker": "compiler:compile",
							"c": "compile(3)"
						}
					]
				}
			}
		]
	}
}