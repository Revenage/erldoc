{
	"erlref": {
		"header": {
			"copyright": {
				"year": [
					"1996",
					"2016"
				],
				"holder": "Ericsson AB. All Rights Reserved."
			},
			"legalnotice": "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.",
			"title": "erl_eval",
			"prepared": "Robert Virding",
			"responsible": "Bjarne Dcker",
			"docno": "1",
			"approved": "Bjarne Dcker",
			"checked": {},
			"date": "1997-01-21",
			"rev": "B",
			"file": "erl_eval.xml"
		},
		"module": {
			"since": "",
			"$t": "erl_eval"
		},
		"modulesummary": "The Erlang meta interpreter.",
		"description": {
			"p": {
				"seealso": [
					{
						"marker": "erl_parse",
						"c": "erl_parse"
					},
					{
						"marker": "io",
						"c": "io"
					}
				]
			}
		},
		"datatypes": {
			"datatype": [
				{
					"name": {
						"name": "bindings"
					}
				},
				{
					"name": {
						"name": "binding_struct"
					},
					"desc": {
						"p": "A binding structure."
					}
				},
				{
					"name": {
						"name": "expression"
					}
				},
				{
					"name": {
						"name": "expressions"
					},
					"desc": {
						"p": {
							"seealso": [
								{
									"marker": "erl_parse#parse_exprs/1",
									"c": "erl_parse:parse_exprs/1"
								},
								{
									"marker": "io#parse_erl_exprs/2",
									"c": "io:parse_erl_exprs/2"
								}
							]
						}
					}
				},
				{
					"name": {
						"name": "expression_list"
					}
				},
				{
					"name": {
						"name": "func_spec"
					}
				},
				{
					"name": {
						"name": "lfun_eval_handler"
					}
				},
				{
					"name": {
						"name": "lfun_value_handler"
					}
				},
				{
					"name": {
						"name": "local_function_handler"
					},
					"desc": {
						"p": {
							"seealso": {
								"marker": "#local_function_handler",
								"$t": "Local Function Handler"
							}
						}
					}
				},
				{
					"name": {
						"name": "name"
					}
				},
				{
					"name": {
						"name": "nlfun_handler"
					}
				},
				{
					"name": {
						"name": "non_local_function_handler"
					},
					"desc": {
						"p": {
							"seealso": {
								"marker": "#non_local_function_handler",
								"$t": "Non-Local Function Handler"
							}
						}
					}
				},
				{
					"name": {
						"name": "value"
					}
				}
			]
		},
		"funcs": {
			"func": [
				{
					"name": {
						"name": "add_binding",
						"arity": "3",
						"since": ""
					},
					"fsummary": "Add a binding.",
					"desc": {
						"p": {
							"c": [
								{
									"anno": [
										"Name",
										"Value"
									]
								},
								{
									"anno": "BindingStruct"
								}
							]
						}
					}
				},
				{
					"name": {
						"name": "binding",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Return bindings.",
					"desc": {
						"p": {
							"c": [
								{
									"anno": "Name"
								},
								{
									"anno": "BindingStruct"
								}
							]
						}
					}
				},
				{
					"name": {
						"name": "bindings",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Return bindings.",
					"desc": {
						"p": "Returns the list of bindings contained in the binding structure."
					}
				},
				{
					"name": {
						"name": "del_binding",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Delete a binding.",
					"desc": {
						"p": {
							"c": [
								{
									"anno": "Name"
								},
								{
									"anno": "BindingStruct"
								}
							]
						}
					}
				},
				{
					"name": [
						{
							"name": "expr",
							"arity": "2",
							"since": ""
						},
						{
							"name": "expr",
							"arity": "3",
							"since": ""
						},
						{
							"name": "expr",
							"arity": "4",
							"since": ""
						},
						{
							"name": "expr",
							"arity": "5",
							"since": ""
						}
					],
					"fsummary": "Evaluate expression.",
					"desc": {
						"p": [
							{
								"c": [
									{
										"anno": "Expression"
									},
									{
										"anno": "Bindings"
									},
									{
										"anno": "Expression"
									},
									{
										"anno": "LocalFunctionHandler"
									},
									{
										"anno": "NonLocalFunctionHandler"
									}
								],
								"seealso": [
									{
										"marker": "#local_function_handler",
										"$t": "Local Function Handler"
									},
									{
										"marker": "#non_local_function_handler",
										"$t": "Non-Local Function Handler"
									}
								]
							},
							{
								"c": [
									{
										"anno": [
											"Value",
											"NewBindings"
										]
									},
									{
										"anno": "ReturnFormat"
									},
									"value",
									{
										"anno": "Value"
									}
								]
							}
						]
					}
				},
				{
					"name": [
						{
							"name": "expr_list",
							"arity": "2",
							"since": ""
						},
						{
							"name": "expr_list",
							"arity": "3",
							"since": ""
						},
						{
							"name": "expr_list",
							"arity": "4",
							"since": ""
						}
					],
					"fsummary": "Evaluate a list of expressions.",
					"desc": {
						"p": [
							{
								"c": "LocalFunctionHandler",
								"seealso": {
									"marker": "#local_function_handler",
									"$t": "Local Function Handler"
								}
							},
							{
								"c": {
									"anno": [
										"ValueList",
										"NewBindings"
									]
								}
							}
						]
					}
				},
				{
					"name": [
						{
							"name": "exprs",
							"arity": "2",
							"since": ""
						},
						{
							"name": "exprs",
							"arity": "3",
							"since": ""
						},
						{
							"name": "exprs",
							"arity": "4",
							"since": ""
						}
					],
					"fsummary": "Evaluate expressions.",
					"desc": {
						"p": [
							{
								"c": [
									{
										"anno": "Expressions"
									},
									{
										"anno": "Bindings"
									},
									{
										"anno": "Expressions"
									},
									{
										"anno": "LocalFunctionHandler"
									},
									{
										"anno": "NonLocalFunctionHandler"
									}
								],
								"seealso": [
									{
										"marker": "io#parse_erl_exprs/2",
										"c": "io:parse_erl_exprs/2"
									},
									{
										"marker": "#local_function_handler",
										"$t": "Local Function Handler"
									},
									{
										"marker": "#non_local_function_handler",
										"$t": "Non-Local Function Handler"
									}
								]
							},
							{
								"c": {
									"anno": [
										"Value",
										"NewBindings"
									]
								}
							}
						]
					}
				},
				{
					"name": {
						"name": "new_bindings",
						"arity": "0",
						"since": ""
					},
					"fsummary": "Return a bindings structure.",
					"desc": {
						"p": "Returns an empty binding structure."
					}
				}
			]
		},
		"section": [
			{
				"marker": {
					"id": "local_function_handler"
				},
				"title": "Local Function Handler",
				"p": {
					"c": "LocalFunctionHandler"
				},
				"taglist": {
					"tag": [
						{
							"c": "{value,Func}"
						},
						{
							"c": "{eval,Func}"
						},
						{
							"c": "none"
						}
					],
					"item": [
						{
							"p": [
								"This defines a local function handler that is called with:",
								{
									"c": [
										"Name",
										"Arguments",
										"exit/1"
									],
									"em": "evaluated"
								}
							],
							"code": {
								"type": "none",
								"$t": "Func(Name, Arguments)"
							}
						},
						{
							"p": [
								"This defines a local function handler that is called with:",
								{
									"c": [
										"Name",
										"Arguments",
										"Bindings"
									],
									"em": "unevaluated"
								},
								{
									"c": [
										"Value",
										"NewBindings",
										"exit/1"
									]
								}
							],
							"code": [
								{
									"type": "none",
									"$t": "Func(Name, Arguments, Bindings)"
								},
								{
									"type": "none",
									"$t": "{value,Value,NewBindings}"
								}
							]
						},
						{
							"p": "There is no local function handler."
						}
					]
				}
			},
			{
				"marker": {
					"id": "non_local_function_handler"
				},
				"title": "Non-Local Function Handler",
				"p": [
					{
						"c": "NonLocalFunctionHandler"
					},
					{
						"c": "erlang:apply/2,3"
					},
					{
						"c": "exit/1"
					}
				],
				"list": {
					"type": "bulleted",
					"item": [
						{
							"p": "A functional object (fun) is called."
						},
						{
							"p": "A built-in function is called."
						},
						{
							"p": {
								"c": [
									"M:F",
									"M",
									"F"
								]
							}
						},
						{
							"p": {
								"c": [
									"Op/A",
									"erlang:Op/A"
								]
							}
						}
					]
				},
				"taglist": {
					"tag": [
						{
							"c": "{value,Func}"
						},
						{
							"c": "none"
						}
					],
					"item": [
						{
							"p": [
								"This defines a non-local function handler that is called with:",
								{
									"c": [
										"FuncSpec",
										"{Module,Function}",
										"Arguments",
										"exit/1"
									],
									"em": "evaluated"
								}
							],
							"code": {
								"type": "none",
								"$t": "Func(FuncSpec, Arguments)"
							}
						},
						{
							"p": "There is no non-local function handler."
						}
					]
				},
				"note": {
					"p": [
						{
							"c": [
								"erlang:apply(Fun, Args)",
								"erlang:apply(Module, Function, Args)",
								"erlang:apply/2,3",
								"Func({erlang, apply}, [Fun, Args])",
								"Func({erlang, apply}, [Module, Function, Args])"
							]
						},
						{
							"em": "is",
							"c": [
								"erlang:apply/2,3",
								"Func(Fun, Args)",
								"Func({Module, Function}, Args)",
								"{Module, Function}",
								"{erlang, apply}"
							]
						},
						{
							"c": "\"fun ... end\""
						}
					]
				}
			},
			{
				"title": "Known Limitation",
				"p": "Undocumented functions in this module are not to be used."
			}
		]
	}
}