{"name":"array","summary":"Functional, extendible arrays.","description":"<p> </p><p>Functional, extendible arrays. Arrays can have fixed size, or can grow automatically as needed. A default value is used for entries that have not been explicitly set.</p> <p>Arrays uses <strong>zero</strong>-based indexing. This is a deliberate design choice and differs from other Erlang data structures, for example, tuples.</p> <p>Unless specified by the user when the array is created, the default value is the atom <span class=\"code\">undefined</span>. There is no difference between an unset entry and an entry that has been explicitly set to the same value as the default one (compare <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#reset-2\"><span class=\"code\">reset/2</span></a></span>). If you need to differentiate between unset and set entries, ensure that the default value cannot be confused with the values of set entries.</p> <p>The array never shrinks automatically. If an index <span class=\"code\">I</span> has been used to set an entry successfully, all indices in the range [0,<span class=\"code\">I</span>] stay accessible unless the array size is explicitly changed by calling <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#resize-2\"><span class=\"code\">resize/2</span></a></span>.</p> <p><strong>Examples:</strong></p> <p>Create a fixed-size array with entries 0-9 set to <span class=\"code\">undefined</span>:</p> <div class=\"example\"><pre>A0 = array:new(10).10 = array:size(A0).</pre></div> <p>Create an extendible array and set entry 17 to <span class=\"code\">true</span>, causing the array to grow automatically:</p> <div class=\"example\"><pre>A1 = array:set(17, true, array:new()).18 = array:size(A1).</pre></div> <p>Read back a stored value:</p> <div class=\"example\"><pre>true = array:get(17, A1).</pre></div> <p>Accessing an unset entry returns default value:</p> <div class=\"example\"><pre>undefined = array:get(3, A1)</pre></div> <p>Accessing an entry beyond the last set entry also returns the default value, if the array does not have fixed size:</p> <div class=\"example\"><pre>undefined = array:get(18, A1).</pre></div> <p>&quot;Sparse&quot; functions ignore default-valued entries:</p> <div class=\"example\"><pre>A2 = array:set(4, false, A1).[{4, false}, {17, true}] = array:sparse_to_orddict(A2).</pre></div> <p>An extendible array can be made fixed-size later:</p> <div class=\"example\"><pre>A3 = array:fix(A2).</pre></div> <p>A fixed-size array does not grow automatically and does not allow accesses beyond the last set entry:</p> <div class=\"example\"><pre>{&apos;EXIT&apos;,{badarg,_}} = (catch array:set(18, true, A3)).{&apos;EXIT&apos;,{badarg,_}} = (catch array:get(18, A3)).</pre></div> <p></p>","funcs":" <a name=\"default-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-default-1-id343207\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L139\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>default(Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt; Value :: Type</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"default-1\"></a> </p><p>Gets the value used for uninitialized entries.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#new-2\"><span class=\"code\">new/2</span></a></span>.</p> <p></p></div> <a name=\"fix-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-fix-1-id342791\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L148\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>fix(Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt; <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"fix-1\"></a> </p><p>Fixes the array size. This prevents it from growing automatically upon insertion.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#set-3\"><span class=\"code\">set/3</span></a></span> and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#relax-1\"><span class=\"code\">relax/1</span></a></span>.</p> <p></p></div> <a name=\"foldl-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-foldl-3-id343210\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L159\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>foldl(Function, InitialAcc :: A, Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt; B</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Function = <br>&#xA0;&#xA0;&#xA0;&#xA0;fun((Index :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array_indx\">array_indx()</a></span>, Value :: Type, Acc :: A) -&gt; B)</span></div></div><div class=\"REFBODY rb-7\"><p><a name=\"foldl-3\"></a> </p><p>Folds the array elements using the specified function and initial accumulator value. The elements are visited in order from the lowest index to the highest. If <span class=\"code\">Function</span> is not a function, the call fails with reason <span class=\"code\">badarg</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#foldr-3\"><span class=\"code\">foldr/3</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#map-2\"><span class=\"code\">map/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sparse_foldl-3\"><span class=\"code\">sparse_foldl/3</span></a></span>.</p> <p></p></div> <a name=\"foldr-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-foldr-3-id354660\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L174\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>foldr(Function, InitialAcc :: A, Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt; B</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Function = <br>&#xA0;&#xA0;&#xA0;&#xA0;fun((Index :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array_indx\">array_indx()</a></span>, Value :: Type, Acc :: A) -&gt; B)</span></div></div><div class=\"REFBODY rb-7\"><p><a name=\"foldr-3\"></a> </p><p>Folds the array elements right-to-left using the specified function and initial accumulator value. The elements are visited in order from the highest index to the lowest. If <span class=\"code\">Function</span> is not a function, the call fails with reason <span class=\"code\">badarg</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#foldl-3\"><span class=\"code\">foldl/3</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#map-2\"><span class=\"code\">map/2</span></a></span>.</p> <p></p></div> <a name=\"from_list-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-from_list-1-id342792\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L188\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>from_list(List :: [Value :: Type]) -&gt; <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"from_list-1\"></a> </p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#from_list-2\"><span class=\"code\">from_list(List, undefined)</span></a></span>.</p> <p></p></div> <a name=\"from_list-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-from_list-2-id350103\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L197\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>from_list(List :: [Value :: Type], Default :: term()) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"from_list-2\"></a> </p><p>Converts a list to an extendible array. <span class=\"code\">Default</span> is used as the value for uninitialized entries of the array. If <span class=\"code\">List</span> is not a proper list, the call fails with reason <span class=\"code\">badarg</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#new-2\"><span class=\"code\">new/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#to_list-1\"><span class=\"code\">to_list/1</span></a></span>.</p> <p></p></div> <a name=\"from_orddict-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-from_orddict-1-id350116\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L210\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>from_orddict(Orddict :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-indx_pairs\">indx_pairs</a></span>(Value :: Type)) -&gt; <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"from_orddict-1\"></a> </p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#from_orddict-2\"><span class=\"code\">from_orddict(Orddict, undefined)</span></a></span>.</p> <p></p></div> <a name=\"from_orddict-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-from_orddict-2-id358325\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L220\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>from_orddict(Orddict :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-indx_pairs\">indx_pairs</a></span>(Value :: Type),<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Default :: Type) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"from_orddict-2\"></a> </p><p>Converts an ordered list of pairs <span class=\"code\">{Index, Value}</span> to a corresponding extendible array. <span class=\"code\">Default</span> is used as the value for uninitialized entries of the array. If <span class=\"code\">Orddict</span> is not a proper, ordered list of pairs whose first elements are non-negative integers, the call fails with reason <span class=\"code\">badarg</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#new-2\"><span class=\"code\">new/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#to_orddict-1\"><span class=\"code\">to_orddict/1</span></a></span>.</p> <p></p></div> <a name=\"get-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get-2-id358458\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L236\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get(I :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array_indx\">array_indx()</a></span>, Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt; Value :: Type</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"get-2\"></a> </p><p>Gets the value of entry <span class=\"code\">I</span>. If <span class=\"code\">I</span> is not a non-negative integer, or if the array has fixed size and <span class=\"code\">I</span> is larger than the maximum index, the call fails with reason <span class=\"code\">badarg</span>.</p> <p>If the array does not have fixed size, the default value for any index <span class=\"code\">I</span> greater than <span class=\"code\">size(Array)-1</span> is returned.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#set-3\"><span class=\"code\">set/3</span></a></span>.</p> <p></p></div> <a name=\"is_array-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-is_array-1-id358685\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L251\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>is_array(X :: term()) -&gt; boolean()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"is_array-1\"></a> </p><p>Returns <span class=\"code\">true</span> if <span class=\"code\">X</span> is an array, otherwise <span class=\"code\">false</span>. Notice that the check is only shallow, as there is no guarantee that <span class=\"code\">X</span> is a well-formed array representation even if this function returns <span class=\"code\">true</span>.</p> <p></p></div> <a name=\"is_fix-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-is_fix-1-id358767\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L263\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>is_fix(Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array()</a></span>) -&gt; boolean()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"is_fix-1\"></a> </p><p>Checks if the array has fixed size. Returns <span class=\"code\">true</span> if the array is fixed, otherwise <span class=\"code\">false</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#fix-1\"><span class=\"code\">fix/1</span></a></span>.</p> <p></p></div> <a name=\"map-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-map-2-id358862\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L273\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>map(Function, Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type1)) -&gt; <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type2)</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Function = fun((Index :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array_indx\">array_indx()</a></span>, Type1) -&gt; Type2)</span></div></div><div class=\"REFBODY rb-7\"><p><a name=\"map-2\"></a> </p><p>Maps the specified function onto each array element. The elements are visited in order from the lowest index to the highest. If <span class=\"code\">Function</span> is not a function, the call fails with reason <span class=\"code\">badarg</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#foldl-3\"><span class=\"code\">foldl/3</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#foldr-3\"><span class=\"code\">foldr/3</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sparse_map-2\"><span class=\"code\">sparse_map/2</span></a></span>.</p> <p></p></div> <a name=\"new-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-new-0-id359012\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L287\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>new() -&gt; <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"new-0\"></a> </p><p>Creates a new, extendible array with initial size zero.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#new-1\"><span class=\"code\">new/1</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#new-2\"><span class=\"code\">new/2</span></a></span>.</p> <p></p></div> <a name=\"new-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-new-1-id359118\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L298\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>new(Options :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array_opts\">array_opts()</a></span>) -&gt; <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"new-1\"></a> </p><p>Creates a new array according to the specified otions. By default, the array is extendible and has initial size zero. Array indices start at <span class=\"code\">0</span>.</p> <p><span class=\"code\">Options</span> is a single term or a list of terms, selected from the following:</p> <dl> <dt><strong><span class=\"code\">N::integer() &gt;= 0</span> or <span class=\"code\">{size, N::integer() &gt;= 0}</span> </strong></dt> <dd><p>Specifies the initial array size; this also implies <span class=\"code\">{fixed, true}</span>. If <span class=\"code\">N</span> is not a non-negative integer, the call fails with reason <span class=\"code\">badarg</span>.</p></dd> <dt><strong><span class=\"code\">fixed</span> or <span class=\"code\">{fixed, true}</span></strong></dt> <dd><p>Creates a fixed-size array. See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#fix-1\"><span class=\"code\">fix/1</span></a></span>.</p></dd> <dt><strong><span class=\"code\">{fixed, false}</span></strong></dt> <dd><p>Creates an extendible (non-fixed-size) array.</p></dd> <dt><strong><span class=\"code\">{default, Value}</span></strong></dt> <dd><p>Sets the default value for the array to <span class=\"code\">Value</span>.</p> </dd> </dl> <p>Options are processed in the order they occur in the list, that is, later options have higher precedence.</p> <p>The default value is used as the value of uninitialized entries, and cannot be changed once the array has been created.</p> <p><strong>Examples:</strong></p> <div class=\"example\"><pre>array:new(100)</pre></div> <p>creates a fixed-size array of size 100.</p> <div class=\"example\"><pre>array:new({default,0})</pre></div> <p>creates an empty, extendible array whose default value is <span class=\"code\">0</span>. </p> <div class=\"example\"><pre>array:new([{size,10},{fixed,false},{default,-1}])</pre></div> <p>creates an extendible array with initial size 10 whose default value is <span class=\"code\">-1</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#fix-1\"><span class=\"code\">fix/1</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#from_list-2\"><span class=\"code\">from_list/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get-2\"><span class=\"code\">get/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#new-0\"><span class=\"code\">new/0</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#new-2\"><span class=\"code\">new/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#set-3\"><span class=\"code\">set/3</span></a></span>.</p> <p></p></div> <a name=\"new-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-new-2-id359450\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L348\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>new(Size :: integer() &gt;= 0, Options :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array_opts\">array_opts()</a></span>) -&gt; <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"new-2\"></a> </p><p>Creates a new array according to the specified size and options. If <span class=\"code\">Size</span> is not a non-negative integer, the call fails with reason <span class=\"code\">badarg</span>. By default, the array has fixed size. Notice that any size specifications in <span class=\"code\">Options</span> override parameter <span class=\"code\">Size</span>.</p> <p>If <span class=\"code\">Options</span> is a list, this is equivalent to <span class=\"code\">new([{size, Size} | Options]</span>, otherwise it is equivalent to <span class=\"code\">new([{size, Size} | [Options]]</span>. However, using this function directly is more efficient.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>array:new(100, {default,0})</pre></div> <p>creates a fixed-size array of size 100, whose default value is <span class=\"code\">0</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#new-1\"><span class=\"code\">new/1</span></a></span>.</p> <p></p></div> <a name=\"relax-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-relax-1-id359617\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L372\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>relax(Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt; <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"relax-1\"></a> </p><p>Makes the array resizable. (Reverses the effects of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#fix-1\"><span class=\"code\">fix/1</span></a></span>.)</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#fix-1\"><span class=\"code\">fix/1</span></a></span>.</p> <p></p></div> <a name=\"reset-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-reset-2-id359626\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L382\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>reset(I :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array_indx\">array_indx()</a></span>, Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt; <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"reset-2\"></a> </p><p>Resets entry <span class=\"code\">I</span> to the default value for the array. If the value of entry <span class=\"code\">I</span> is the default value, the array is returned unchanged. Reset never changes the array size. Shrinking can be done explicitly by calling <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#resize-2\"><span class=\"code\">resize/2</span></a></span>.</p> <p>If <span class=\"code\">I</span> is not a non-negative integer, or if the array has fixed size and <span class=\"code\">I</span> is larger than the maximum index, the call fails with reason <span class=\"code\">badarg</span>; compare <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#set-3\"><span class=\"code\">set/3</span></a></span></p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#new-2\"><span class=\"code\">new/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#set-3\"><span class=\"code\">set/3</span></a></span>.</p> <p></p></div> <a name=\"resize-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-resize-1-id359900\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L401\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>resize(Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt; <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"resize-1\"></a> </p><p>Changes the array size to that reported by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sparse_size-1\"><span class=\"code\">sparse_size/1</span></a></span>. If the specified array has fixed size, also the resulting array has fixed size.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#resize-2\"><span class=\"code\">resize/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sparse_size-1\"><span class=\"code\">sparse_size/1</span></a></span>.</p> <p></p></div> <a name=\"resize-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-resize-2-id360023\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L415\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>resize(Size :: integer() &gt;= 0, Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"resize-2\"></a> </p><p>Change the array size. If <span class=\"code\">Size</span> is not a non-negative integer, the call fails with reason <span class=\"code\">badarg</span>. If the specified array has fixed size, also the resulting array has fixed size.</p> <p></p></div> <a name=\"set-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-set-3-id360018\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L426\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>set(I :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array_indx\">array_indx()</a></span>, Value :: Type, Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"set-3\"></a> </p><p>Sets entry <span class=\"code\">I</span> of the array to <span class=\"code\">Value</span>. If <span class=\"code\">I</span> is not a non-negative integer, or if the array has fixed size and <span class=\"code\">I</span> is larger than the maximum index, the call fails with reason <span class=\"code\">badarg</span>.</p> <p>If the array does not have fixed size, and <span class=\"code\">I</span> is greater than <span class=\"code\">size(Array)-1</span>, the array grows to size <span class=\"code\">I+1</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get-2\"><span class=\"code\">get/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#reset-2\"><span class=\"code\">reset/2</span></a></span>.</p> <p></p></div> <a name=\"size-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-size-1-id360293\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L443\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>size(Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array()</a></span>) -&gt; integer() &gt;= 0</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"size-1\"></a> </p><p>Gets the number of entries in the array. Entries are numbered from <span class=\"code\">0</span> to <span class=\"code\">size(Array)-1</span>. Hence, this is also the index of the first entry that is guaranteed to not have been previously set.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#set-3\"><span class=\"code\">set/3</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sparse_size-1\"><span class=\"code\">sparse_size/1</span></a></span>.</p> <p></p></div> <a name=\"sparse_foldl-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sparse_foldl-3-id360406\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L456\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sparse_foldl(Function, InitialAcc :: A, Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt; B</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Function = <br>&#xA0;&#xA0;&#xA0;&#xA0;fun((Index :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array_indx\">array_indx()</a></span>, Value :: Type, Acc :: A) -&gt; B)</span></div></div><div class=\"REFBODY rb-7\"><p><a name=\"sparse_foldl-3\"></a> </p><p>Folds the array elements using the specified function and initial accumulator value, skipping default-valued entries. The elements are visited in order from the lowest index to the highest. If <span class=\"code\">Function</span> is not a function, the call fails with reason <span class=\"code\">badarg</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#foldl-3\"><span class=\"code\">foldl/3</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sparse_foldr-3\"><span class=\"code\">sparse_foldr/3</span></a></span>.</p> <p></p></div> <a name=\"sparse_foldr-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sparse_foldr-3-id360412\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L471\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sparse_foldr(Function, InitialAcc :: A, Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt; B</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Function = <br>&#xA0;&#xA0;&#xA0;&#xA0;fun((Index :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array_indx\">array_indx()</a></span>, Value :: Type, Acc :: A) -&gt; B)</span></div></div><div class=\"REFBODY rb-7\"><p><a name=\"sparse_foldr-3\"></a> </p><p>Folds the array elements right-to-left using the specified function and initial accumulator value, skipping default-valued entries. The elements are visited in order from the highest index to the lowest. If <span class=\"code\">Function</span> is not a function, the call fails with reason <span class=\"code\">badarg</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#foldr-3\"><span class=\"code\">foldr/3</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sparse_foldl-3\"><span class=\"code\">sparse_foldl/3</span></a></span>.</p> <p></p></div> <a name=\"sparse_map-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sparse_map-2-id360660\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L487\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sparse_map(Function, Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type1)) -&gt; <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type2)</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Function = fun((Index :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array_indx\">array_indx()</a></span>, Type1) -&gt; Type2)</span></div></div><div class=\"REFBODY rb-7\"><p><a name=\"sparse_map-2\"></a> </p><p>Maps the specified function onto each array element, skipping default-valued entries. The elements are visited in order from the lowest index to the highest. If <span class=\"code\">Function</span> is not a function, the call fails with reason <span class=\"code\">badarg</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#map-2\"><span class=\"code\">map/2</span></a></span>.</p> <p></p></div> <a name=\"sparse_size-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sparse_size-1-id360696\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L500\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sparse_size(Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array()</a></span>) -&gt; integer() &gt;= 0</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"sparse_size-1\"></a> </p><p>Gets the number of entries in the array up until the last non-default-valued entry. That is, returns <span class=\"code\">I+1</span> if <span class=\"code\">I</span> is the last non-default-valued entry in the array, or zero if no such entry exists.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#resize-1\"><span class=\"code\">resize/1</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#size-1\"><span class=\"code\">size/1</span></a></span>.</p> <p></p></div> <a name=\"sparse_to_list-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sparse_to_list-1-id360932\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L514\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sparse_to_list(Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt; [Value :: Type]</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"sparse_to_list-1\"></a> </p><p>Converts the array to a list, skipping default-valued entries.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#to_list-1\"><span class=\"code\">to_list/1</span></a></span>.</p> <p></p></div> <a name=\"sparse_to_orddict-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sparse_to_orddict-1-id360933\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L524\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sparse_to_orddict(Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-indx_pairs\">indx_pairs</a></span>(Value :: Type)</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"sparse_to_orddict-1\"></a> </p><p>Converts the array to an ordered list of pairs <span class=\"code\">{Index, Value}</span>, skipping default-valued entries.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#to_orddict-1\"><span class=\"code\">to_orddict/1</span></a></span>.</p> <p></p></div> <a name=\"to_list-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-to_list-1-id360945\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L536\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>to_list(Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt; [Value :: Type]</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"to_list-1\"></a> </p><p>Converts the array to a list.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#from_list-2\"><span class=\"code\">from_list/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sparse_to_list-1\"><span class=\"code\">sparse_to_list/1</span></a></span>. </p> <p></p></div> <a name=\"to_orddict-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-to_orddict-1-id361217\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/array.xml#L547\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>to_orddict(Array :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-array\">array</a></span>(Type)) -&gt; <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-indx_pairs\">indx_pairs</a></span>(Value :: Type)</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"to_orddict-1\"></a> </p><p>Converts the array to an ordered list of pairs <span class=\"code\">{Index, Value}</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#from_orddict-2\"><span class=\"code\">from_orddict/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sparse_to_orddict-1\"><span class=\"code\">sparse_to_orddict/1</span></a></span>. </p> <p></p></div> "}