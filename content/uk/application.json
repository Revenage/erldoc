{"summary":"Generic OTP application functions","description":"<p> </p><p>In OTP, <strong>application</strong> denotes a component implementing some specific functionality, that can be started and stopped as a unit, and that can be reused in other systems. This module interacts with <strong>application controller</strong>, a process started at every Erlang runtime system. This module contains functions for controlling applications (for example, starting and stopping applications), and functions to access information about applications (for example, configuration parameters).</p> <p>An application is defined by an <strong>application specification</strong>. The specification is normally located in an <strong>application resource file</strong> named <span class=\"code\">Application.app</span>, where <span class=\"code\">Application</span> is the application name. For details about the application specification, see <span class=\"bold_code bc-19\"><a href=\"/docs/app\"><span class=\"code\">app(4)</span></a></span>.</p> <p>This module can also be viewed as a behaviour for an application implemented according to the OTP design principles as a supervision tree. The definition of how to start and stop the tree is to be located in an <strong>application callback module</strong>, exporting a predefined set of functions.</p> <p>For details about applications and behaviours, see <span class=\"bold_code bc-18\"><a href=\"/docs/../design_principles/des_princ\">OTP Design Principles</a></span>.</p> <p></p>"}