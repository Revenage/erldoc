{"summary":"Persistent terms.","description":"<p> </p><p>This module is similar to <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/ets\"><span class=\"code\">ets</span></a></span> in that it provides a storage for Erlang terms that can be accessed in constant time, but with the difference that <span class=\"code\">persistent_term</span> has been highly optimized for reading terms at the expense of writing and updating terms. When a persistent term is updated or deleted, a global garbage collection pass is run to scan all processes for the deleted term, and to copy it into each process that still uses it. Therefore, <span class=\"code\">persistent_term</span> is suitable for storing Erlang terms that are frequently accessed but never or infrequently updated.</p> <div class=\"warning\"><div class=\"label\">Warning</div><div class=\"content\"><p></p><p>Persistent terms is an advanced feature and is not a general replacement for ETS tables. Before using persistent terms, make sure to fully understand the consequence to system performance when updating or deleting persistent terms.</p><p></p></div></div> <p>Term lookup (using <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get-1\"><span class=\"code\">get/1</span></a></span>), is done in constant time and without taking any locks, and the term is <strong>not</strong> copied to the heap (as is the case with terms stored in ETS tables).</p> <p>Storing or updating a term (using <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#put-2\"><span class=\"code\">put/2</span></a></span>) is proportional to the number of already created persistent terms because the hash table holding the keys will be copied. In addition, the term itself will be copied.</p> <p>When a (complex) term is deleted (using <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#erase-1\"><span class=\"code\">erase/1</span></a></span>) or replaced by another (using <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#put-2\"><span class=\"code\">put/2</span></a></span>), a global garbage collection is initiated. It works like this:</p> <ul> <li><p>All processes in the system will be scheduled to run a scan of their heaps for the term that has been deleted. While such scan is relatively light-weight, if there are many processes, the system can become less responsive until all process have scanned their heaps.</p></li> <li><p>If the deleted term (or any part of it) is still used by a process, that process will do a major (fullsweep) garbage collection and copy the term into the process. However, at most two processes at a time will be scheduled to do that kind of garbage collection.</p></li> </ul> <p>Deletion of atoms and other terms that fit in one machine word is specially optimized to avoid doing a global GC. It is still not recommended to update persistent terms with such values too frequently because the hash table holding the keys is copied every time a persistent term is updated.</p> <p>Some examples are suitable uses for persistent terms are:</p> <ul> <li><p>Storing of configuration data that must be easily accessible by all processes.</p></li> <li><p>Storing of references for NIF resources.</p></li> <li><p>Storing of references for efficient counters.</p></li> <li><p>Storing an atom to indicate a logging level or whether debugging is turned on.</p></li> </ul> <p></p>","funcs":" <a name=\"erase-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-erase-1-id324296\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/persistent_term.xml#L202\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>erase(Key) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.2</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-key\">key()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = boolean()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Erase the name for the persistent term with key <span class=\"code\">Key</span>. The return value will be <span class=\"code\">true</span> if there was a persistent term with the key <span class=\"code\">Key</span>, and <span class=\"code\">false</span> if there was no persistent term associated with the key.</p> <p>If there existed a previous persistent term associated with key <span class=\"code\">Key</span>, a global GC has been initiated when <span class=\"code\">erase/1</span> returns. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#description\">Description</a></span>.</p> <p></p></div> <a name=\"get-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get-0-id311666\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/persistent_term.xml#L218\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get() -&gt; List</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.2</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [{<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-key\">key()</a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-value\">value()</a></span>}]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Retrieve the keys and values for all persistent terms. The keys will be copied to the heap for the process calling <span class=\"code\">get/0</span>, but the values will not.</p> <p></p></div> <a name=\"get-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get-1-id89088\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/persistent_term.xml#L228\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get(Key) -&gt; Value</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.2</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-key\">key()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Value = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-value\">value()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Retrieve the value for the persistent term associated with the key <span class=\"code\">Key</span>. The lookup will be made in constant time and the value will not be copied to the heap of the calling process.</p> <p>This function fails with a <span class=\"code\">badarg</span> exception if no term has been stored with the key <span class=\"code\">Key</span>.</p> <p>If the calling process holds on to the value of the persistent term and the persistent term is deleted in the future, the term will be copied to the process.</p> <p></p></div> <a name=\"get-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get-2-id89089\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/persistent_term.xml#L245\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get(Key, Default) -&gt; Value</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.3</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-key\">key()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Default = Value = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-value\">value()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Retrieve the value for the persistent term associated with the key <span class=\"code\">Key</span>. The lookup will be made in constant time and the value will not be copied to the heap of the calling process.</p> <p>This function returns <span class=\"code\">Default</span> if no term has been stored with the key <span class=\"code\">Key</span>.</p> <p>If the calling process holds on to the value of the persistent term and the persistent term is deleted in the future, the term will be copied to the process.</p> <p></p></div> <a name=\"info-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-info-0-id327244\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/persistent_term.xml#L261\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>info() -&gt; Info</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.2</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Info = #{count := Count, memory := Memory}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Count = Memory = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Return information about persistent terms in a map. The map has the following keys:</p> <dl> <dt><strong><span class=\"code\">count</span></strong></dt> <dd><p>The number of persistent terms.</p></dd> <dt><strong><span class=\"code\">memory</span></strong></dt> <dd><p>The total amount of memory (measured in bytes) used by all persistent terms.</p></dd> </dl> <p></p></div> <a name=\"put-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-put-2-id144698\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/persistent_term.xml#L277\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>put(Key, Value) -&gt; ok</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.2</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-key\">key()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Value = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-value\">value()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Store the value <span class=\"code\">Value</span> as a persistent term and associate it with the key <span class=\"code\">Key</span>.</p> <p>If the value <span class=\"code\">Value</span> is equal to the value previously stored for the key, <span class=\"code\">put/2</span> will do nothing and return quickly.</p> <p>If there existed a previous persistent term associated with key <span class=\"code\">Key</span>, a global GC has been initiated when <span class=\"code\">put/2</span> returns. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#description\">Description</a></span>.</p> <p></p></div> ","name":"persistent_term"}