{"summary":"Interpreter Interface.","description":"<p> </p><p>The Erlang interpreter provides mechanisms for breakpoints and stepwise execution of code. It is primarily intended to be used by Debugger, see the User&apos;s Guide and <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/debugger\"><span class=\"code\">debugger(3)</span></a></span>.</p> <p>The following can be done from the shell:</p> <ul> <li>Specify the modules to be interpreted.</li> <li>Specify breakpoints.</li> <li>Monitor the current status of all processes executing code in interpreted modules, also processes at other Erlang nodes. </li> </ul> <p>By <strong>attaching to</strong> a process executing interpreted code, it is possible to examine variable bindings and order stepwise execution. This is done by sending and receiving information to/from the process through a third process, called the meta process. You can implement your own attached process. See <span class=\"code\">int.erl</span> for available functions and <span class=\"code\">dbg_wx_trace.erl</span> for possible messages.</p> <p>The interpreter depends on the Kernel, STDLIB, and GS applications. This means that modules belonging to any of these applications are not allowed to be interpreted, as it could lead to a deadlock or emulator crash. This also applies to modules belonging to the Debugger application.</p> <p></p>","funcs":" <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-i-1-id66350\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L96\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"i-1\" href=\"/erldoc/docs/#i-1\">i(AbsModule) -&gt; {module,Module} | error</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-i-1-id66356\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L96\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"i-1\" href=\"/erldoc/docs/#i-1\">i(AbsModules) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-ni-1-id66362\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L96\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"ni-1\" href=\"/erldoc/docs/#ni-1\">ni(AbsModule) -&gt; {module,Module} | error</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-ni-1-id66369\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L96\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"ni-1\" href=\"/erldoc/docs/#ni-1\">ni(AbsModules) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">AbsModules = [AbsModule]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">AbsModule = Module | File | [Module | File]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Module = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;File = string()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Interprets the specified module(s). <span class=\"code\">i/1</span> interprets the module only at the current node. <span class=\"code\">ni/1</span> interprets the module at all known nodes.</p> <p>A module can be specified by its module name (atom) or filename.</p> <p>If specified by its module name, the object code <span class=\"code\">Module.beam</span> is searched for in the current path. The source code <span class=\"code\">Module.erl</span> is searched for first in the same directory as the object code, then in an <span class=\"code\">src</span> directory next to it.</p> <p>If specified by its filename, the filename can include a path and the <span class=\"code\">.erl</span> extension can be omitted. The object code <span class=\"code\">Module.beam</span> is searched for first in the same directory as the source code, then in an <span class=\"code\">ebin</span> directory next to it, and then in the current path.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>The interpreter requires both the source code and the object code. The object code <strong>must</strong> include debug information, that is, only modules compiled with option <span class=\"code\">debug_info</span> set can be interpreted.</p> <p></p></div></div> <p>The functions returns <span class=\"code\">{module,Module}</span> if the module was interpreted, otherwise <span class=\"code\">error</span> is returned.</p> <p>The argument can also be a list of modules or filenames, in which case the function tries to interpret each module as specified earlier. The function then always returns <span class=\"code\">ok</span>, but prints some information to <span class=\"code\">stdout</span> if a module cannot be interpreted.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-n-1-id65440\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L146\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"n-1\" href=\"/erldoc/docs/#n-1\">n(AbsModule) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-nn-1-id65446\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L146\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"nn-1\" href=\"/erldoc/docs/#nn-1\">nn(AbsModule) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">AbsModule = Module | File | [Module | File]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Module = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;File = string()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Stops interpreting the specified module. <span class=\"code\">n/1</span> stops interpreting the module only at the current node. <span class=\"code\">nn/1</span> stops interpreting the module at all known nodes.</p> <p>As for <span class=\"code\">i/1</span> and <span class=\"code\">ni/1</span>, a module can be specified by its module name or filename.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-interpreted-0-id65505\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L165\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"interpreted-0\" href=\"/erldoc/docs/#interpreted-0\">interpreted() -&gt; [Module]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Module = atom()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list with all interpreted modules.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-file-1-id65536\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L176\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"file-1\" href=\"/erldoc/docs/#file-1\">file(Module) -&gt; File | {error,not_loaded}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Module = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">File = string()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the source code filename <span class=\"code\">File</span> for an interpreted module <span class=\"code\">Module</span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-interpretable-1-id65579\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L189\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"interpretable-1\" href=\"/erldoc/docs/#interpretable-1\">interpretable(AbsModule) -&gt; true | {error,Reason}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">AbsModule = Module | File</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Module = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;File = string()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = no_src | no_beam | no_debug_info | badarg | {app,App}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;App = atom()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Checks if a module can be interpreted. The module can be specified by its module name <span class=\"code\">Module</span> or its source filename <span class=\"code\">File</span>. If specified by a module name, the module is searched for in the code path.</p> <p>The function returns <span class=\"code\">true</span> if all of the following apply:</p> <ul> <li>Both source code and object code for the module is found.</li> <li>The module has been compiled with option <span class=\"code\">debug_info</span> set.</li> <li>The module does not belong to any of the applications Kernel, STDLIB, GS, or Debugger.</li> </ul> <p>The function returns <span class=\"code\">{error,Reason}</span> if the module cannot be interpreted. <span class=\"code\">Reason</span> can have the following values:</p> <dl> <dt><strong><span class=\"code\">no_src</span></strong></dt> <dd><p>No source code is found. It is assumed that the source code and object code are located either in the same directory, or in <span class=\"code\">src</span> and <span class=\"code\">ebin</span> directories next to each other.</p></dd> <dt><strong><span class=\"code\">no_beam</span></strong></dt> <dd><p>No object code is found. It is assumed that the source code and object code are located either in the same directory, or in <span class=\"code\">src</span> and <span class=\"code\">ebin</span> directories next to each other.</p></dd> <dt><strong><span class=\"code\">no_debug_info</span></strong></dt> <dd><p>The module has not been compiled with option <span class=\"code\">debug_info</span> set.</p></dd> <dt><strong><span class=\"code\">badarg</span></strong></dt> <dd><p><span class=\"code\">AbsModule</span> is not found. This could be because the specified file does not exist, or because <span class=\"code\">code:which/1</span> does not return a BEAM filename, which is the case not only for non-existing modules but also for modules that are preloaded or cover-compiled.</p></dd> <dt><strong><span class=\"code\">{app,App}</span></strong></dt> <dd><p><span class=\"code\">App</span> is <span class=\"code\">kernel</span>, <span class=\"code\">stdlib</span>, <span class=\"code\">gs</span>, or <span class=\"code\">debugger</span> if <span class=\"code\">AbsModule</span> belongs to one of these applications.</p></dd> </dl> <p>Notice that the function can return <span class=\"code\">true</span> for a module that in fact is not interpretable in the case where the module is marked as sticky or resides in a directory marked as sticky. The reason is that this is not discovered until the interpreter tries to load the module.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-auto_attach-0-id67838\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L257\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"auto_attach-0\" href=\"/erldoc/docs/#auto_attach-0\">auto_attach() -&gt; false | {Flags,Function}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-auto_attach-1-id67844\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L257\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"auto_attach-1\" href=\"/erldoc/docs/#auto_attach-1\">auto_attach(false)</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-auto_attach-2-id67850\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L257\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"auto_attach-2\" href=\"/erldoc/docs/#auto_attach-2\">auto_attach(Flags, Function)</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Flags = [init | break | exit]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Function = {Module,Name,Args}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Module = Name = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Args = [term()]</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Gets and sets when and how to attach automatically to a process executing code in interpreted modules. <span class=\"code\">false</span> means never attach automatically, this is the default. Otherwise automatic attach is defined by a list of flags and a function. The following flags can be specified:</p> <ul> <li><span class=\"code\">init</span> - Attach when a process for the first time calls an interpreted function.</li> <li><span class=\"code\">break</span> - Attach whenever a process reaches a breakpoint.</li> <li><span class=\"code\">exit</span> - Attach when a process terminates.</li> </ul> <p>When the specified event occurs, the function <span class=\"code\">Function</span> is called as:</p> <div class=\"example\"><pre>spawn(Module, Name, [Pid | Args])</pre></div> <p><span class=\"code\">Pid</span> is the pid of the process executing interpreted code.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-stack_trace-0-id69071\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L292\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"stack_trace-0\" href=\"/erldoc/docs/#stack_trace-0\">stack_trace() -&gt; Flag</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-stack_trace-1-id69077\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L292\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"stack_trace-1\" href=\"/erldoc/docs/#stack_trace-1\">stack_trace(Flag)</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Flag = all | no_tail | false</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Gets and sets how to save call frames in the stack. Saving call frames makes it possible to inspect the call chain of a process, and is also used to emulate the stack trace if an error (an exception of class error) occurs. The following flags can be specified:</p> <dl> <dt><strong><span class=\"code\">all</span></strong></dt> <dd><p>Save information about all current calls, that is, function calls that have not yet returned a value.</p> </dd> <dt><strong><span class=\"code\">no_tail</span></strong></dt> <dd><p>Save information about current calls, but discard previous information when a tail recursive call is made. This option consumes less memory and can be necessary to use for processes with long lifetimes and many tail recursive calls. This is the default.</p></dd> <dt><strong><span class=\"code\">false</span></strong></dt> <dd><p>Save no information about currentcalls.</p></dd> </dl> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-break-2-id69147\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L324\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"break-2\" href=\"/erldoc/docs/#break-2\">break(Module, Line) -&gt; ok | {error,break_exists}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Module = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Line = int()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a breakpoint at <span class=\"code\">Line</span> in <span class=\"code\">Module</span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-delete_break-2-id69190\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L336\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"delete_break-2\" href=\"/erldoc/docs/#delete_break-2\">delete_break(Module, Line) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Module = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Line = int()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Deletes the breakpoint at <span class=\"code\">Line</span> in <span class=\"code\">Module</span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-break_in-3-id69232\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L348\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"break_in-3\" href=\"/erldoc/docs/#break_in-3\">break_in(Module, Name, Arity) -&gt; ok | {error,function_not_found}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Module = Name = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Arity = int()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a breakpoint at the first line of every clause of function <span class=\"code\">Module:Name/Arity</span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-del_break_in-3-id69271\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L362\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"del_break_in-3\" href=\"/erldoc/docs/#del_break_in-3\">del_break_in(Module, Name, Arity) -&gt; ok | {error,function_not_found}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Module = Name = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Arity = int()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Deletes the breakpoints at the first line of every clause of function <span class=\"code\">Module:Name/Arity</span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-no_break-0-id69311\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L376\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"no_break-0\" href=\"/erldoc/docs/#no_break-0\">no_break() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-no_break-1-id69317\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L376\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"no_break-1\" href=\"/erldoc/docs/#no_break-1\">no_break(Module) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>Deletes all breakpoints, or all breakpoints in <span class=\"code\">Module</span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-disable_break-2-id69344\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L385\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"disable_break-2\" href=\"/erldoc/docs/#disable_break-2\">disable_break(Module, Line) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Module = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Line = int()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Makes the breakpoint at <span class=\"code\">Line</span> in <span class=\"code\">Module</span> inactive.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-enable_break-2-id69386\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L397\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"enable_break-2\" href=\"/erldoc/docs/#enable_break-2\">enable_break(Module, Line) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Module = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Line = int()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Makes the breakpoint at <span class=\"code\">Line</span> in <span class=\"code\">Module</span> active.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-action_at_break-3-id69429\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L409\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"action_at_break-3\" href=\"/erldoc/docs/#action_at_break-3\">action_at_break(Module, Line, Action) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Module = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Line = int()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Action = enable | disable | delete</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Sets the trigger action of the breakpoint at <span class=\"code\">Line</span> in <span class=\"code\">Module</span> to <span class=\"code\">Action</span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-test_at_break-3-id69479\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L423\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"test_at_break-3\" href=\"/erldoc/docs/#test_at_break-3\">test_at_break(Module, Line, Function) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Module = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Line = int()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Function = {Module,Name}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Name = atom()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Sets the conditional test of the breakpoint at <span class=\"code\">Line</span> in <span class=\"code\">Module</span> to <span class=\"code\">Function</span>. The function must fulfill the requirements specified in section <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#int_breakpoints\">Breakpoints</a></span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_binding-2-id69540\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L440\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"get_binding-2\" href=\"/erldoc/docs/#get_binding-2\">get_binding(Var, Bindings) -&gt; {value,Value} | unbound</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Var = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bindings = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Retrieves the binding of <span class=\"code\">Var</span>. This function is intended to be used by the conditional function of a breakpoint.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-all_breaks-0-id69583\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L455\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"all_breaks-0\" href=\"/erldoc/docs/#all_breaks-0\">all_breaks() -&gt; [Break]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-all_breaks-1-id69589\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L455\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"all_breaks-1\" href=\"/erldoc/docs/#all_breaks-1\">all_breaks(Module) -&gt; [Break]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Break = {Point,Options}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Point = {Module,Line}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;&#xA0;Module = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;&#xA0;Line = int()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Options = [Status,Trigger,null,Cond|]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;&#xA0;Status = active | inactive</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;&#xA0;Trigger = enable | disable | delete</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;&#xA0;Cond = null | Function</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;&#xA0;&#xA0;Function = {Module,Name}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;&#xA0;&#xA0;&#xA0;Name = atom()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Gets all breakpoints, or all breakpoints in <span class=\"code\">Module</span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-snapshot-0-id71012\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L476\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"snapshot-0\" href=\"/erldoc/docs/#snapshot-0\">snapshot() -&gt; [Snapshot]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Snapshot = {Pid, Function, Status, Info}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Pid = pid()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Function = {Module,Name,Args}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;&#xA0;Module = Name = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;&#xA0;Args = [term()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Status = idle | running | waiting | break | exit | no_conn</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Info = {} | {Module,Line} | ExitReason</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;&#xA0;Line = int()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;&#xA0;ExitReason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Gets information about all processes executing interpreted code. </p> <ul> <li><span class=\"code\">Pid</span> - Process identifier.</li> <li><span class=\"code\">Function</span> - First interpreted function called by the process.</li> <li><span class=\"code\">Status</span> - Current status of the process.</li> <li><span class=\"code\">Info</span> - More information.</li> </ul> <p><span class=\"code\">Status</span> is one of the following:</p> <ul> <li><span class=\"code\">idle</span> - The process is no longer executing interpreted code. <span class=\"code\">Info={}</span>.</li> <li><span class=\"code\">running</span> - The process is running. <span class=\"code\">Info={}</span>. </li> <li><span class=\"code\">waiting</span> - The process is waiting at a <span class=\"code\">receive</span>. <span class=\"code\">Info={}</span>.</li> <li><span class=\"code\">break</span> - Process execution is stopped, normally at a breakpoint. <span class=\"code\">Info={Module,Line}</span>.</li> <li><span class=\"code\">exit</span> - The process is terminated. <span class=\"code\">Info=ExitReason</span>.</li> <li><span class=\"code\">no_conn</span> - The connection is down to the node where the process is running. <span class=\"code\">Info={}</span>.</li> </ul> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clear-0-id71183\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L521\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"clear-0\" href=\"/erldoc/docs/#clear-0\">clear() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>Clears information about processes executing interpreted code by removing all information about terminated processes.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-continue-1-id71208\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L531\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"continue-1\" href=\"/erldoc/docs/#continue-1\">continue(Pid) -&gt; ok | {error,not_interpreted}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-continue-3-id71214\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/debugger/doc/src/int.xml#L531\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"continue-3\" href=\"/erldoc/docs/#continue-3\">continue(X,Y,Z) -&gt; ok | {error,not_interpreted}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pid = pid()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = Y = Z = int()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Resumes process execution for <span class=\"code\">Pid</span> or <span class=\"code\">c:pid(X,Y,Z)</span>.</p> <p></p></div> ","name":"int"}