{"summary":"Behaviour module for the SNMP agent network-interface filter.","description":"<p> </p><p>This module defines the behaviour of the agent network interface filter. A <span class=\"code\">snmpa_network_interface_filter</span> compliant module must export the following functions: </p> <ul> <li> <p><span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#accept_recv\">accept_recv/2</a></span></p> </li> <li> <p><span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#accept_send\">accept_send/2</a></span></p> </li> <li> <p><span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#accept_recv_pdu\">accept_recv_pdu/3</a></span></p> </li> <li> <p><span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#accept_send_pdu\">accept_send_pdu/2</a></span></p> </li> </ul> <p>The semantics of them and their exact signatures are explained below. </p> <p>The purpose of the network interface filter is to allow for filtering of messages (accept or reject) receive and send. This is done on two levels: </p> <ul> <li> <p>The first level is at the transport entry / exit point, i.e. immediately after the receipt of the message before any message processing is done (accept_recv) and immediately before sending the message after all message processing is done (accept_send).</p> </li> <li> <p>The second level is at the MPD entry / exit point, i.e. immediately after the basic message processing (accept_recv_pdu) / immediately before the basic message processing (accept_send_pdu).</p> </li> </ul> <p>Note that the network interface filter is something which is used by the network interface implementation provided by the application (<span class=\"code\">snmpa_net_if</span>). The default filter accepts all messages.</p> <p>A network interface filter can e.g. be used during testing or for load regulation. If the intended use is load regulation, see also <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/snmp/snmp_config#agent_ni_req_limit\">req_limit</a></span> and the function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/snmpa#register_notification_filter\">register_notification_filter</a></span>. </p> <p>Legacy network interface filter modules used arguments on the form <span class=\"code\">(IpAddr, PortNumber,...)</span> instead of <span class=\"code\">(Domain, Addr, ...)</span>, and if the SNMP agent is run without changing the configuration to use transport domains the network interface filter will still get the old arguments and work as before.</p> <p></p>","funcs":" <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-accept_recv-2-id128126\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/snmp/doc/src/snmpa_network_interface_filter.xml#L103\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"accept_recv-2\" href=\"/erldoc/docs/#accept_recv-2\">accept_recv(Domain, Addr) -&gt; boolean()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Domain = transportDomain()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Addr = transportAddressWithPort()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Called at the reception of a message (before <strong>any</strong> processing has been done).</p> <p>For the message to be discarded, the function <strong>must</strong> return <strong>false</strong>. </p> <a name=\"accept_send\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-accept_send-2-id128181\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/snmp/doc/src/snmpa_network_interface_filter.xml#L118\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"accept_send-2\" href=\"/erldoc/docs/#accept_send-2\">accept_send(Domain, Addr) -&gt; boolean()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Domain = transportDomain()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Addr = transportAddressWithPort()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Called before the sending of a message (after <strong>all</strong> processing has been done).</p> <p>For the message to be discarded, the function <strong>must</strong> return <strong>false</strong>. </p> <a name=\"accept_recv_pdu\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-accept_recv_pdu-3-id128237\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/snmp/doc/src/snmpa_network_interface_filter.xml#L133\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"accept_recv_pdu-3\" href=\"/erldoc/docs/#accept_recv_pdu-3\">accept_recv_pdu(Domain, Addr, PduType) -&gt; boolean()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Domain = transportDomain()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Addr = transportAddressWithPort()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">PduType = pdu_type()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Called after the basic message processing (MPD) has been done, but before the pdu is handed over to the master-agent for primary processing.</p> <p>For the pdu to be discarded, the function <strong>must</strong> return <strong>false</strong>. </p> <a name=\"accept_send_pdu\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-accept_send_pdu-2-id128293\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/snmp/doc/src/snmpa_network_interface_filter.xml#L150\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"accept_send_pdu-2\" href=\"/erldoc/docs/#accept_send_pdu-2\">accept_send_pdu(Targets, PduType) -&gt; Reply</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Targets = targets()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">targets() = [target()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">target() = {Domain, Addr}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Domain = transportDomain()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Addr = transportAddressWithPort()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">PduType = pdu_type() &gt; 0</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reply = boolean() | NewTargets</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">NewTargets = targets()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Called before the basic message processing (MPD) is done, when a pdu has been received from the master-agent.</p> <p>For the message to be discarded all together, the function <strong>must</strong> return <strong>false</strong>. </p> <p>Note that it is possible for this function to filter out targets (but <strong>not</strong> to add its own) by returning an updated <span class=\"code\">Targets</span> list (<span class=\"code\">NewTargets</span>). </p> <p></p></div> "}