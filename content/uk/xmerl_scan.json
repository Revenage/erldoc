{"summary":"This module is the interface to the XML parser, it handles XML 1.0.","description":"<p></p><p>This module is the interface to the XML parser, it handles XML 1.0. The XML parser is activated through <span class=\"code\">xmerl_scan:string/[1,2]</span> or <span class=\"code\">xmerl_scan:file/[1,2]</span>. It returns records of the type defined in xmerl.hrl. See also <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/../apps/xmerl/xmerl_examples\">tutorial</a></span> on customization functions.</p><p></p>","funcs":"<table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-accumulate_whitespace-4-id62635\"></span><a class=\"title_link\" name=\"accumulate_whitespace-4\" href=\"/erldoc/docs/#accumulate_whitespace-4\">accumulate_whitespace(T::string(), S::global_state(), X3::atom(), Acc::string()) -&gt; {Acc, T1, S1}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"accumulate_whitespace-4\"></a> </p><p>Function to accumulate and normalize whitespace.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-cont_state-1-id63408\"></span><a class=\"title_link\" name=\"cont_state-1\" href=\"/erldoc/docs/#cont_state-1\">cont_state(S::global_state()) -&gt; global_state()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"cont_state-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#cont_state-2\">cont_state(ContinuationState, S)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-cont_state-2-id62601\"></span><a class=\"title_link\" name=\"cont_state-2\" href=\"/erldoc/docs/#cont_state-2\">cont_state(X::ContinuationState, S::global_state()) -&gt; global_state()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"cont_state-2\"></a> </p><p>For controlling the ContinuationState, to be used in a continuation function, and called when the parser encounters the end of the byte stream. See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/../apps/xmerl/xmerl_examples\">tutorial</a></span> on customization functions.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-event_state-1-id68811\"></span><a class=\"title_link\" name=\"event_state-1\" href=\"/erldoc/docs/#event_state-1\">event_state(S::global_state()) -&gt; global_state()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"event_state-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#event_state-2\">event_state(EventState, S)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-event_state-2-id65030\"></span><a class=\"title_link\" name=\"event_state-2\" href=\"/erldoc/docs/#event_state-2\">event_state(X::EventState, S::global_state()) -&gt; global_state()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"event_state-2\"></a> </p><p>For controlling the EventState, to be used in an event function, and called at the beginning and at the end of a parsed entity. See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/../apps/xmerl/xmerl_examples\">tutorial</a></span> on customization functions.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-fetch_state-1-id65515\"></span><a class=\"title_link\" name=\"fetch_state-1\" href=\"/erldoc/docs/#fetch_state-1\">fetch_state(S::global_state()) -&gt; global_state()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"fetch_state-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#fetch_state-2\">fetch_state(FetchState, S)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-fetch_state-2-id63363\"></span><a class=\"title_link\" name=\"fetch_state-2\" href=\"/erldoc/docs/#fetch_state-2\">fetch_state(X::FetchState, S::global_state()) -&gt; global_state()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"fetch_state-2\"></a> </p><p>For controlling the FetchState, to be used in a fetch function, and called when the parser fetch an external resource (eg. a DTD). See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/../apps/xmerl/xmerl_examples\">tutorial</a></span> on customization functions.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-file-1-id66295\"></span><a class=\"title_link\" name=\"file-1\" href=\"/erldoc/docs/#file-1\">file(Filename::string()) -&gt; {xmlElement(), Rest}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Rest = list()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"file-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#file-2\">file(Filename, [])</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-file-2-id68303\"></span><a class=\"title_link\" name=\"file-2\" href=\"/erldoc/docs/#file-2\">file(Filename::string(), Options::option_list()) -&gt; {document(), Rest}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Rest = list()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"file-2\"></a> </p><p>Parse file containing an XML document</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-hook_state-1-id68770\"></span><a class=\"title_link\" name=\"hook_state-1\" href=\"/erldoc/docs/#hook_state-1\">hook_state(S::global_state()) -&gt; global_state()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"hook_state-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#hook_state-2\">hook_state(HookState, S)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-hook_state-2-id62997\"></span><a class=\"title_link\" name=\"hook_state-2\" href=\"/erldoc/docs/#hook_state-2\">hook_state(X::HookState, S::global_state()) -&gt; global_state()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"hook_state-2\"></a> </p><p>For controlling the HookState, to be used in a hook function, and called when the parser has parsed a complete entity. See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/../apps/xmerl/xmerl_examples\">tutorial</a></span> on customization functions.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rules_state-1-id66254\"></span><a class=\"title_link\" name=\"rules_state-1\" href=\"/erldoc/docs/#rules_state-1\">rules_state(S::global_state()) -&gt; global_state()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"rules_state-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rules_state-2\">rules_state(RulesState, S)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rules_state-2-id67530\"></span><a class=\"title_link\" name=\"rules_state-2\" href=\"/erldoc/docs/#rules_state-2\">rules_state(X::RulesState, S::global_state()) -&gt; global_state()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"rules_state-2\"></a> </p><p>For controlling the RulesState, to be used in a rules function, and called when the parser store scanner information in a rules database. See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/../apps/xmerl/xmerl_examples\">tutorial</a></span> on customization functions.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-string-1-id67570\"></span><a class=\"title_link\" name=\"string-1\" href=\"/erldoc/docs/#string-1\">string(Text::list()) -&gt; {xmlElement(), Rest}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Rest = list()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"string-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#string-2\">string(Text, [])</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-string-2-id68266\"></span><a class=\"title_link\" name=\"string-2\" href=\"/erldoc/docs/#string-2\">string(Text::list(), Options::option_list()) -&gt; {document(), Rest}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Rest = list()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"string-2\"></a> </p><p>Parse string containing an XML document</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-user_state-1-id67449\"></span><a class=\"title_link\" name=\"user_state-1\" href=\"/erldoc/docs/#user_state-1\">user_state(S::global_state()) -&gt; global_state()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"user_state-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#user_state-2\">user_state(UserState, S)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-user_state-2-id67486\"></span><a class=\"title_link\" name=\"user_state-2\" href=\"/erldoc/docs/#user_state-2\">user_state(X::UserState, S::global_state()) -&gt; global_state()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"user_state-2\"></a> </p><p>For controlling the UserState, to be used in a user function. See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/../apps/xmerl/xmerl_examples\">tutorial</a></span> on customization functions.</p><p></p></div>"}