{"summary":"API module for public-key infrastructure.","description":"<p> </p><p>Provides functions to handle public-key infrastructure, for details see <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/public_key_app\">public_key(6)</a></span>. </p> <p></p>","funcs":" <a name=\"compute_key-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-compute_key-2-id85368\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L178\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>compute_key(OthersECDHkey, MyECDHkey) -&gt; SharedSecret</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B01</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">OthersECDHkey = #&apos;ECPoint&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">MyECDHkey = #&apos;ECPrivateKey&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SharedSecret = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Computes shared secret.</p> <p></p></div> <a name=\"compute_key-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-compute_key-3-id85412\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L186\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>compute_key(OthersDHkey, MyDHkey, DHparms) -&gt; SharedSecret</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B01</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">OthersDHkey = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/crypto#type-dh_public\">crypto:dh_public()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">MyDHkey = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/crypto#type-dh_private\">crypto:dh_private()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DHparms = #&apos;DHParameter&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SharedSecret = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Computes shared secret.</p> <p></p></div> <a name=\"decrypt_private-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-decrypt_private-2-id85593\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L194\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>decrypt_private(CipherText, Key) -&gt; PlainText</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><a name=\"decrypt_private-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-decrypt_private-3-id85647\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L194\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>decrypt_private(CipherText, Key, Options) -&gt; PlainText</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">CipherText = binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-rsa_private_key\">rsa_private_key()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/crypto#type-pk_encrypt_decrypt_opts\">crypto:pk_encrypt_decrypt_opts()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">PlainText = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Public-key decryption using the private key. See also <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/crypto#private_decrypt-4\">crypto:private_decrypt/4</a></span></p> <p></p></div> <a name=\"decrypt_public-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-decrypt_public-2-id85609\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L204\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>decrypt_public(CipherText, Key) -&gt; PlainText</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><a name=\"decrypt_public-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-decrypt_public-3-id85634\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L204\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>decrypt_public(CipherText, Key, Options) -&gt; PlainText</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">CipherText = binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-rsa_public_key\">rsa_public_key()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/crypto#type-pk_encrypt_decrypt_opts\">crypto:pk_encrypt_decrypt_opts()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">PlainText = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Public-key decryption using the public key. See also <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/crypto#public_decrypt-4\">crypto:public_decrypt/4</a></span></p> <p></p></div> <a name=\"der_decode-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-der_decode-2-id85774\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L214\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>der_decode(Asn1Type, Der) -&gt; Entity</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Asn1Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-asn1_type\">asn1_type()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Der = binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Entity = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Decodes a public-key ASN.1 DER encoded entity.</p> <p></p></div> <a name=\"der_encode-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-der_encode-2-id85696\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L222\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>der_encode(Asn1Type, Entity) -&gt; Der</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Asn1Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-asn1_type\">asn1_type()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Entity = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Der = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Encodes a public-key entity with ASN.1 DER encoding.</p> <p></p></div> <a name=\"dh_gex_group-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-dh_gex_group-4-id85530\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L230\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>dh_gex_group(MinSize, SuggestedSize, MaxSize, Groups) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, {Size, Group}} | {error, term()}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 18.2</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">MinSize = SuggestedSize = MaxSize = integer() &gt;= 1</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Groups = undefined | [{Size, [Group]}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Size = integer() &gt;= 1</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Group = {G, P}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">G = P = integer() &gt;= 1</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Selects a group for Diffie-Hellman key exchange with the key size in the range <span class=\"code\">MinSize...MaxSize</span> and as close to <span class=\"code\">SuggestedSize</span> as possible. If <span class=\"code\">Groups == undefined</span> a default set will be used, otherwise the group is selected from <span class=\"code\">Groups</span>.</p> <p>First a size, as close as possible to SuggestedSize, is selected. Then one group with that key size is randomly selected from the specified set of groups. If no size within the limits of <span class=\"code\">MinSize</span> and <span class=\"code\">MaxSize</span> is available, <span class=\"code\">{error,no_group_found}</span> is returned.</p> <p>The default set of groups is listed in <span class=\"code\">lib/public_key/priv/moduli</span>. This file may be regenerated like this:</p> <div class=\"example\"><pre>\t$&gt; cd $ERL_TOP/lib/public_key/priv/ $&gt; generate ---- wait until all background jobs has finished. It may take several days ! $&gt; cat moduli-* &gt; moduli $&gt; cd ..; make </pre></div> <p></p></div> <a name=\"encrypt_private-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-encrypt_private-2-id82605\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L251\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>encrypt_private(PlainText, Key) -&gt; CipherText</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><a name=\"encrypt_private-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-encrypt_private-3-id82645\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L251\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>encrypt_private(PlainText, Key, Options) -&gt; CipherText</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">PlainText = binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-rsa_private_key\">rsa_private_key()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/crypto#type-pk_encrypt_decrypt_opts\">crypto:pk_encrypt_decrypt_opts()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">CipherText = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Public-key encryption using the private key. See also <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/crypto#private_encrypt-4\">crypto:private_encrypt/4</a></span>.</p> <p></p></div> <a name=\"encrypt_public-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-encrypt_public-2-id84550\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L262\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>encrypt_public(PlainText, Key) -&gt; CipherText</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><a name=\"encrypt_public-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-encrypt_public-3-id84595\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L262\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>encrypt_public(PlainText, Key, Options) -&gt; CipherText</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">PlainText = binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-rsa_public_key\">rsa_public_key()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/crypto#type-pk_encrypt_decrypt_opts\">crypto:pk_encrypt_decrypt_opts()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">CipherText = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Public-key encryption using the public key. See also <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/crypto#public_encrypt-4\">crypto:public_encrypt/4</a></span>.</p> <p></p></div> <a name=\"generate_key-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-generate_key-1-id84634\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L272\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>generate_key(Params :: DHparams | ECparams | RSAparams) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;DHkeys | ECkey | RSAkey</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B01</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DHparams = #&apos;DHParameter&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DHkeys = {PublicDH :: binary(), PrivateDH :: binary()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ECparams = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-ecpk_parameters_api\">ecpk_parameters_api()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ECkey = #&apos;ECPrivateKey&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RSAparams = {rsa, Size, PubExp}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Size = PubExp = integer() &gt;= 1</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RSAkey = #&apos;RSAPrivateKey&apos;{}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Generates a new keypair. Note that except for Diffie-Hellman the public key is included in the private key structure. See also <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/crypto#generate_key-2\">crypto:generate_key/2</a></span> </p> <p></p></div> <a name=\"pem_decode-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pem_decode-1-id83225\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L283\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pem_decode(PemBin :: binary()) -&gt; [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-pem_entry\">pem_entry()</a></span>]</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>Decodes PEM binary data and returns entries as ASN.1 DER encoded entities.</p> <p>Example <span class=\"code\">{ok, PemBin} = file:read_file(&quot;cert.pem&quot;). PemEntries = public_key:pem_decode(PemBin). </span></p> <p></p></div> <a name=\"pem_encode-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pem_encode-1-id83153\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L295\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pem_encode(PemEntries :: [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-pem_entry\">pem_entry()</a></span>]) -&gt; binary()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>Creates a PEM binary.</p> <p></p></div> <a name=\"pem_entry_decode-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pem_entry_decode-1-id83420\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L303\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pem_entry_decode(PemEntry) -&gt; term()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><a name=\"pem_entry_decode-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pem_entry_decode-2-id83182\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L303\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pem_entry_decode(PemEntry, Password) -&gt; term()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">PemEntry = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-pem_entry\">pem_entry()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Password = string()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Decodes a PEM entry. <span class=\"code\">pem_decode/1</span> returns a list of PEM entries. Notice that if the PEM entry is of type &apos;SubjectPublickeyInfo&apos;, it is further decoded to an <span class=\"code\">rsa_public_key()</span> or <span class=\"code\">dsa_public_key()</span>.</p> <p></p></div> <a name=\"pem_entry_encode-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pem_entry_encode-2-id83184\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L315\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pem_entry_encode(Asn1Type, Entity) -&gt; <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-pem_entry\">pem_entry()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><a name=\"pem_entry_encode-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pem_entry_encode-3-id83602\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L315\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pem_entry_encode(Asn1Type, Entity, InfoPwd) -&gt; <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-pem_entry\">pem_entry()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Asn1Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-pki_asn1_type\">pki_asn1_type()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Entity = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">InfoPwd = {CipherInfo, Password}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">CipherInfo = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-cipher_info\">cipher_info()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Password = string()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a PEM entry that can be feed to <span class=\"code\">pem_encode/1</span>.</p> <p>If <span class=\"code\">Asn1Type</span> is <span class=\"code\">&apos;SubjectPublicKeyInfo&apos;</span>, <span class=\"code\">Entity</span> must be either an <span class=\"code\">rsa_public_key()</span>, <span class=\"code\">dsa_public_key()</span> or an <span class=\"code\">ec_public_key()</span> and this function creates the appropriate <span class=\"code\">&apos;SubjectPublicKeyInfo&apos;</span> entry. </p> <p></p></div> <a name=\"pkix_decode_cert-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_decode_cert-2-id83758\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L330\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_decode_cert(Cert, Type) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;#&apos;Certificate&apos;{} | #&apos;OTPCertificate&apos;{}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cert = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = plain | otp</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Decodes an ASN.1 DER-encoded PKIX certificate. Option <span class=\"code\">otp</span> uses the customized ASN.1 specification OTP-PKIX.asn1 for decoding and also recursively decode most of the standard parts.</p> <p></p></div> <a name=\"pkix_encode-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_encode-3-id83866\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L341\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_encode(Asn1Type, Entity, Type) -&gt; Der</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Asn1Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-asn1_type\">asn1_type()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Entity = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = otp | plain</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Der = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>DER encodes a PKIX x509 certificate or part of such a certificate. This function must be used for encoding certificates or parts of certificates that are decoded/created in the <span class=\"code\">otp</span> format, whereas for the plain format this function directly calls <span class=\"code\">der_encode/2</span>.</p> <p></p></div> <a name=\"pkix_is_issuer-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_is_issuer-2-id84039\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L353\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_is_issuer(Cert, IssuerCert) -&gt; boolean()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cert = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span> | #&apos;OTPCertificate&apos;{} | #&apos;CertificateList&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IssuerCert = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span> | #&apos;OTPCertificate&apos;{}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Checks if <span class=\"code\">IssuerCert</span> issued <span class=\"code\">Cert</span>.</p> <p></p></div> <a name=\"pkix_is_fixed_dh_cert-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_is_fixed_dh_cert-1-id83826\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L361\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_is_fixed_dh_cert(Cert) -&gt; boolean()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cert = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span> | #&apos;OTPCertificate&apos;{}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Checks if a certificate is a fixed Diffie-Hellman certificate.</p> <p></p></div> <a name=\"pkix_is_self_signed-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_is_self_signed-1-id83828\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L369\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_is_self_signed(Cert) -&gt; boolean()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cert = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span> | #&apos;OTPCertificate&apos;{}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Checks if a certificate is self-signed.</p> <p></p></div> <a name=\"pkix_issuer_id-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_issuer_id-2-id83867\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L377\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_issuer_id(Cert, IssuedBy) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-issuer_id\">issuer_id()</a></span>} | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cert = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span> | #&apos;OTPCertificate&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IssuedBy = self | other</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the issuer id.</p> <p></p></div> <a name=\"pkix_normalize_name-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_normalize_name-1-id84039\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L385\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_normalize_name(Issuer) -&gt; Normalized</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Issuer = Normalized = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-issuer_name\">issuer_name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Normalizes an issuer name so that it can be easily compared to another issuer name.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pkix_path_validation-3-id67905\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L395\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"pkix_path_validation-3\" href=\"/erldoc/docs/#pkix_path_validation-3\">pkix_path_validation(TrustedCert, CertChain, Options) -&gt; {ok, {PublicKeyInfo, PolicyTree}} | {error, {bad_cert, Reason}} </a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">TrustedCert = #&apos;OTPCertificate&apos;{} | der_encoded() | atom()</span><br></div> <div class=\"REFBODY rb-6\">Normally a trusted certificate, but it can also be a path-validation error that can be discovered while constructing the input to this function and that is to be run through the <span class=\"code\">verify_fun</span>. Examples are <span class=\"code\">unknown_ca</span> and <span class=\"code\">selfsigned_peer.</span> </div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CertChain = [der_encoded()]</span><br></div> <div class=\"REFBODY rb-6\">A list of DER-encoded certificates in trust order ending with the peer certificate.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Options = proplists:proplist()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">PublicKeyInfo = {?&apos;rsaEncryption&apos; | ?&apos;id-dsa&apos;, rsa_public_key() | integer(), &apos;NULL&apos; | &apos;Dss-Parms&apos;{}}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">PolicyTree = term()</span><br></div> <div class=\"REFBODY rb-6\">At the moment this is always an empty list as policies are not currently supported.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = cert_expired | invalid_issuer | invalid_signature | name_not_permitted | missing_basic_constraint | invalid_key_usage | {revoked, crl_reason()} | atom() </span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p> Performs a basic path validation according to <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.ietf.org/rfc/rfc5280.txt\">RFC 5280.</a></span> However, CRL validation is done separately by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pkix_crls_validate-3\">pkix_crls_validate/3</a></span> and is to be called from the supplied <span class=\"code\">verify_fun</span>. </p> <p>Available options:</p> <dl> <dt><strong>{verify_fun, {fun(), InitialUserState::term()}</strong></dt> <dd> <p>The fun must be defined as:</p> <div class=\"example example-none\"><pre>fun(OtpCert :: #&apos;OTPCertificate&apos;{}, Event :: {bad_cert, Reason :: atom() | {revoked, atom()}} | {extension, #&apos;Extension&apos;{}}, InitialUserState :: term()) -&gt; {valid, UserState :: term()} | {valid_peer, UserState :: term()} | {fail, Reason :: term()} | {unknown, UserState :: term()}.</pre></div> <p>If the verify callback fun returns <span class=\"code\">{fail, Reason}</span>, the verification process is immediately stopped. If the verify callback fun returns <span class=\"code\">{valid, UserState}</span>, the verification process is continued. This can be used to accept specific path validation errors, such as <span class=\"code\">selfsigned_peer</span>, as well as verifying application-specific extensions. If called with an extension unknown to the user application, the return value <span class=\"code\">{unknown, UserState}</span> is to be used.</p> </dd> <dt><strong>{max_path_length, integer()}</strong></dt> <dd> The <span class=\"code\">max_path_length</span> is the maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path. So, if <span class=\"code\">max_path_length</span> is 0, the PEER must be signed by the trusted ROOT-CA directly, if it is 1, the path can be PEER, CA, ROOT-CA, if it is 2, the path can be PEER, CA, CA, ROOT-CA, and so on. </dd> </dl> <p>Possible reasons for a bad certificate: </p> <dl> <dt><strong>cert_expired</strong></dt> <dd><p>Certificate is no longer valid as its expiration date has passed.</p></dd> <dt><strong>invalid_issuer</strong></dt> <dd><p>Certificate issuer name does not match the name of the issuer certificate in the chain.</p></dd> <dt><strong>invalid_signature</strong></dt> <dd><p>Certificate was not signed by its issuer certificate in the chain.</p></dd> <dt><strong>name_not_permitted</strong></dt> <dd><p>Invalid Subject Alternative Name extension.</p></dd> <dt><strong>missing_basic_constraint</strong></dt> <dd><p>Certificate, required to have the basic constraints extension, does not have a basic constraints extension.</p></dd> <dt><strong>invalid_key_usage</strong></dt> <dd><p>Certificate key is used in an invalid way according to the key-usage extension.</p></dd> <dt><strong>{revoked, crl_reason()}</strong></dt> <dd><p>Certificate has been revoked.</p></dd> <dt><strong>atom()</strong></dt> <dd><p>Application-specific error reason that is to be checked by the <span class=\"code\">verify_fun</span>.</p></dd> </dl> <p></p></div> <a name=\"pkix_crl_issuer-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_crl_issuer-1-id92824\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L495\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_crl_issuer(CRL :: CRL | #&apos;CertificateList&apos;{}) -&gt; Issuer</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.5</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">CRL = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Issuer = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-issuer_name\">issuer_name()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the issuer of the <span class=\"code\">CRL</span>.</p> <p></p></div> <a name=\"pkix_crls_validate-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_crls_validate-3-id92828\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L503\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_crls_validate(OTPcertificate, DPandCRLs, Options) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CRLstatus</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">OTPcertificate = #&apos;OTPCertificate&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DPandCRLs = [DPandCRL]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DPandCRL = {DP, {DerCRL, CRL}}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DP = #&apos;DistributionPoint&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DerCRL = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">CRL = #&apos;CertificateList&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [{atom(), term()}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">CRLstatus = valid | {bad_cert, BadCertReason}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BadCertReason = <br>&#xA0;&#xA0;&#xA0;&#xA0;revocation_status_undetermined |<br>&#xA0;&#xA0;&#xA0;&#xA0;{revocation_status_undetermined, Reason :: term()} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{revoked, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-crl_reason\">crl_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Performs CRL validation. It is intended to be called from the verify fun of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pkix_path_validation-3\">pkix_path_validation/3</a></span>.</p> <p>Available options:</p> <dl> <dt><strong>{update_crl, fun()}</strong></dt> <dd> <p>The fun has the following type specification:</p> <div class=\"example example-none\"><pre> fun(#&apos;DistributionPoint&apos;{}, #&apos;CertificateList&apos;{}) -&gt; #&apos;CertificateList&apos;{}</pre></div> <p>The fun uses the information in the distribution point to access the latest possible version of the CRL. If this fun is not specified, Public Key uses the default implementation: </p> <div class=\"example example-none\"><pre> fun(_DP, CRL) -&gt; CRL end</pre></div> </dd> <dt><strong>{issuer_fun, fun()}</strong></dt> <dd> <p>The fun has the following type specification:</p> <div class=\"example example-none\"><pre>fun(#&apos;DistributionPoint&apos;{}, #&apos;CertificateList&apos;{}, {rdnSequence,[#&apos;AttributeTypeAndValue&apos;{}]}, term()) -&gt; {ok, #&apos;OTPCertificate&apos;{}, [der_encoded]}</pre></div> <p>The fun returns the root certificate and certificate chain that has signed the CRL. </p> <div class=\"example example-none\"><pre> fun(DP, CRL, Issuer, UserState) -&gt; {ok, RootCert, CertChain}</pre></div> </dd> <dt><strong>{undetermined_details, boolean()}</strong></dt> <dd> <p>Defaults to false. When revocation status cannot be determined, and this option is set to true, details of why no CRLs where accepted are included in the return value.</p> </dd> </dl> <p></p></div> <a name=\"pkix_crl_verify-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_crl_verify-2-id93030\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L555\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_crl_verify(CRL, Cert) -&gt; boolean()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.5</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">CRL = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span> | #&apos;CertificateList&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cert = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span> | #&apos;OTPCertificate&apos;{}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Verify that <span class=\"code\">Cert</span> is the <span class=\"code\">CRL</span> signer.</p> <p></p></div> <a name=\"pkix_dist_point-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_dist_point-1-id93035\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L563\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_dist_point(Cert) -&gt; DistPoint</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.5</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cert = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span> | #&apos;OTPCertificate&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DistPoint = #&apos;DistributionPoint&apos;{}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a distribution point for CRLs issued by the same issuer as <span class=\"code\">Cert</span>. Can be used as input to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pkix_crls_validate-3\">pkix_crls_validate/3</a></span> </p> <p></p></div> <a name=\"pkix_dist_points-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_dist_points-1-id93445\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L574\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_dist_points(Cert) -&gt; DistPoints</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.5</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cert = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span> | #&apos;OTPCertificate&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DistPoints = [#&apos;DistributionPoint&apos;{}]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p> Extracts distribution points from the certificates extensions.</p> <p></p></div> <a name=\"pkix_match_dist_point-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_match_dist_point-2-id93467\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L582\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_match_dist_point(CRL, DistPoint) -&gt; boolean()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">CRL = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span> | #&apos;CertificateList&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DistPoint = #&apos;DistributionPoint&apos;{}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Checks whether the given distribution point matches the Issuing Distribution Point of the CRL, as described in RFC 5280. If the CRL doesn&apos;t have an Issuing Distribution Point extension, the distribution point always matches.</p> <p></p></div> <a name=\"pkix_sign-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_sign-2-id93024\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L594\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_sign(Cert, Key) -&gt; Der</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cert = #&apos;OTPTBSCertificate&apos;{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-private_key\">private_key()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Der = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Signs an &apos;OTPTBSCertificate&apos;. Returns the corresponding DER-encoded certificate.</p> <p></p></div> <a name=\"pkix_sign_types-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_sign_types-1-id93354\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L603\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_sign_types(AlgorithmId) -&gt; {DigestType, SignatureType}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B01</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AlgorithmId = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-oid\">oid()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DigestType = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/crypto#type-rsa_digest_type\">crypto:rsa_digest_type()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SignatureType = rsa | dsa | ecdsa</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Translates signature algorithm OID to Erlang digest and signature types. </p> <p>The <span class=\"code\">AlgorithmId</span> is the signature OID from a certificate or a certificate revocation list.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pkix_test_data-1-id67517\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L613\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"pkix_test_data-1\" href=\"/erldoc/docs/#pkix_test_data-1\">pkix_test_data(Options) -&gt; Config </a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.1</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pkix_test_data-1-id67523\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L613\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"pkix_test_data-1\" href=\"/erldoc/docs/#pkix_test_data-1\">pkix_test_data([chain_opts()]) -&gt; [conf_opt()]</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.1</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Options = #{chain_type() := chain_opts()} </span><br></div> <div class=\"REFBODY rb-6\">Options for ROOT, Intermediate and Peer certs</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">chain_type() = server_chain | client_chain </span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">chain_opts() = #{root := [cert_opt()] | root_cert(), peer := [cert_opt()], intermediates =&gt; [[cert_opt()]]}</span><br></div> <div class=\"REFBODY rb-6\"> A valid chain must have at least a ROOT and a peer cert. The root cert can be given either as a cert pre-generated by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pkix_test_root_cert-2\">pkix_test_root_cert/2</a></span>, or as root cert generation options. </div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">root_cert() = #{cert := der_encoded(), key := Key}</span><br></div> <div class=\"REFBODY rb-6\"> A root certificate generated by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pkix_test_root_cert-2\">pkix_test_root_cert/2</a></span>. </div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">cert_opt() = {Key, Value}</span><br></div> <div class=\"REFBODY rb-6\">For available options see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#cert_opt\">cert_opt()</a></span> below.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Config = #{server_config := [conf_opt()], client_config := [conf_opt()]}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">conf_opt() = {cert, der_encoded()} | {key, PrivateKey} |{cacerts, [der_encoded()]}</span><br></div> <div class=\"REFBODY rb-6\"> This is a subset of the type <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/ssl#type-tls_option\">ssl:tls_option()</a></span>. <span class=\"code\">PrivateKey</span> is what <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#generate_key-1\">generate_key/1</a></span> returns. </div> </div><div class=\"REFBODY rb-7\"><p> </p><p> Creates certificate configuration(s) consisting of certificate and its private key plus CA certificate bundle, for a client and a server, intended to facilitate automated testing of applications using X509-certificates, often through SSL/TLS. The test data can be used when you have control over both the client and the server in a test scenario. </p> <p> When this function is called with a map containing client and server chain specifications; it generates both a client and a server certificate chain where the <span class=\"code\">cacerts</span> returned for the server contains the root cert the server should trust and the intermediate certificates the server should present to connecting clients. The root cert the server should trust is the one used as root of the client certificate chain. Vice versa applies to the <span class=\"code\">cacerts</span> returned for the client. The root cert(s) can either be pre-generated with <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pkix_test_root_cert-2\">pkix_test_root_cert/2</a></span>, or if options are specified; it is (they are) generated. </p> <p> When this function is called with a list of certificate options; it generates a configuration with just one node certificate where <span class=\"code\">cacerts</span> contains the root cert and the intermediate certs that should be presented to a peer. In this case the same root cert must be used for all peers. This is useful in for example an Erlang distributed cluster where any node,\ttowards another node, acts either as a server or as a client depending on who connects to whom. The generated certificate contains a subject altname, which is not needed in a client certificate, but makes the certificate useful for both roles. </p> <p> The <a name=\"cert_opt\"></a><span class=\"code\">cert_opt()</span> type consists of the following options: </p> <dl> <dt><strong> {digest, digest_type()}</strong></dt> <dd><p>Hash algorithm to be used for signing the certificate together with the key option. Defaults to sha that is sha1. </p></dd> <dt><strong> {key, key_params() | private_key()}</strong></dt> <dd><p>Parameters to be used to call public_key:generate_key/1, to generate a key, or an existing key. Defaults to generating an ECDSA key. Note this could fail if Erlang/OTP is compiled with a very old cryptolib.</p></dd> <dt><strong> {validity, {From::erlang:timestamp(), To::erlang:timestamp()}} </strong></dt> <dd><p>The validity period of the certificate.</p></dd> <dt><strong> {extensions, [#&apos;Extension&apos;{}]}</strong></dt> <dd><p> Extensions to include in the certificate.</p> <p>Default extensions included in CA certificates if not otherwise specified are: </p> <div class=\"example example-none\"><pre>[#&apos;Extension&apos;{extnID = ?&apos;id-ce-keyUsage&apos;, extnValue = [keyCertSign, cRLSign], critical = false},#&apos;Extension&apos;{extnID = ?&apos;id-ce-basicConstraints&apos;, extnValue = #&apos;BasicConstraints&apos;{cA = true}, critical = true}]</pre></div> <p>Default extensions included in the server peer cert if not otherwise specified are: </p> <div class=\"example example-none\"><pre>[#&apos;Extension&apos;{extnID = ?&apos;id-ce-keyUsage&apos;, extnValue = [digitalSignature, keyAgreement], critical = false},#&apos;Extension&apos;{extnID = ?&apos;id-ce-subjectAltName&apos;, extnValue = [{dNSName, Hostname}], critical = false}]</pre></div> <p>Hostname is the result of calling net_adm:localhost() in the Erlang node where this funcion is called. </p></dd> </dl> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p></p><p> Note that the generated certificates and keys does not provide a formally correct PKIX-trust-chain and they cannot be used to achieve real security. This function is provided for testing purposes only.</p><p></p></div></div> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pkix_test_root_cert-2-id68427\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L746\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"pkix_test_root_cert-2\" href=\"/erldoc/docs/#pkix_test_root_cert-2\">pkix_test_root_cert(Name, Options) -&gt; RootCert</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.2</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div> <div class=\"REFBODY rb-6\">The root certificate name.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Options = [cert_opt()]</span><br></div> <div class=\"REFBODY rb-6\"> For available options see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#cert_opt\">cert_opt()</a></span> under <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pkix_test_data-1\">pkix_test_data/1</a></span>. </div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">RootCert = #{cert := der_encoded(), key := Key}</span><br></div> <div class=\"REFBODY rb-6\"> A root certificate and key. The <span class=\"code\">Key</span> is generated by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#generate_key-1\">generate_key/1</a></span>. </div> </div><div class=\"REFBODY rb-7\"><p> </p><p> Generates a root certificate that can be used in multiple calls to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pkix_test_data-1\">pkix_test_data/1</a></span> when you want the same root certificate for several generated certificates. </p> <p></p></div> <a name=\"pkix_verify-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pkix_verify-2-id94452\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L776\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pkix_verify(Cert, Key) -&gt; boolean()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cert = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-der_encoded\">der_encoded()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-public_key\">public_key()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Verifies PKIX x.509 certificate signature.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pkix_verify_hostname-2-id68534\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L784\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"pkix_verify_hostname-2\" href=\"/erldoc/docs/#pkix_verify_hostname-2\">pkix_verify_hostname(Cert, ReferenceIDs) -&gt; boolean()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.3</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pkix_verify_hostname-3-id68540\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L784\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"pkix_verify_hostname-3\" href=\"/erldoc/docs/#pkix_verify_hostname-3\">pkix_verify_hostname(Cert, ReferenceIDs, Opts) -&gt; boolean()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.3</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Cert = der_encoded() | #&apos;OTPCertificate&apos;{} </span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ReferenceIDs = [ RefID ]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">RefID = {dns_id,string()} | {srv_id,string()} | {uri_id,string()} | {ip,inet:ip_address()|string()} | {OtherRefID,term()}}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">OtherRefID = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Opts = [ PvhOpt() ]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">PvhOpt = [MatchOpt | FailCallBackOpt | FqdnExtractOpt]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">MatchOpt = {match_fun, fun(RefId | FQDN::string(), PresentedID) -&gt; boolean() | default}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">PresentedID = {dNSName,string()} | {uniformResourceIdentifier,string() | {iPAddress,list(byte())} | {OtherPresId,term()}}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">OtherPresID = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">FailCallBackOpt = {fail_callback, fun(#&apos;OTPCertificate&apos;{}) -&gt; boolean()}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">FqdnExtractOpt = {fqdn_fun, fun(RefID) -&gt; FQDN::string() | default | undefined}</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>This function checks that the <i>Presented Identifier</i> (e.g hostname) in a peer certificate is in agreement with at least one of the <i>Reference Identifier</i> that the client expects to be connected to. The function is intended to be added as an extra client check of the peer certificate when performing <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/public_key#pkix_path_validation-3\">public_key:pkix_path_validation/3</a></span> </p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://tools.ietf.org/html/rfc6125\">RFC 6125</a></span> for detailed information about hostname verification. The <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/public_key/using_public_key#verify_hostname\">User&apos;s Guide</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/public_key/using_public_key#verify_hostname_examples\">code examples</a></span> describes this function more detailed. </p> <p>The <span class=\"code\">{OtherRefId,term()}</span> is defined by the user and is passed to the <span class=\"code\">match_fun</span>, if defined. If the term in <span class=\"code\">OtherRefId</span> is a binary, it will be converted to a string. </p> <p>The <span class=\"code\">ip</span> Reference ID takes an <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/inet#type-ip_address\">inet:ip_address()</a></span> or an ip address in string format (E.g &quot;10.0.1.1&quot; or &quot;1234::5678:9012&quot;) as second element. </p> <p>The options are:</p> <dl> <dt><strong><span class=\"code\">match_fun</span></strong></dt> <dd> The <span class=\"code\">fun/2</span> in this option replaces the default host name matching rules. The fun should return a boolean to tell if the Reference ID and Presented ID matches or not. The fun can also return a third value, the atom <span class=\"code\">default</span>, if the default matching rules shall apply. This makes it possible to augment the tests with a special case: <div class=\"example example-none\"><pre>fun(....) -&gt; true; % My special case (_, _) -&gt; default % all others falls back to the inherit testsend</pre></div> <br>See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pkix_verify_hostname_match_fun-1\">pkix_verify_hostname_match_fun/1</a></span> for a function that takes a protocol name as argument and returns a <span class=\"code\">fun/2</span> suitable for this option and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/public_key/using_public_key#redefining_match_op\">Re-defining the match operation</a></span> in the User&apos;s Guide for an example. </dd> <dt><strong><span class=\"code\">fail_callback</span></strong></dt> <dd>If a matching fails, there could be circumstances when the certificate should be accepted anyway. Think for example of a web browser where you choose to accept an outdated certificate. This option enables implementation of such a function. This <span class=\"code\">fun/1</span> is called when no <span class=\"code\">ReferenceID</span> matches. The return value of the fun (a <span class=\"code\">boolean()</span>) decides the outcome. If <span class=\"code\">true</span> the the certificate is accepted otherwise it is rejected. See <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/public_key/using_public_key#-pinning--a-certificate\">&quot;Pinning&quot; a Certificate</a></span> in the User&apos;s Guide. </dd> <dt><strong><span class=\"code\">fqdn_fun</span></strong></dt> <dd>This option augments the host name extraction from URIs and other Reference IDs. It could for example be a very special URI that is not standardised. The fun takes a Reference ID as argument and returns one of: <ul> <li>the hostname</li> <li>the atom <span class=\"code\">default</span>: the default host name extract function will be used</li> <li>the atom <span class=\"code\">undefined</span>: a host name could not be extracted. The pkix_verify_hostname/3 will return <span class=\"code\">false</span>.</li> </ul> <br>For an example, see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/public_key/using_public_key#hostname_extraction\">Hostname extraction</a></span> in the User&apos;s Guide. </dd> </dl> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pkix_verify_hostname_match_fun-1-id70682\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L869\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"pkix_verify_hostname_match_fun-1\" href=\"/erldoc/docs/#pkix_verify_hostname_match_fun-1\">pkix_verify_hostname_match_fun(Protcol) -&gt; fun(RefId | FQDN::string(), PresentedID) -&gt; boolean() | default</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.0</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Protocol = https</span><br></div> <div class=\"REFBODY rb-6\">The algorithm for wich the fun should implement the special matching rules</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">RefId</span><br></div> <div class=\"REFBODY rb-6\">See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pkix_verify_hostname-3\">pkix_verify_hostname/3</a></span>.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">FQDN</span><br></div> <div class=\"REFBODY rb-6\">See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pkix_verify_hostname-3\">pkix_verify_hostname/3</a></span>.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">PresentedID</span><br></div> <div class=\"REFBODY rb-6\">See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pkix_verify_hostname-3\">pkix_verify_hostname/3</a></span>.</div> </div><div class=\"REFBODY rb-7\"><p> </p><p>The return value of calling this function is intended to be used in the <span class=\"code\">match_fun</span> option in <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pkix_verify_hostname-3\">pkix_verify_hostname/3</a></span>. </p> <p>The returned fun augments the verify hostname matching according to the specific rules for the protocol in the argument. </p> <p></p></div> <a name=\"sign-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sign-3-id95284\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L894\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sign(Msg, DigestType, Key) -&gt; Signature</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"sign-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sign-4-id83130\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L894\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sign(Msg, DigestType, Key, Options) -&gt; Signature</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Msg = binary() | {digest, binary()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DigestType = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-digest_type\">digest_type()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-private_key\">private_key()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/crypto#type-pk_sign_verify_opts\">crypto:pk_sign_verify_opts()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Signature = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a digital signature.</p> <p>The <span class=\"code\">Msg</span> is either the binary &quot;plain text&quot; data to be signed or it is the hashed value of &quot;plain text&quot;, that is, the digest.</p> <p></p></div> <a name=\"ssh_decode-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-ssh_decode-2-id95293\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L906\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>ssh_decode(SshBin, Type) -&gt; Decoded</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B03</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SshBin = binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = ssh2_pubkey | OtherType | InternalType</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">OtherType = public_key | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-ssh_file\">ssh_file()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">InternalType = new_openssh</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Decoded = Decoded_ssh2_pubkey | Decoded_OtherType</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Decoded_ssh2_pubkey = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-public_key\">public_key()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Decoded_OtherType = [{<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-public_key\">public_key()</a></span>, Attributes}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Attributes = [{atom(), term()}]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Decodes an SSH file-binary. In the case of <span class=\"code\">known_hosts</span> or <span class=\"code\">auth_keys</span>, the binary can include one or more lines of the file. Returns a list of public keys and their attributes, possible attribute values depends on the file type represented by the binary. </p> <p>If the <span class=\"code\">Type</span> is <span class=\"code\">ssh2_pubkey</span>, the result will be <span class=\"code\">Decoded_ssh2_pubkey</span>. Otherwise it will be <span class=\"code\">Decoded_OtherType</span>. </p> <dl> <dt><strong>RFC4716 attributes - see RFC 4716.</strong></dt> <dd><p>{headers, [{string(), utf8_string()}]}</p></dd> <dt><strong>auth_key attributes - see manual page for sshd.</strong></dt> <dd>{comment, string()}</dd> <dd>{options, [string()]}</dd> <dd><p>{bits, integer()} - In SSH version 1 files.</p></dd> <dt><strong>known_host attributes - see manual page for sshd.</strong></dt> <dd>{hostnames, [string()]}</dd> <dd>{comment, string()}</dd> <dd><p>{bits, integer()} - In SSH version 1 files.</p></dd> </dl> <p>Example: <span class=\"code\">{ok, SshBin} = file:read_file(&quot;known_hosts&quot;)</span>. </p> <p>If <span class=\"code\">Type</span> is <span class=\"code\">public_key</span> the binary can be either an RFC4716 public key or an OpenSSH public key.</p> <p></p></div> <a name=\"ssh_encode-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-ssh_encode-2-id95763\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L938\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>ssh_encode(InData, Type) -&gt; binary()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B03</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = ssh2_pubkey | OtherType</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">OtherType = public_key | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-ssh_file\">ssh_file()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">InData = InData_ssh2_pubkey | OtherInData</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">InData_ssh2_pubkey = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-public_key\">public_key()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">OtherInData = [{Key, Attributes}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-public_key\">public_key()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Attributes = [{atom(), term()}]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Encodes a list of SSH file entries (public keys and attributes) to a binary. Possible attributes depend on the file type, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#ssh_decode-2\">ssh_decode/2</a></span>. </p> <p>If the <span class=\"code\">Type</span> is <span class=\"code\">ssh2_pubkey</span>, the <span class=\"code\">InData</span> shall be <span class=\"code\">InData_ssh2_pubkey</span>. Otherwise it shall be <span class=\"code\">OtherInData</span>. </p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-ssh_hostkey_fingerprint-1-id66794\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L952\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"ssh_hostkey_fingerprint-1\" href=\"/erldoc/docs/#ssh_hostkey_fingerprint-1\">ssh_hostkey_fingerprint(HostKey) -&gt; string()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.2</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-ssh_hostkey_fingerprint-2-id66800\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L952\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"ssh_hostkey_fingerprint-2\" href=\"/erldoc/docs/#ssh_hostkey_fingerprint-2\">ssh_hostkey_fingerprint(DigestType, HostKey) -&gt; string()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.2</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-ssh_hostkey_fingerprint-2-id66807\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L952\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"ssh_hostkey_fingerprint-2\" href=\"/erldoc/docs/#ssh_hostkey_fingerprint-2\">ssh_hostkey_fingerprint([DigestType], HostKey) -&gt; [string()]</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.2</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">HostKey = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-public_key\">public_key()</a></span></span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">DigestType = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-digest_type\">digest_type()</a></span></span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Calculates a ssh fingerprint from a public host key as openssh does.</p> <p>The algorithm in <span class=\"code\">ssh_hostkey_fingerprint/1</span> is md5 to be compatible with older ssh-keygen commands. The string from the second variant is prepended by the algorithm name in uppercase as in newer ssh-keygen commands.</p> <p>Examples:</p> <div class=\"example example-none\"><pre> 2&gt; public_key:ssh_hostkey_fingerprint(Key). &quot;f5:64:a6:c1:5a:cb:9f:0a:10:46:a2:5c:3e:2f:57:84&quot; 3&gt; public_key:ssh_hostkey_fingerprint(md5,Key). &quot;MD5:f5:64:a6:c1:5a:cb:9f:0a:10:46:a2:5c:3e:2f:57:84&quot; 4&gt; public_key:ssh_hostkey_fingerprint(sha,Key). &quot;SHA1:bSLY/C4QXLDL/Iwmhyg0PGW9UbY&quot; 5&gt; public_key:ssh_hostkey_fingerprint(sha256,Key). &quot;SHA256:aZGXhabfbf4oxglxltItWeHU7ub3Dc31NcNw2cMJePQ&quot; 6&gt; public_key:ssh_hostkey_fingerprint([sha,sha256],Key). [&quot;SHA1:bSLY/C4QXLDL/Iwmhyg0PGW9UbY&quot;, &quot;SHA256:aZGXhabfbf4oxglxltItWeHU7ub3Dc31NcNw2cMJePQ&quot;]</pre></div> <p></p></div> <a name=\"verify-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-verify-4-id96201\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L987\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>verify(Msg, DigestType, Signature, Key) -&gt; boolean()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><a name=\"verify-5\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-verify-5-id96235\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L987\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>verify(Msg, DigestType, Signature, Key, Options) -&gt; boolean()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Msg = binary() | {digest, binary()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DigestType = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-digest_type\">digest_type()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Signature = binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-public_key\">public_key()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/crypto#type-pk_sign_verify_opts\">crypto:pk_sign_verify_opts()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Verifies a digital signature.</p> <p>The <span class=\"code\">Msg</span> is either the binary &quot;plain text&quot; data or it is the hashed value of &quot;plain text&quot;, that is, the digest.</p> <p></p></div> <a name=\"short_name_hash-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-short_name_hash-1-id96483\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/public_key/doc/src/public_key.xml#L998\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>short_name_hash(Name) -&gt; string()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Name = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-issuer_name\">issuer_name()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Generates a short hash of an issuer name. The hash is returned as a string containing eight hexadecimal digits.</p> <p>The return value of this function is the same as the result of the commands <span class=\"code\">openssl crl -hash</span> and <span class=\"code\">openssl x509 -issuer_hash</span>, when passed the issuer name of a CRL or a certificate, respectively. This hash is used by the <span class=\"code\">c_rehash</span> tool to maintain a directory of symlinks to CRL files, in order to facilitate looking up a CRL by its issuer name.</p> <p></p></div> ","name":"public_key"}