{"summary":"Megaco transport behaviour.","description":"<p> </p><p>The following functions should be exported from a <span class=\"code\">megaco_transport</span> callback module:</p> <ul> <li> <p><span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#send_message\">send_message/2</a></span> [<span class=\"code\">mandatory</span>]</p> </li> <li> <p><span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#send_message\">send_message/3</a></span> [<span class=\"code\">optional</span>]</p> </li> <li> <p><span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#resend_message\">resend_message/2</a></span> [<span class=\"code\">optional</span>]</p> </li> <li> </li> </ul> <a name=\"send_message\"></a> <p></p>","funcs":" <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:send_message-2-id86578\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_transport.xml#L56\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:send_message-2\" href=\"/erldoc/docs/#Module:send_message-2\">Module:send_message(Handle, Msg) -&gt; ok | {cancel, Reason} | Error</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:send_message-3-id86584\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_transport.xml#L56\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:send_message-3\" href=\"/erldoc/docs/#Module:send_message-3\">Module:send_message(Handle, Msg, Resend) -&gt; ok | {cancel, Reason} | Error</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Handle = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Msg = binary() | iolist()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Resend = boolean()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Error = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Send a megaco message. </p> <p>If the function returns <span class=\"code\">{cancel, Reason}</span>, this means the transport module decided not to send the message. This is <strong>not</strong> an error. No error messages will be issued and no error counters incremented. What actions this will result in depends on what kind of message was sent. </p> <p>In the case of requests, megaco will cancel the message in much the same way as if <span class=\"code\">megaco:cancel</span> had been called (after a successfull send). The information will be propagated back to the user differently depending on how the request(s) where issued: For requests issued using <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/megaco#call\">megaco:call</a></span>, the info will be delivered in the return value. For requests issued using <span class=\"code\">megaco:cast</span> the info will be delivered via a call to the callback function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/megaco_user#trans_reply\">handle_trans_reply</a></span>. </p> <p>In the case of reply, megaco will cancel the reply and information of this will be returned to the user via a call to the callback function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/megaco_user#trans_ack\">handle_trans_ack</a></span>. </p> <p>The function <span class=\"code\">send_message/3</span> will only be called if the <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/megaco#ui_resend_indication\">resend_indication</a></span> config option has been set to the value <span class=\"code\">flag</span>. The third argument, <span class=\"code\">Resend</span> then indicates if the message send is a resend or not. </p> <a name=\"resend_message\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:resend_message-2-id86709\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_transport.xml#L101\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:resend_message-2\" href=\"/erldoc/docs/#Module:resend_message-2\">Module:resend_message(Handle, Msg) -&gt; ok | {cancel, Reason} | Error</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Handle = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Msg = binary() | iolist()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Error = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Re-send a megaco message. </p> <p>Note that this function will only be called if the user has set the <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/megaco#ui_resend_indication\">resend_indication</a></span> config option to <span class=\"code\">true</span><strong>and</strong> it is in fact a message resend. If not <strong>both</strong> of these condition&apos;s are meet, <span class=\"code\">send_message</span> will be called. </p> <p>If the function returns <span class=\"code\">{cancel, Reason}</span>, this means the transport module decided not to send the message. This is <strong>not</strong> an error. No error messages will be issued and no error counters incremented. What actions this will result in depends on what kind of message was sent. </p> <p>In the case of requests, megaco will cancel the message in much the same way as if <span class=\"code\">megaco:cancel</span> had been called (after a successfull send). The information will be propagated back to the user differently depending on how the request(s) where issued: For requests issued using <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/megaco#call\">megaco:call</a></span>, the info will be delivered in the return value. For requests issued using <span class=\"code\">megaco:cast</span> the info will be delivered via a call to the callback function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/megaco_user#trans_reply\">handle_trans_reply</a></span>. </p> <p>In the case of reply, megaco will cancel the reply and information of this will be returned to the user via a call to the callback function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/megaco_user#trans_ack\">handle_trans_ack</a></span>. </p> <p></p></div> ","name":"megaco_transport"}