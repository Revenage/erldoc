{"summary":"Various Erlang net administration routines.","description":"<p> </p><p>This module contains various network utility functions.</p> <p></p>","funcs":" <a name=\"dns_hostname-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-dns_hostname-1-id215636\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_adm.xml#L38\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>dns_hostname(Host) -&gt; {ok, Name} | {error, Host}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Host = atom() | string()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Name = string()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the official name of <span class=\"code\">Host</span>, or <span class=\"code\">{error, Host}</span> if no such name is found. See also <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/inet\"><span class=\"code\">inet(3)</span></a></span>.</p> <p></p></div> <a name=\"host_file-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-host_file-0-id215634\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_adm.xml#L48\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>host_file() -&gt; Hosts | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Hosts = [Host :: atom()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/file#type-posix\">file:posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;badarg | terminated | system_limit |<br>&#xA0;&#xA0;&#xA0;&#xA0;{Line :: integer(), Mod :: module(), Term :: term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Reads file <span class=\"code\">.hosts.erlang</span>, see section <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#files\">Files</a></span>. Returns the hosts in this file as a list. Returns <span class=\"code\">{error, Reason}</span> if the file cannot be read or the Erlang terms on the file cannot be interpreted.</p> <p></p></div> <a name=\"localhost-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-localhost-0-id213158\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_adm.xml#L60\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>localhost() -&gt; Name</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Name = string()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the name of the local host. If Erlang was started with command-line flag <span class=\"code\">-name</span>, <span class=\"code\">Name</span> is the fully qualified name.</p> <p></p></div> <a name=\"names-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-names-0-id213580\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_adm.xml#L70\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>names() -&gt; {ok, [{Name, Port}]} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"names-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-names-1-id216191\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_adm.xml#L70\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>names(Host) -&gt; {ok, [{Name, Port}]} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Host = atom() | string() | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ip_address\">inet:ip_address()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Name = string()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Port = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = address | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/file#type-posix\">file:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Similar to <span class=\"code\">epmd -names</span>, see <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/epmd\"><span class=\"code\">erts:epmd(1)</span></a></span>. <span class=\"code\">Host</span> defaults to the local host. Returns the names and associated port numbers of the Erlang nodes that <span class=\"code\">epmd</span> registered at the specified host. Returns <span class=\"code\">{error, address}</span> if <span class=\"code\">epmd</span> is not operational.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>(arne@dunn)1&gt; <span class=\"bold_code bc-12\">net_adm:names().</span>{ok,[{&quot;arne&quot;,40262}]}</pre></div> <p></p></div> <a name=\"ping-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-ping-1-id216870\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_adm.xml#L88\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>ping(Node) -&gt; pong | pang</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Node = atom()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sets up a connection to <span class=\"code\">Node</span>. Returns <span class=\"code\">pong</span> if it is successful, otherwise <span class=\"code\">pang</span>.</p> <p></p></div> <a name=\"world-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-world-0-id218126\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_adm.xml#L97\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>world() -&gt; [node()]</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"world-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-world-1-id218123\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_adm.xml#L97\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>world(Arg) -&gt; [node()]</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Arg = verbosity()</span></div><div class=\"REFTYPES rt-2\"> <span class=\"bold_code bc-5\">verbosity() = silent | verbose</span><br></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Calls <span class=\"code\">names(Host)</span> for all hosts that are specified in the Erlang host file <span class=\"code\">.hosts.erlang</span>, collects the replies, and then evaluates <span class=\"code\">ping(Node)</span> on all those nodes. Returns the list of all nodes that are successfully pinged.</p> <p><span class=\"code\">Arg</span> defaults to <span class=\"code\">silent</span>. If <span class=\"code\">Arg == verbose</span>, the function writes information about which nodes it is pinging to <span class=\"code\">stdout</span>.</p> <p>This function can be useful when a node is started, and the names of the other network nodes are not initially known.</p> <p>Returns <span class=\"code\">{error, Reason}</span> if <span class=\"code\">host_file()</span> returns <span class=\"code\">{error, Reason}</span>.</p> <p></p></div> <a name=\"world_list-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-world_list-1-id218330\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_adm.xml#L119\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>world_list(Hosts) -&gt; [node()]</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"world_list-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-world_list-2-id218340\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_adm.xml#L119\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>world_list(Hosts, Arg) -&gt; [node()]</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Hosts = [atom()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Arg = verbosity()</span></div><div class=\"REFTYPES rt-2\"> <span class=\"bold_code bc-5\">verbosity() = silent | verbose</span><br></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Same as <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#world-1\"><span class=\"code\">world/0,1</span></a></span>, but the hosts are specified as argument instead of being read from <span class=\"code\">.hosts.erlang</span>.</p> <p></p></div> ","name":"net_adm"}