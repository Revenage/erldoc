{"summary":"An HTTP/1.1 client","description":"<p> </p><p>This module provides the API to an HTTP/1.1 compatible client according to <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.ietf.org/rfc/rfc2616.txt\">RFC 2616</a></span>. Caching is not supported.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>When starting the <span class=\"code\">Inets</span> application, a manager process for the default profile is started. The functions in this API that do not explicitly use a profile accesses the default profile. A profile keeps track of proxy options, cookies, and other options that can be applied to more than one request.</p> <p>If the scheme <span class=\"code\">https</span> is used, the <span class=\"code\">SSL</span> application must be started. When <span class=\"code\">https</span> links need to go through a proxy, the CONNECT method extension to HTTP-1.1 is used to establish a tunnel and then the connection is upgraded to TLS. However, &quot;TLS upgrade&quot; according to <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.ietf.org/rfc/rfc2817.txt\">RFC 2817</a></span>is not supported.</p> <p>Pipelining is only used if the pipeline time-out is set, otherwise persistent connections without pipelining are used. That is, the client always waits for the previous response before sending the next request.</p> <p></p></div></div> <p>Some examples are provided in the <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/../apps/inets/http_client\">Inets User&apos;s Guide</a></span>.</p> <p></p>","funcs":" <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-cancel_request-1-id69339\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L153\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"cancel_request-1\" href=\"/erldoc/docs/#cancel_request-1\">cancel_request(RequestId) -&gt;</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-cancel_request-2-id69346\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L153\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"cancel_request-2\" href=\"/erldoc/docs/#cancel_request-2\">cancel_request(RequestId, Profile) -&gt; ok</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">RequestId = request_id() - A unique identifier as returned by request/4</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Profile = profile() | pid()</span><br></div> <div class=\"REFBODY rb-6\">When started <span class=\"code\">stand_alone</span> only the pid can be used.</div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Cancels an asynchronous HTTP request. Notice that this does not guarantee that the request response is not delivered. Because it is asynchronous, the request can already have been completed when the cancellation arrives. </p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-cookie_header-1-id68968\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L171\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"cookie_header-1\" href=\"/erldoc/docs/#cookie_header-1\">cookie_header(Url) -&gt; </a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-cookie_header-2-id68974\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L171\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"cookie_header-2\" href=\"/erldoc/docs/#cookie_header-2\">cookie_header(Url, Profile | Opts) -&gt; header() | {error, Reason}</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-cookie_header-3-id68980\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L171\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"cookie_header-3\" href=\"/erldoc/docs/#cookie_header-3\">cookie_header(Url, Opts, Profile) -&gt; header() | {error, Reason}</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Url = url()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Opts = [cookie_header_opt()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Profile = profile() | pid()</span><br></div> <div class=\"REFBODY rb-6\">When started <span class=\"code\">stand_alone</span>.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">cookie_header_opt() = {ipv6_host_with_brackets, boolean()}</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the cookie header that would have been sent when making a request to <span class=\"code\">Url</span> using profile <span class=\"code\">Profile</span>. If no profile is specified, the default profile is used.</p> <p>Option <span class=\"code\">ipv6_host_with_bracket</span> deals with how to parse IPv6 addresses. For details, see argument <span class=\"code\">Options</span> of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#request-4\">request/[4,5]</a></span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_options-1-id78401\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L195\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"get_options-1\" href=\"/erldoc/docs/#get_options-1\">get_options(OptionItems) -&gt; {ok, Values} | {error, Reason}</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B01</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_options-2-id78407\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L195\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"get_options-2\" href=\"/erldoc/docs/#get_options-2\">get_options(OptionItems, Profile) -&gt; {ok, Values} | {error, Reason}</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B01</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">OptionItems = all | [option_item()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">option_item() = proxy | https_proxy | max_sessions | keep_alive_timeout | max_keep_alive_length | pipeline_timeout | max_pipeline_length | cookies | ipfamily | ip | port | socket_opts | verbose | unix_socket</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Profile = profile() | pid()</span><br></div> <div class=\"REFBODY rb-6\">When started <span class=\"code\">stand_alone</span> only the pid can used.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Values = [{option_item(), term()}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Retrieves the options currently used by the client.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-info-0-id78051\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L225\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"info-0\" href=\"/erldoc/docs/#info-0\">info() -&gt; list()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-info-1-id78057\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L225\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"info-1\" href=\"/erldoc/docs/#info-1\">info(Profile) -&gt; list()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Profile = profile() | pid()</span><br></div> <div class=\"REFBODY rb-6\">When started <span class=\"code\">stand_alone</span> only the pid can be used.</div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Produces a list of miscellaneous information. Intended for debugging. If no profile is specified, the default profile is used.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-reset_cookies-0-id78096\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L241\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"reset_cookies-0\" href=\"/erldoc/docs/#reset_cookies-0\">reset_cookies() -&gt; void()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-reset_cookies-1-id78102\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L241\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"reset_cookies-1\" href=\"/erldoc/docs/#reset_cookies-1\">reset_cookies(Profile) -&gt; void()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Profile = profile() | pid()</span><br></div> <div class=\"REFBODY rb-6\">When started <span class=\"code\">stand_alone</span> only the pid can be used.</div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Resets (clears) the cookie database for the specified <span class=\"code\">Profile</span>. If no profile is specified the default profile is used.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-request-1-id78146\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L256\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"request-1\" href=\"/erldoc/docs/#request-1\">request(Url) -&gt; </a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-request-2-id78152\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L256\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"request-2\" href=\"/erldoc/docs/#request-2\">request(Url, Profile) -&gt; {ok, Result} | {error, Reason}</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Url = url()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Result = {status_line(), headers(), Body} | {status_code(), Body} | request_id()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Body = string() | binary()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Profile = profile() | pid()</span><br></div> <div class=\"REFBODY rb-6\">When started <span class=\"code\">stand_alone</span> only the pid can be used.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Equivalent to <span class=\"code\">httpc:request(get, {Url, []}, [], [])</span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-request-4-id78210\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L274\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"request-4\" href=\"/erldoc/docs/#request-4\">request(Method, Request, HTTPOptions, Options) -&gt;</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-request-5-id77338\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L274\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"request-5\" href=\"/erldoc/docs/#request-5\">request(Method, Request, HTTPOptions, Options, Profile) -&gt; {ok, Result} | {ok, saved_to_file} | {error, Reason}</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Method = method()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Request = request()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">HTTPOptions = http_options()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">http_options() = [http_option()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">http_option() = {timeout, timeout()} | {connect_timeout, timeout()} | {ssl, ssloptions()} | {essl, ssloptions()} | {autoredirect, boolean()} | {proxy_auth, {userstring(), passwordstring()}} | {version, http_version()} | {relaxed, boolean()}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">timeout() = integer() &gt;= 0 | infinity</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Options = options()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">options() = [option()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">option() = {sync, boolean()} | {stream, stream_to()} | {body_format, body_format()} | {full_result, boolean()} | {headers_as_is, boolean() | {socket_opts, socket_opts()} | {receiver, receiver()} | {ipv6_host_with_brackets, boolean()}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">stream_to() = none | self | {self, once} | filename()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">socket_opts() = [socket_opt()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">receiver() = pid() | function()/1 | {Module, Function, Args}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Module = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Function = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Args = list()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">body_format() = string | binary</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Result = {status_line(), headers(), Body} | {status_code(), Body} | request_id()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Body = string() | binary()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Profile = profile() | pid()</span><br></div> <div class=\"REFBODY rb-6\">When started <span class=\"code\">stand_alone</span> only the pid can be used.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Sends an HTTP request. The function can be both synchronous and asynchronous. In the latter case, the function returns <span class=\"code\">{ok, RequestId}</span> and then the information is delivered to the <span class=\"code\">receiver</span> depending on that value.</p> <p>HTTP option (<span class=\"code\">http_option()</span>) details:</p> <a name=\"request2_http_options\"></a> <dl> <dt><strong><span class=\"code\">timeout</span></strong></dt> <dd> <p>Time-out time for the request.</p> <p>The clock starts ticking when the request is sent.</p> <p>Time is in milliseconds.</p> <p>Default is <span class=\"code\">infinity</span>.</p> </dd> <dt><strong><span class=\"code\">connect_timeout</span></strong></dt> <dd> <p>Connection time-out time, used during the initial request, when the client is <strong>connecting</strong> to the server.</p> <p>Time is in milliseconds.</p> <p>Default is the value of option <span class=\"code\">timeout</span>.</p> </dd> <dt><strong><span class=\"code\">ssl</span></strong></dt> <dd> <p>This is the <span class=\"code\">SSL/TLS</span> connectin configuration option.</p> <p>Defaults to <span class=\"code\">[]</span>. See <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/ssl\">ssl:connect/[2,3,4]</a></span> for available options.</p> </dd> <dt><strong><span class=\"code\">autoredirect</span></strong></dt> <dd> <p>The client automatically retrieves the information from the new URI and returns that as the result, instead of a 30X-result code.</p> <p>For some 30X-result codes, automatic redirect is not allowed. In these cases the 30X-result is always returned.</p> <p>Default is <span class=\"code\">true</span>.</p> </dd> <dt><strong><span class=\"code\">proxy_auth</span></strong></dt> <dd> <p>A proxy-authorization header using the provided username and password is added to the request.</p> </dd> <dt><strong><span class=\"code\">version</span></strong></dt> <dd> <p>Can be used to make the client act as an <span class=\"code\">HTTP/1.0</span> or <span class=\"code\">HTTP/0.9</span> client. By default this is an <span class=\"code\">HTTP/1.1</span> client. When using <span class=\"code\">HTTP/1.0</span> persistent connections are not used.</p> <p>Default is the string <span class=\"code\">&quot;HTTP/1.1&quot;</span>.</p> </dd> <dt><strong><span class=\"code\">relaxed</span></strong></dt> <dd> <p>If set to <span class=\"code\">true</span>, workarounds for known server deviations from the HTTP-standard are enabled.</p> <p>Default is <span class=\"code\">false</span>.</p> </dd> </dl> <p>Option (<span class=\"code\">option()</span>) details:</p> <dl> <dt><strong><span class=\"code\">sync</span></strong></dt> <dd> <p>Option for the request to be synchronous or asynchronous.</p> <p>Default is <span class=\"code\">true</span>.</p> </dd> <dt><strong><span class=\"code\">stream</span></strong></dt> <dd> <p>Streams the body of a 200 or 206 response to the calling process or to a file. When streaming to the calling process using option <span class=\"code\">self</span>, the following stream messages are sent to that process: <span class=\"code\">{http, {RequestId, stream_start, Headers}}, {http, {RequestId, stream, BinBodyPart}}, and {http, {RequestId, stream_end, Headers}}</span>.</p> <p>When streaming to the calling processes using option <span class=\"code\">{self, once}</span>, the first message has an extra element, that is, <span class=\"code\">{http, {RequestId, stream_start, Headers, Pid}}</span>. This is the process id to be used as an argument to <span class=\"code\">httpc:stream_next/1</span> to trigger the next message to be sent to the calling process.</p> <p>Notice that chunked encoding can add headers so that there are more headers in the <span class=\"code\">stream_end</span> message than in <span class=\"code\">stream_start</span>. When streaming to a file and the request is asynchronous, the message <span class=\"code\">{http, {RequestId, saved_to_file}}</span> is sent.</p> <p>Default is <span class=\"code\">none</span>.</p> </dd> <dt><strong><span class=\"code\">body_format</span></strong></dt> <dd> <p>Defines if the body is to be delivered as a string or binary. This option is only valid for the synchronous request.</p> <p>Default is <span class=\"code\">string</span>.</p> </dd> <dt><strong><span class=\"code\">full_result</span></strong></dt> <dd> <p>Defines if a &quot;full result&quot; is to be returned to the caller (that is, the body, the headers, and the entire status line) or not (the body and the status code).</p> <p>Default is <span class=\"code\">true</span>.</p> </dd> <dt><strong><span class=\"code\">headers_as_is</span></strong></dt> <dd> <p>Defines if the headers provided by the user are to be made lower case or to be regarded as case sensitive.</p> <p>The HTTP standard requires them to be case insensitive. Use this feature only if there is no other way to communicate with the server or for testing purpose. When this option is used, no headers are automatically added. All necessary headers must be provided by the user.</p> <p>Default is <span class=\"code\">false</span>.</p> </dd> <dt><strong><span class=\"code\">socket_opts</span></strong></dt> <dd> <p>Socket options to be used for this request.</p> <p>Overrides any value set by function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#set_options-1\">set_options</a></span>.</p> <p>The validity of the options is <strong>not</strong> checked by the HTTP client they are assumed to be correct and passed on to ssl application and inet driver, which may reject them if they are not correct. </p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p> Persistent connections are not supported when setting the <span class=\"code\">socket_opts</span> option. When <span class=\"code\">socket_opts</span> is not set the current implementation assumes the requests to the same host, port combination will use the same socket options. </p> <p></p></div></div> <p>By default the socket options set by function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#set_options-1\">set_options/[1,2]</a></span> are used when establishing a connection.</p> </dd> <dt><strong><span class=\"code\">receiver</span></strong></dt> <dd> <p>Defines how the client delivers the result of an asynchronous request (<span class=\"code\">sync</span> has the value <span class=\"code\">false</span>).</p> <dl> <dt><strong><span class=\"code\">pid()</span></strong></dt> <dd> <p>Messages are sent to this process in the format <span class=\"code\">{http, ReplyInfo}</span>.</p> </dd> <dt><strong><span class=\"code\">function/1</span></strong></dt> <dd> <p>Information is delivered to the receiver through calls to the provided fun <span class=\"code\">Receiver(ReplyInfo)</span>.</p> </dd> <dt><strong><span class=\"code\">{Module, Function, Args}</span></strong></dt> <dd> <p>Information is delivered to the receiver through calls to the callback function <span class=\"code\">apply(Module, Function, [ReplyInfo | Args])</span>.</p> </dd> </dl> <p>In all of these cases, <span class=\"code\">ReplyInfo</span> has the following structure:</p> <div class=\"example\"><pre>{RequestId, saved_to_file}{RequestId, {error, Reason}}{RequestId, Result}{RequestId, stream_start, Headers}{RequestId, stream_start, Headers, HandlerPid}{RequestId, stream, BinBodyPart}{RequestId, stream_end, Headers}</pre></div> <p>Default is the <span class=\"code\">pid</span> of the process calling the request function (<span class=\"code\">self()</span>). </p> <a name=\"ipv6_host_with_brackets\"></a> </dd> <dt><strong><span class=\"code\">ipv6_host_with_brackets</span></strong></dt> <dd> <p>Defines when parsing the Host-Port part of an URI with an IPv6 address with brackets, if those brackets are to be retained (<span class=\"code\">true</span>) or stripped (<span class=\"code\">false</span>).</p> <p>Default is <span class=\"code\">false</span>.</p> </dd> </dl> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-set_options-1-id78689\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L523\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"set_options-1\" href=\"/erldoc/docs/#set_options-1\">set_options(Options) -&gt; </a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-set_options-2-id78695\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L523\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"set_options-2\" href=\"/erldoc/docs/#set_options-2\">set_options(Options, Profile) -&gt; ok | {error, Reason}</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Options = [Option]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Option = {proxy, {Proxy, NoProxy}}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">| {https_proxy, {Proxy, NoProxy}}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">| {max_sessions, MaxSessions}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">| {max_keep_alive_length, MaxKeepAlive}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">| {keep_alive_timeout, KeepAliveTimeout}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">| {max_pipeline_length, MaxPipeline}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">| {pipeline_timeout, PipelineTimeout}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">| {cookies, CookieMode}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">| {ipfamily, IpFamily}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">| {ip, IpAddress}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">| {port, Port}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">| {socket_opts, socket_opts()}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">| {verbose, VerboseMode}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">| {unix_socket, UnixSocket}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Proxy = {Hostname, Port}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Hostname = string()</span><br></div> <div class=\"REFBODY rb-6\">Example: &quot;localhost&quot; or &quot;foo.bar.se&quot;</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Port = integer()</span><br></div> <div class=\"REFBODY rb-6\">Example: 8080</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">NoProxy = [NoProxyDesc]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">NoProxyDesc = DomainDesc | HostName | IPDesc</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">DomainDesc = &quot;*.Domain&quot;</span><br></div> <div class=\"REFBODY rb-6\">Example: &quot;*.ericsson.se&quot;</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">IpDesc = string()</span><br></div> <div class=\"REFBODY rb-6\">Example: &quot;134.138&quot; or &quot;[FEDC:BA98&quot; (all IP addresses starting with 134.138 or FEDC:BA98), &quot;66.35.250.150&quot; or &quot;[2010:836B:4179::836B:4179]&quot; (a complete IP address). <span class=\"code\">proxy</span> defaults to <span class=\"code\">{undefined, []}</span>, that is, no proxy is configured and <span class=\"code\">https_proxy</span> defaults to the value of <span class=\"code\">proxy</span>.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">MaxSessions = integer()</span><br></div> <div class=\"REFBODY rb-6\">Maximum number of persistent connections to a host. Default is <span class=\"code\">2</span>.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">MaxKeepAlive = integer()</span><br></div> <div class=\"REFBODY rb-6\">Maximum number of outstanding requests on the same connection to a host. Default is <span class=\"code\">5</span>.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">KeepAliveTimeout = integer()</span><br></div> <div class=\"REFBODY rb-6\">If a persistent connection is idle longer than the <span class=\"code\">keep_alive_timeout</span> in milliseconds, the client closes the connection. The server can also have such a time-out but do not take that for granted. Default is <span class=\"code\">120000</span> (= 2 min).</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">MaxPipeline = integer()</span><br></div> <div class=\"REFBODY rb-6\">Maximum number of outstanding requests on a pipelined connection to a host. Default is <span class=\"code\">2</span>.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">PipelineTimeout = integer()</span><br></div> <div class=\"REFBODY rb-6\">If a persistent connection is idle longer than the <span class=\"code\">pipeline_timeout</span> in milliseconds, the client closes the connection. Default is <span class=\"code\">0</span>, which results in pipelining not being used.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CookieMode = enabled | disabled | verify</span><br></div> <div class=\"REFBODY rb-6\">If cookies are enabled, all valid cookies are automatically saved in the cookie database of the client manager. If option <span class=\"code\">verify</span> is used, function <span class=\"code\">store_cookies/2</span> has to be called for the cookies to be saved. Default is <span class=\"code\">disabled</span>.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">IpFamily = inet | inet6 | local</span><br></div> <div class=\"REFBODY rb-6\">Default is <span class=\"code\">inet</span>.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">IpAddress = ip_address()</span><br></div> <div class=\"REFBODY rb-6\">If the host has several network interfaces, this option specifies which one to use. See <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/gen_tcp#connect\">gen_tcp:connect/3,4</a></span> for details.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Port = integer()</span><br></div> <div class=\"REFBODY rb-6\">Local port number to use. See <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/gen_tcp#connect\">gen_tcp:connect/3,4</a></span> for details.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">socket_opts() = [socket_opt()]</span><br></div> <div class=\"REFBODY rb-6\">The options are appended to the socket options used by the client. These are the default values when a new request handler is started (for the initial connect). They are passed directly to the underlying transport (<span class=\"code\">gen_tcp</span> or <span class=\"code\">SSL</span>) <strong>without</strong> verification.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">VerboseMode = false | verbose | debug | trace</span><br></div> <div class=\"REFBODY rb-6\">Default is <span class=\"code\">false</span>. This option is used to switch on (or off) different levels of Erlang trace on the client. It is a debug feature.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Profile = profile() | pid()</span><br></div> <div class=\"REFBODY rb-6\">When started <span class=\"code\">stand_alone</span> only the pid can be used.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">UnixSocket = path()</span><br></div> <div class=\"REFBODY rb-6\"> Experimental option for sending HTTP requests over a unix domain socket. The value of <span class=\"code\">unix_socket</span> shall be the full path to a unix domain socket file with read/write permissions for the erlang process. Default is <span class=\"code\">undefined</span>. </div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Sets options to be used for subsequent requests.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>If possible, the client keeps its connections alive and uses persistent connections with or without pipeline depending on configuration and current circumstances. The HTTP/1.1 specification does not provide a guideline for how many requests that are ideal to be sent on a persistent connection. This depends much on the application.</p> <p>A long queue of requests can cause a user-perceived delay, as earlier requests can take a long time to complete. The HTTP/1.1 specification suggests a limit of two persistent connections per server, which is the default value of option <span class=\"code\">max_sessions</span>.</p> <p> The current implementation assumes the requests to the same host, port combination will use the same socket options. </p> <p></p></div></div> <a name=\"get_options\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-store_cookies-2-id79056\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L641\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"store_cookies-2\" href=\"/erldoc/docs/#store_cookies-2\">store_cookies(SetCookieHeaders, Url) -&gt; </a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B02</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-store_cookies-3-id79062\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L641\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"store_cookies-3\" href=\"/erldoc/docs/#store_cookies-3\">store_cookies(SetCookieHeaders, Url, Profile) -&gt; ok | {error, Reason}</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B02</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SetCookieHeaders = headers() - where field = &quot;set-cookie&quot;</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Url = url()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Profile = profile() | pid()</span><br></div> <div class=\"REFBODY rb-6\">When started <span class=\"code\">stand_alone</span> only the pid can be used.</div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Saves the cookies defined in <span class=\"code\">SetCookieHeaders</span> in the client profile cookie database. Call this function if option <span class=\"code\">cookies</span> is set to <span class=\"code\">verify</span>. If no profile is specified, the default profile is used.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-stream_next-1-id79125\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L660\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"stream_next-1\" href=\"/erldoc/docs/#stream_next-1\">stream_next(Pid) -&gt; ok</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pid = pid()</span><br></div> <div class=\"REFBODY rb-6\">As received in the <span class=\"code\">stream_start message</span></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Triggers the next message to be streamed, that is, the same behavior as active ones for sockets.</p> <a name=\"verify_cookies\"></a> <a name=\"store_cookies\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-which_cookies-0-id79173\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L678\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"which_cookies-0\" href=\"/erldoc/docs/#which_cookies-0\">which_cookies() -&gt; cookies()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-which_cookies-1-id79179\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L678\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"which_cookies-1\" href=\"/erldoc/docs/#which_cookies-1\">which_cookies(Profile) -&gt; cookies()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Profile = profile() | pid()</span><br></div> <div class=\"REFBODY rb-6\">When started <span class=\"code\">stand_alone</span> only the pid can be used.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">cookies() = [cookie_stores()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">cookie_stores() = {cookies, cookies()} | {session_cookies, cookies()}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">cookies() = [cookie()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">cookie() = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Produces a list of the entire cookie database. Intended for debugging/testing purposes. If no profile is specified, the default profile is used.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-which_sessions-0-id79234\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L697\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"which_sessions-0\" href=\"/erldoc/docs/#which_sessions-0\">which_sessions() -&gt; session_info()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-which_sessions-1-id79240\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/inets/doc/src/httpc.xml#L697\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"which_sessions-1\" href=\"/erldoc/docs/#which_sessions-1\">which_sessions(Profile) -&gt; session_info()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Profile = profile() | pid()</span><br></div> <div class=\"REFBODY rb-6\">When started <span class=\"code\">stand_alone</span> only the pid can be used.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">session_info() = {[session()], [term()], [term()]}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">session() = term() - Internal representation of a session</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p> This function is intended for debugging only. It produces a slightly processed dump of the session database. The first list of the session information tuple will contain session information on an internal format. The last two lists of the session information tuple should always be empty if the code is working as intended. If no profile is specified, the default profile is used.</p> <p></p></div> "}