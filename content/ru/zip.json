{"summary":"Utility for reading and creating 'zip' archives.\n  ","description":"<p> </p><p>This module archives and extracts files to and from a zip archive. The zip format is specified by the &quot;ZIP Appnote.txt&quot; file, available on the PKWARE web site <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.pkware.com\">www.pkware.com</a></span>.</p> <p>The zip module supports zip archive versions up to 6.1. However, password-protection and Zip64 are not supported.</p> <p>By convention, the name of a zip file is to end with <span class=\"code\">.zip</span>. To abide to the convention, add <span class=\"code\">.zip</span> to the filename.</p> <ul> <li> <p>To create zip archives, use function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#zip-2\"><span class=\"code\">zip/2</span></a></span> or <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#zip-2\"><span class=\"code\">zip/3</span></a></span>. They are also available as <span class=\"code\">create/2,3</span>, to resemble the <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/erl_tar\"><span class=\"code\">erl_tar</span></a></span> module.</p> </li> <li> <p>To extract files from a zip archive, use function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#unzip-1\"><span class=\"code\">unzip/1</span></a></span> or <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#unzip-2\"><span class=\"code\">unzip/2</span></a></span>. They are also available as <span class=\"code\">extract/1,2</span>, to resemble the <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/erl_tar\"><span class=\"code\">erl_tar</span></a></span> module.</p> </li> <li> <p>To fold a function over all files in a zip archive, use function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#foldl-3\"><span class=\"code\">foldl/3</span></a></span>.</p> </li> <li> <p>To return a list of the files in a zip archive, use function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#list_dir-1\"><span class=\"code\">list_dir/1</span></a></span> or <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#list_dir-2\"><span class=\"code\">list_dir/2</span></a></span>. They are also available as <span class=\"code\">table/1,2</span>, to resemble the <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/erl_tar\"><span class=\"code\">erl_tar</span></a></span> module.</p> </li> <li> <p>To print a list of files to the Erlang shell, use function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#t-1\"><span class=\"code\">t/1</span></a></span> or <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#tt-1\"><span class=\"code\">tt/1</span></a></span>.</p> </li> <li> <p>Sometimes it is desirable to open a zip archive, and to unzip files from it file by file, without having to reopen the archive. This can be done by functions <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#zip_open-1\"><span class=\"code\">zip_open/1,2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#zip_get-1\"><span class=\"code\">zip_get/1,2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#zip_list_dir-1\"><span class=\"code\">zip_list_dir/1</span></a></span>, and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#zip_close-1\"><span class=\"code\">zip_close/1</span></a></span>.</p> </li> </ul> <p></p>","funcs":" <a name=\"foldl-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-foldl-3-id359343\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L182\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>foldl(Fun, Acc0, Archive) -&gt; {ok, Acc1} | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((FileInArchive, GetInfo, GetBin, AccIn) -&gt; AccOut)</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FileInArchive = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">GetInfo = fun(() -&gt; <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-file_info\">file:file_info()</a></span>)</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">GetBin = fun(() -&gt; binary())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Acc0 = Acc1 = AccIn = AccOut = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Archive = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span> | {<span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span>, binary()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Calls <span class=\"code\">Fun(FileInArchive, GetInfo, GetBin, AccIn)</span> on successive files in the <span class=\"code\">Archive</span>, starting with <span class=\"code\">AccIn == Acc0</span>.</p> <p><span class=\"code\">FileInArchive</span> is the name that the file has in the archive.</p> <p><span class=\"code\">GetInfo</span> is a fun that returns information about the file.</p> <p><span class=\"code\">GetBin</span> returns the file contents.</p> <p>Both <span class=\"code\">GetInfo</span> and <span class=\"code\">GetBin</span> must be called within the <span class=\"code\">Fun</span>. Their behavior is undefined if they are called outside the context of <span class=\"code\">Fun</span>.</p> <p>The <span class=\"code\">Fun</span> must return a new accumulator, which is passed to the next call. <span class=\"code\">foldl/3</span> returns the final accumulator value. <span class=\"code\">Acc0</span> is returned if the archive is empty. It is not necessary to iterate over all files in the archive. The iteration can be ended prematurely in a controlled manner by throwing an exception.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">Name = &quot;dummy.zip&quot;.</span>&quot;dummy.zip&quot;&gt; <span class=\"bold_code bc-12\">{ok, {Name, Bin}} = zip:create(Name, [{&quot;foo&quot;, &lt;&lt;&quot;FOO&quot;&gt;&gt;}, {&quot;bar&quot;, &lt;&lt;&quot;BAR&quot;&gt;&gt;}], [memory]).</span>{ok,{&quot;dummy.zip&quot;, &lt;&lt;80,75,3,4,20,0,0,0,0,0,74,152,97,60,171,39,212,26,3,0, 0,0,3,0,0,...&gt;&gt;}}&gt; <span class=\"bold_code bc-12\">{ok, FileSpec} = zip:foldl(fun(N, I, B, Acc) -&gt; [{N, B(), I()} | Acc] end, [], {Name, Bin}).</span>{ok,[{&quot;bar&quot;,&lt;&lt;&quot;BAR&quot;&gt;&gt;, {file_info,3,regular,read_write, {{2010,3,1},{19,2,10}}, {{2010,3,1},{19,2,10}}, {{2010,3,1},{19,2,10}}, 54,1,0,0,0,0,0}}, {&quot;foo&quot;,&lt;&lt;&quot;FOO&quot;&gt;&gt;, {file_info,3,regular,read_write, {{2010,3,1},{19,2,10}}, {{2010,3,1},{19,2,10}}, {{2010,3,1},{19,2,10}}, 54,1,0,0,0,0,0}}]}&gt; <span class=\"bold_code bc-12\">{ok, {Name, Bin}} = zip:create(Name, lists:reverse(FileSpec), [memory]).</span>{ok,{&quot;dummy.zip&quot;, &lt;&lt;80,75,3,4,20,0,0,0,0,0,74,152,97,60,171,39,212,26,3,0, 0,0,3,0,0,...&gt;&gt;}}&gt; <span class=\"bold_code bc-12\">catch zip:foldl(fun(&quot;foo&quot;, _, B, _) -&gt; throw(B()); (_,_,_,Acc) -&gt; Acc end, [], {Name, Bin}). </span>&lt;&lt;&quot;FOO&quot;&gt;&gt;</pre></div> <p></p></div> <a name=\"list_dir-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-list_dir-1-id359438\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L236\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>list_dir(Archive) -&gt; RetValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"list_dir-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-list_dir-2-id359430\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L236\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>list_dir(Archive, Options) -&gt; RetValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"table-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-table-1-id359809\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L236\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>table(Archive) -&gt; RetValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"table-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-table-2-id359692\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L236\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>table(Archive, Options) -&gt; RetValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Archive = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span> | binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RetValue = {ok, CommentAndFiles} | {error, Reason :: term()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">CommentAndFiles = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-zip_comment\">zip_comment()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-zip_file\">zip_file()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [Option]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Option = cooked</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p><span class=\"code\">list_dir/1</span> retrieves all filenames in the zip archive <span class=\"code\">Archive</span>.</p> <p><span class=\"code\">list_dir/2</span> provides options.</p> <p><span class=\"code\">table/1</span> and <span class=\"code\">table/2</span> are provided as synonyms to resemble the <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/erl_tar\"><span class=\"code\">erl_tar</span></a></span> module.</p> <p>The result value is the tuple <span class=\"code\">{ok, List}</span>, where <span class=\"code\">List</span> contains the zip archive comment as the first element.</p> <p>One option is available:</p> <dl> <dt><strong><span class=\"code\">cooked</span></strong></dt> <dd> <p>By default, this function opens the zip file in <span class=\"code\">raw</span> mode, which is faster but does not allow a remote (Erlang) file server to be used. Adding <span class=\"code\">cooked</span> to the mode list overrides the default and opens the zip file without option <span class=\"code\">raw</span>.</p> </dd> </dl> <p></p></div> <a name=\"t-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-t-1-id360048\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L265\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>t(Archive) -&gt; ok</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Archive = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span> | binary() | ZipHandle</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ZipHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Prints all filenames in the zip archive <span class=\"code\">Archive</span> to the Erlang shell. (Similar to <span class=\"code\">tar&#xA0;t</span>.)</p> <p></p></div> <a name=\"tt-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-tt-1-id360166\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L274\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>tt(Archive) -&gt; ok</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Archive = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span> | binary() | ZipHandle</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ZipHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Prints filenames and information about all files in the zip archive <span class=\"code\">Archive</span> to the Erlang shell. (Similar to <span class=\"code\">tar tv</span>.)</p> <p></p></div> <a name=\"unzip-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-unzip-1-id360154\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L285\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>unzip(Archive) -&gt; RetValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"unzip-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-unzip-2-id360115\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L285\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>unzip(Archive, Options) -&gt; RetValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"extract-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-extract-1-id360180\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L285\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>extract(Archive) -&gt; RetValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"extract-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-extract-2-id360154\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L285\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>extract(Archive, Options) -&gt; RetValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Archive = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span> | binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [Option]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Option = <br>&#xA0;&#xA0;&#xA0;&#xA0;{file_list, FileList} |<br>&#xA0;&#xA0;&#xA0;&#xA0;keep_old_files | verbose | memory |<br>&#xA0;&#xA0;&#xA0;&#xA0;{file_filter, FileFilter} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{cwd, CWD}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FileList = [<span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FileBinList = [{<span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span>, binary()}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FileFilter = fun((ZipFile) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">CWD = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-filename\">file:filename()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ZipFile = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-zip_file\">zip_file()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RetValue = <br>&#xA0;&#xA0;&#xA0;&#xA0;{ok, FileList} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{ok, FileBinList} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{error, Reason :: term()} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{error, {Name :: <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span>, Reason :: term()}}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p><span class=\"code\">unzip/1</span> extracts all files from a zip archive.</p> <p><span class=\"code\">unzip/2</span> provides options to extract some files, and more.</p> <p><span class=\"code\">extract/1</span> and <span class=\"code\">extract/2</span> are provided as synonyms to resemble module <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/erl_tar\"><span class=\"code\">erl_tar</span></a></span>.</p> <p>If argument <span class=\"code\">Archive</span> is specified as a binary, the contents of the binary is assumed to be a zip archive, otherwise a filename.</p> <p>Options:</p> <dl> <dt><strong><span class=\"code\">{file_list, FileList}</span></strong></dt> <dd> <p>By default, all files are extracted from the zip archive. With option <span class=\"code\">{file_list, FileList}</span>, function <span class=\"code\">unzip/2</span> only extracts the files whose names are included in <span class=\"code\">FileList</span>. The full paths, including the names of all subdirectories within the zip archive, must be specified.</p> </dd> <dt><strong><span class=\"code\">cooked</span></strong></dt> <dd> <p>By default, this function opens the zip file in <span class=\"code\">raw</span> mode, which is faster but does not allow a remote (Erlang) file server to be used. Adding <span class=\"code\">cooked</span> to the mode list overrides the default and opens the zip file without option <span class=\"code\">raw</span>. The same applies for the files extracted.</p> </dd> <dt><strong><span class=\"code\">keep_old_files</span></strong></dt> <dd> <p>By default, all files with the same name as files in the zip archive are overwritten. With option <span class=\"code\">keep_old_files</span> set, function <span class=\"code\">unzip/2</span> does not overwrite existing files. Notice that even with option <span class=\"code\">memory</span> specified, which means that no files are overwritten, existing files are excluded from the result.</p> </dd> <dt><strong><span class=\"code\">verbose</span></strong></dt> <dd> <p>Prints an informational message for each extracted file.</p> </dd> <dt><strong><span class=\"code\">memory</span></strong></dt> <dd> <p>Instead of extracting to the current directory, the result is given as a list of tuples <span class=\"code\">{Filename, Binary}</span>, where <span class=\"code\">Binary</span> is a binary containing the extracted data of file <span class=\"code\">Filename</span> in the zip archive.</p> </dd> <dt><strong><span class=\"code\">{cwd, CWD}</span></strong></dt> <dd> <p>Uses the specified directory as current directory. It is prepended to filenames when extracting them from the zip archive. (Acting like <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/file#set_cwd-1\"><span class=\"code\">file:set_cwd/1</span></a></span> in Kernel, but without changing the global <span class=\"code\">cwd</span> property.)</p> </dd> </dl> <p></p></div> <a name=\"zip-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-zip-2-id360887\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L355\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>zip(Name, FileList) -&gt; RetValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"zip-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-zip-3-id360886\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L355\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>zip(Name, FileList, Options) -&gt; RetValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"create-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-create-2-id361061\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L355\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>create(Name, FileList) -&gt; RetValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"create-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-create-3-id360894\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L355\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>create(Name, FileList, Options) -&gt; RetValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Name = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FileList = [FileSpec]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FileSpec = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span>, binary()} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span>, binary(), <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-file_info\">file:file_info()</a></span>}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [Option]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Option = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-create_option\">create_option()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RetValue = <br>&#xA0;&#xA0;&#xA0;&#xA0;{ok, FileName :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-filename\">filename()</a></span>} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{ok, {FileName :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-filename\">filename()</a></span>, binary()}} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{error, Reason :: term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a zip archive containing the files specified in <span class=\"code\">FileList</span>.</p> <p><span class=\"code\">create/2</span> and <span class=\"code\">create/3</span> are provided as synonyms to resemble module <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/erl_tar\"><span class=\"code\">erl_tar</span></a></span>.</p> <p><span class=\"code\">FileList</span> is a list of files, with paths relative to the current directory, which are stored with this path in the archive. Files can also be specified with data in binaries to create an archive directly from data.</p> <p>Files are compressed using the DEFLATE compression, as described in the &quot;Appnote.txt&quot; file. However, files are stored without compression if they are already compressed. <span class=\"code\">zip/2</span> and <span class=\"code\">zip/3</span> check the file extension to determine if the file is to be stored without compression. Files with the following extensions are not compressed: <span class=\"code\">.Z</span>, <span class=\"code\">.zip</span>, <span class=\"code\">.zoo</span>, <span class=\"code\">.arc</span>, <span class=\"code\">.lzh</span>, <span class=\"code\">.arj</span>.</p> <p>It is possible to override the default behavior and control what types of files that are to be compressed by using options <span class=\"code\">{compress, What}</span> and <span class=\"code\">{uncompress, What}</span>. It is also possible to use many <span class=\"code\">compress</span> and <span class=\"code\">uncompress</span> options.</p> <p>To trigger file compression, its extension must match with the <span class=\"code\">compress</span> condition and must not match the <span class=\"code\">uncompress</span> condition. For example, if <span class=\"code\">compress</span> is set to <span class=\"code\">[&quot;gif&quot;, &quot;jpg&quot;]</span> and <span class=\"code\">uncompress</span> is set to <span class=\"code\">[&quot;jpg&quot;]</span>, only files with extension <span class=\"code\">&quot;gif&quot;</span> are compressed.</p> <a name=\"zip_options\"></a> <p>Options:</p> <dl> <dt><strong><span class=\"code\">cooked</span></strong></dt> <dd> <p>By default, this function opens the zip file in mode <span class=\"code\">raw</span>, which is faster but does not allow a remote (Erlang) file server to be used. Adding <span class=\"code\">cooked</span> to the mode list overrides the default and opens the zip file without the <span class=\"code\">raw</span> option. The same applies for the files added.</p> </dd> <dt><strong><span class=\"code\">verbose</span></strong></dt> <dd> <p>Prints an informational message about each added file.</p> </dd> <dt><strong><span class=\"code\">memory</span></strong></dt> <dd> <p>The output is not to a file, but instead as a tuple <span class=\"code\">{FileName, binary()}</span>. The binary is a full zip archive with header and can be extracted with, for example, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#unzip-2\"><span class=\"code\">unzip/2</span></a></span>.</p> </dd> <dt><strong><span class=\"code\">{comment, Comment}</span></strong></dt> <dd> <p>Adds a comment to the zip archive.</p> </dd> <dt><strong><span class=\"code\">{cwd, CWD}</span></strong></dt> <dd> <p>Uses the specified directory as current work directory (<span class=\"code\">cwd</span>). This is prepended to filenames when adding them, although not in the zip archive (acting like <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/file#set_cwd-1\"><span class=\"code\">file:set_cwd/1</span></a></span> in Kernel, but without changing the global <span class=\"code\">cwd</span> property.).</p> </dd> <dt><strong><span class=\"code\">{compress, What}</span></strong></dt> <dd> <p>Controls what types of files to be compressed. Defaults to <span class=\"code\">all</span>. The following values of <span class=\"code\">What</span> are allowed:</p> <dl> <dt><strong><span class=\"code\">all</span></strong></dt> <dd> <p>All files are compressed (as long as they pass the <span class=\"code\">uncompress</span> condition).</p> </dd> <dt><strong><span class=\"code\">[Extension]</span></strong></dt> <dd> <p>Only files with exactly these extensions are compressed.</p> </dd> <dt><strong><span class=\"code\">{add,[Extension]}</span></strong></dt> <dd> <p>Adds these extensions to the list of compress extensions.</p> </dd> <dt><strong><span class=\"code\">{del,[Extension]}</span></strong></dt> <dd> <p>Deletes these extensions from the list of compress extensions.</p> </dd> </dl> </dd> <dt><strong><span class=\"code\">{uncompress, What}</span></strong></dt> <dd> <p>Controls what types of files to be uncompressed. Defaults to <span class=\"code\">[&quot;.Z&quot;, &quot;.zip&quot;, &quot;.zoo&quot;, &quot;.arc&quot;, &quot;.lzh&quot;, &quot;.arj&quot;]</span>. The following values of <span class=\"code\">What</span> are allowed:</p> <dl> <dt><strong><span class=\"code\">all</span></strong></dt> <dd> <p>No files are compressed.</p> </dd> <dt><strong><span class=\"code\">[Extension]</span></strong></dt> <dd> <p>Files with these extensions are uncompressed.</p> </dd> <dt><strong><span class=\"code\">{add,[Extension]}</span></strong></dt> <dd> <p>Adds these extensions to the list of uncompress extensions.</p> </dd> <dt><strong><span class=\"code\">{del,[Extension]}</span></strong></dt> <dd> <p>Deletes these extensions from the list of uncompress extensions.</p> </dd> </dl> </dd> </dl> <p></p></div> <a name=\"zip_close-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-zip_close-1-id361789\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L483\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>zip_close(ZipHandle) -&gt; ok | {error, einval}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ZipHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Closes a zip archive, previously opened with <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#zip_open-1\"><span class=\"code\">zip_open/1,2</span></a></span>. All resources are closed, and the handle is not to be used after closing.</p> <p></p></div> <a name=\"zip_get-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-zip_get-1-id361817\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L494\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>zip_get(ZipHandle) -&gt; {ok, [Result]} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"zip_get-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-zip_get-2-id361787\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L494\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>zip_get(FileName, ZipHandle) -&gt; {ok, Result} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FileName = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ZipHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span> | {<span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span>, binary()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Extracts one or all files from an open archive.</p> <p>The files are unzipped to memory or to file, depending on the options specified to function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#zip_open-1\"><span class=\"code\">zip_open/1,2</span></a></span> when opening the archive.</p> <p></p></div> <a name=\"zip_list_dir-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-zip_list_dir-1-id361800\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L507\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>zip_list_dir(ZipHandle) -&gt; {ok, Result} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-zip_comment\">zip_comment()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-zip_file\">zip_file()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ZipHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the file list of an open zip archive. The first returned element is the zip archive comment.</p> <p></p></div> <a name=\"zip_open-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-zip_open-1-id361879\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L516\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>zip_open(Archive) -&gt; {ok, ZipHandle} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"zip_open-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-zip_open-2-id361923\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/zip.xml#L516\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>zip_open(Archive, Options) -&gt; {ok, ZipHandle} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Archive = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-name\">file:name()</a></span> | binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ZipHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [Option]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Option = cooked | memory | {cwd, CWD :: <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-filename\">file:filename()</a></span>}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Opens a zip archive, and reads and saves its directory. This means that later reading files from the archive is faster than unzipping files one at a time with <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#unzip-1\"><span class=\"code\">unzip/1,2</span></a></span>.</p> <p>The archive must be closed with <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#zip_close-1\"><span class=\"code\">zip_close/1</span></a></span>.</p> <p>The <span class=\"code\">ZipHandle</span> is closed if the process that originally opened the archive dies.</p> <p></p></div> ","name":"zip"}