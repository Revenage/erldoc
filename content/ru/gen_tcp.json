{"summary":"Interface to TCP/IP sockets.","description":"<p> </p><p>This module provides functions for communicating with sockets using the TCP/IP protocol.</p> <p>The following code fragment is a simple example of a client connecting to a server at port 5678, transferring a binary, and closing the connection:</p> <div class=\"example example-none\"><pre>client() -&gt; SomeHostInNet = &quot;localhost&quot;, % to make it runnable on one machine {ok, Sock} = gen_tcp:connect(SomeHostInNet, 5678, [binary, {packet, 0}]), ok = gen_tcp:send(Sock, &quot;Some Data&quot;), ok = gen_tcp:close(Sock).</pre></div> <p>At the other end, a server is listening on port 5678, accepts the connection, and receives the binary:</p> <div class=\"example example-none\"><pre>server() -&gt; {ok, LSock} = gen_tcp:listen(5678, [binary, {packet, 0}, {active, false}]), {ok, Sock} = gen_tcp:accept(LSock), {ok, Bin} = do_recv(Sock, []), ok = gen_tcp:close(Sock), ok = gen_tcp:close(LSock), Bin. do_recv(Sock, Bs) -&gt; case gen_tcp:recv(Sock, 0) of {ok, B} -&gt; do_recv(Sock, [Bs, B]); {error, closed} -&gt; {ok, list_to_binary(Bs)} end.</pre></div> <p>For more examples, see section <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#examples\">Examples</a></span>.</p> <p></p>","funcs":" <a name=\"accept-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-accept-1-id218368\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_tcp.xml#L118\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>accept(ListenSocket) -&gt; {ok, Socket} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"accept-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-accept-2-id218408\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_tcp.xml#L118\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>accept(ListenSocket, Timeout) -&gt; {ok, Socket} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListenSocket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFBODY rb-1\">Returned by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#listen-2\"><span class=\"code\">listen/2</span></a></span>. </div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = closed | timeout | system_limit | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Accepts an incoming connection request on a listening socket. <span class=\"code\">Socket</span> must be a socket returned from <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#listen-2\"><span class=\"code\">listen/2</span></a></span>. <span class=\"code\">Timeout</span> specifies a time-out value in milliseconds. Defaults to <span class=\"code\">infinity</span>.</p> <p>Returns:</p> <ul> <li><p><span class=\"code\">{ok, Socket}</span> if a connection is established</p></li> <li><p><span class=\"code\">{error, closed}</span> if <span class=\"code\">ListenSocket</span> is closed</p></li> <li><p><span class=\"code\">{error, timeout}</span> if no connection is established within the specified time</p></li> <li><p><span class=\"code\">{error, system_limit}</span> if all available ports in the Erlang emulator are in use</p></li> <li><p>A POSIX error value if something else goes wrong, see <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/inet\"><span class=\"code\">inet(3)</span></a></span> for possible error values</p></li> </ul> <p>Packets can be sent to the returned socket <span class=\"code\">Socket</span> using <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#send-2\"><span class=\"code\">send/2</span></a></span>. Packets sent from the peer are delivered as messages (unless <span class=\"code\">{active, false}</span> is specified in the option list for the listening socket, in which case packets are retrieved by calling <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#recv-2\"><span class=\"code\">recv/2</span></a></span>):</p> <div class=\"example example-none\"><pre>{tcp, Socket, Data}</pre></div> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>The <span class=\"code\">accept</span> call does <strong>not</strong> have to be issued from the socket owner process. Using version 5.5.3 and higher of the emulator, multiple simultaneous accept calls can be issued from different processes, which allows for a pool of acceptor processes handling incoming connections.</p> <p></p></div></div> <p></p></div> <a name=\"close-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-close-1-id218746\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_tcp.xml#L165\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>close(Socket) -&gt; ok</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Closes a TCP socket.</p> <p>Note that in most implementations of TCP, doing a <span class=\"code\">close</span> does not guarantee that any data sent is delivered to the recipient before the close is detected at the remote side. If you want to guarantee delivery of the data to the recipient there are two common ways to achieve this.</p> <ul> <li><p>Use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#shutdown-2\"><span class=\"code\">gen_tcp:shutdown(Sock, write)</span></a></span> to signal that no more data is to be sent and wait for the read side of the socket to be closed.</p> </li> <li><p>Use the socket option <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#packet\"><span class=\"code\">{packet, N}</span></a></span> (or something similar) to make it possible for the receiver to close the connection when it knowns it has received all the data.</p> </li> </ul> <p></p></div> <a name=\"connect-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-connect-3-id218879\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_tcp.xml#L190\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>connect(Address, Port, Options) -&gt; {ok, Socket} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"connect-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-connect-4-id218947\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_tcp.xml#L190\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>connect(Address, Port, Options, Timeout) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, Socket} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Address = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-socket_address\">inet:socket_address()</a></span> | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-hostname\">inet:hostname()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Port = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-connect_option\">connect_option()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = timeout | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Connects to a server on TCP port <span class=\"code\">Port</span> on the host with IP address <span class=\"code\">Address</span>. Argument <span class=\"code\">Address</span> can be a hostname or an IP address.</p> <p>The following options are available:</p> <dl> <dt><strong><span class=\"code\">{ip, Address}</span></strong></dt> <dd><p>If the host has many network interfaces, this option specifies which one to use.</p></dd> <dt><strong><span class=\"code\">{ifaddr, Address}</span></strong></dt> <dd><p>Same as <span class=\"code\">{ip, Address}</span>. If the host has many network interfaces, this option specifies which one to use.</p> </dd> <dt><strong><span class=\"code\">{fd, integer() &gt;= 0}</span></strong></dt> <dd><p>If a socket has somehow been connected without using <span class=\"code\">gen_tcp</span>, use this option to pass the file descriptor for it. If <span class=\"code\">{ip, Address}</span> and/or <span class=\"code\">{port, port_number()}</span> is combined with this option, the <span class=\"code\">fd</span> is bound to the specified interface and port before connecting. If these options are not specified, it is assumed that the <span class=\"code\">fd</span> is already bound appropriately.</p></dd> <dt><strong><span class=\"code\">inet</span></strong></dt> <dd><p>Sets up the socket for IPv4.</p></dd> <dt><strong><span class=\"code\">inet6</span></strong></dt> <dd><p>Sets up the socket for IPv6.</p></dd> <dt><strong><span class=\"code\">local</span></strong></dt> <dd> <p> Sets up a Unix Domain Socket. See <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-local_address\"><span class=\"code\">inet:local_address()</span></a></span> </p> </dd> <dt><strong><span class=\"code\">{port, Port}</span></strong></dt> <dd><p>Specifies which local port number to use.</p></dd> <dt><strong><span class=\"code\">{tcp_module, module()}</span></strong></dt> <dd><p>Overrides which callback module is used. Defaults to <span class=\"code\">inet_tcp</span> for IPv4 and <span class=\"code\">inet6_tcp</span> for IPv6.</p></dd> <dt><strong><span class=\"code\">Opt</span></strong></dt> <dd><p>See <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#setopts-2\"><span class=\"code\">inet:setopts/2</span></a></span>.</p> </dd> </dl> <p>Packets can be sent to the returned socket <span class=\"code\">Socket</span> using <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#send-2\"><span class=\"code\">send/2</span></a></span>. Packets sent from the peer are delivered as messages:</p> <div class=\"example example-none\"><pre>{tcp, Socket, Data}</pre></div> <p>If the socket is in <span class=\"code\">{active, N}</span> mode (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#setopts-2\"><span class=\"code\">inet:setopts/2</span></a></span> for details) and its message counter drops to <span class=\"code\">0</span>, the following message is delivered to indicate that the socket has transitioned to passive (<span class=\"code\">{active, false}</span>) mode:</p> <div class=\"example example-none\"><pre>{tcp_passive, Socket}</pre></div> <p>If the socket is closed, the following message is delivered:</p> <div class=\"example example-none\"><pre>{tcp_closed, Socket}</pre></div> <p>If an error occurs on the socket, the following message is delivered (unless <span class=\"code\">{active, false}</span> is specified in the option list for the socket, in which case packets are retrieved by calling <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#recv-2\"><span class=\"code\">recv/2</span></a></span>):</p> <div class=\"example example-none\"><pre>{tcp_error, Socket, Reason}</pre></div> <p>The optional <span class=\"code\">Timeout</span> parameter specifies a time-out in milliseconds. Defaults to <span class=\"code\">infinity</span>.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>Keep in mind that if the underlying OS <span class=\"code\">connect()</span> call returns a timeout, <span class=\"code\">gen_tcp:connect</span> will also return a timeout (i.e. <span class=\"code\">{error, etimedout}</span>), even if a larger <span class=\"code\">Timeout</span> was specified.</p> <p></p></div></div> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>The default values for options specified to <span class=\"code\">connect</span> can be affected by the Kernel configuration parameter <span class=\"code\">inet_default_connect_options</span>. For details, see <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/inet\"><span class=\"code\">inet(3)</span></a></span>.</p> <p></p></div></div> <p></p></div> <a name=\"controlling_process-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-controlling_process-2-id219540\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_tcp.xml#L276\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>controlling_process(Socket, Pid) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Pid = pid()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = closed | not_owner | badarg | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Assigns a new controlling process <span class=\"code\">Pid</span> to <span class=\"code\">Socket</span>. The controlling process is the process that receives messages from the socket. If called by any other process than the current controlling process, <span class=\"code\">{error, not_owner}</span> is returned. If the process identified by <span class=\"code\">Pid</span> is not an existing local pid, <span class=\"code\">{error, badarg}</span> is returned. <span class=\"code\">{error, badarg}</span> may also be returned in some cases when <span class=\"code\">Socket</span> is closed during the execution of this function.</p> <p>If the socket is set in active mode, this function will transfer any messages in the mailbox of the caller to the new controlling process. If any other process is interacting with the socket while the transfer is happening, the transfer may not work correctly and messages may remain in the caller&apos;s mailbox. For instance changing the sockets active mode before the transfere is complete may cause this.</p> <p></p></div> <a name=\"listen-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-listen-2-id219536\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_tcp.xml#L300\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>listen(Port, Options) -&gt; {ok, ListenSocket} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Port = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-listen_option\">listen_option()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListenSocket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = system_limit | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sets up a socket to listen on port <span class=\"code\">Port</span> on the local host.</p> <p>If <span class=\"code\">Port == 0</span>, the underlying OS assigns an available port number, use <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#port-1\"><span class=\"code\">inet:port/1</span></a></span> to retrieve it.</p> <p>The following options are available:</p> <dl> <dt><strong><span class=\"code\">list</span></strong></dt> <dd><p>Received <span class=\"code\">Packet</span> is delivered as a list.</p></dd> <dt><strong><span class=\"code\">binary</span></strong></dt> <dd><p>Received <span class=\"code\">Packet</span> is delivered as a binary.</p></dd> <dt><strong><span class=\"code\">{backlog, B}</span></strong></dt> <dd><p><span class=\"code\">B</span> is an integer &gt;= <span class=\"code\">0</span>. The backlog value defines the maximum length that the queue of pending connections can grow to. Defaults to <span class=\"code\">5</span>.</p></dd> <dt><strong><span class=\"code\">{ip, Address}</span></strong></dt> <dd><p>If the host has many network interfaces, this option specifies which one to listen on.</p></dd> <dt><strong><span class=\"code\">{port, Port}</span></strong></dt> <dd><p>Specifies which local port number to use.</p></dd> <dt><strong><span class=\"code\">{fd, Fd}</span></strong></dt> <dd><p>If a socket has somehow been connected without using <span class=\"code\">gen_tcp</span>, use this option to pass the file descriptor for it.</p></dd> <dt><strong><span class=\"code\">{ifaddr, Address}</span></strong></dt> <dd><p>Same as <span class=\"code\">{ip, Address}</span>. If the host has many network interfaces, this option specifies which one to use.</p> </dd> <dt><strong><span class=\"code\">inet6</span></strong></dt> <dd><p>Sets up the socket for IPv6.</p></dd> <dt><strong><span class=\"code\">inet</span></strong></dt> <dd><p>Sets up the socket for IPv4.</p></dd> <dt><strong><span class=\"code\">{tcp_module, module()}</span></strong></dt> <dd><p>Overrides which callback module is used. Defaults to <span class=\"code\">inet_tcp</span> for IPv4 and <span class=\"code\">inet6_tcp</span> for IPv6.</p></dd> <dt><strong><span class=\"code\">Opt</span></strong></dt> <dd><p>See <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#setopts-2\"><span class=\"code\">inet:setopts/2</span></a></span>. </p></dd> </dl> <p>The returned socket <span class=\"code\">ListenSocket</span> should be used in calls to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#accept-1\"><span class=\"code\">accept/1,2</span></a></span> to accept incoming connection requests.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>The default values for options specified to <span class=\"code\">listen</span> can be affected by the Kernel configuration parameter <span class=\"code\">inet_default_listen_options</span>. For details, see <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/inet\"><span class=\"code\">inet(3)</span></a></span>.</p> <p></p></div></div> <p></p></div> <a name=\"recv-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-recv-2-id220149\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_tcp.xml#L357\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>recv(Socket, Length) -&gt; {ok, Packet} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"recv-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-recv-3-id220220\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_tcp.xml#L357\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>recv(Socket, Length, Timeout) -&gt; {ok, Packet} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Length = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Packet = string() | binary() | HttpPacket</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = closed | timeout | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">HttpPacket = term()</span></div><div class=\"REFBODY rb-1\">See the description of <span class=\"code\">HttpPacket</span> in <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/erlang#decode_packet-3\"><span class=\"code\">erlang:decode_packet/3</span></a></span> in ERTS. </div></div><div class=\"REFBODY rb-7\"><p> </p><p>Receives a packet from a socket in passive mode. A closed socket is indicated by return value <span class=\"code\">{error, closed}</span>.</p> <p>Argument <span class=\"code\">Length</span> is only meaningful when the socket is in <span class=\"code\">raw</span> mode and denotes the number of bytes to read. If <span class=\"code\">Length</span> is <span class=\"code\">0</span>, all available bytes are returned. If <span class=\"code\">Length</span> &gt; <span class=\"code\">0</span>, exactly <span class=\"code\">Length</span> bytes are returned, or an error; possibly discarding less than <span class=\"code\">Length</span> bytes of data when the socket is closed from the other side.</p> <p>The optional <span class=\"code\">Timeout</span> parameter specifies a time-out in milliseconds. Defaults to <span class=\"code\">infinity</span>.</p> <p></p></div> <a name=\"send-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-send-2-id220151\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_tcp.xml#L383\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>send(Socket, Packet) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Packet = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = closed | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sends a packet on a socket.</p> <p>There is no <span class=\"code\">send</span> call with a time-out option, use socket option <span class=\"code\">send_timeout</span> if time-outs are desired. See section <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#examples\">Examples</a></span>.</p> <p></p></div> <a name=\"shutdown-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-shutdown-2-id220433\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_tcp.xml#L394\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>shutdown(Socket, How) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">How = read | write | read_write</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Closes a socket in one or two directions.</p> <p><span class=\"code\">How == write</span> means closing the socket for writing, reading from it is still possible.</p> <p>If <span class=\"code\">How == read</span> or there is no outgoing data buffered in the <span class=\"code\">Socket</span> port, the socket is shut down immediately and any error encountered is returned in <span class=\"code\">Reason</span>.</p> <p>If there is data buffered in the socket port, the attempt to shutdown the socket is postponed until that data is written to the kernel socket send buffer. If any errors are encountered, the socket is closed and <span class=\"code\">{error, closed}</span> is returned on the next <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#recv-2\"><span class=\"code\">recv/2</span></a></span> or <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#send-2\"><span class=\"code\">send/2</span></a></span>.</p> <p>Option <span class=\"code\">{exit_on_close, false}</span> is useful if the peer has done a shutdown on the write side.</p> <p></p></div> "}