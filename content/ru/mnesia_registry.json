{"summary":"Dump support for registries in erl_interface.","description":"<p> </p><p>This module is usually part of the <span class=\"code\">erl_interface</span> application, but is currently part of the Mnesia application.</p> <p>This module is mainly intended for internal use within OTP, but it has two functions that are exported for public use.</p> <p>On C-nodes, <span class=\"code\">erl_interface</span> has support for registry tables. These tables reside in RAM on the C-node, but can also be dumped into Mnesia tables. By default, the dumping of registry tables through <span class=\"code\">erl_interface</span> causes a corresponding Mnesia table to be created with <span class=\"code\">mnesia_registry:create_table/1</span>, if necessary.</p> <p>Tables that are created with these functions can be administered as all other Mnesia tables. They can be included in backups, replicas can be added, and so on. The tables are normal Mnesia tables owned by the user of the corresponding <span class=\"code\">erl_interface</span> registries.</p> <p></p>","funcs":" <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-create_table-1-id95490\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/mnesia/doc/src/mnesia_registry.xml#L59\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"create_table-1\" href=\"/erldoc/docs/#create_table-1\">create_table(Tab) -&gt; ok | exit(Reason)</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>A wrapper function for <span class=\"code\">mnesia:create_table/2</span>, which creates a table (if there is no existing table) with an appropriate set of <span class=\"code\">attributes</span>. The table only resides on the local node and its storage type is the same as the <span class=\"code\">schema</span> table on the local node, that is, <span class=\"code\">{ram_copies,[node()]}</span> or <span class=\"code\">{disc_copies,[node()]}</span>.</p> <p>This function is used by <span class=\"code\">erl_interface</span> to create the Mnesia table if it does not already exist.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-create_table-2-id95542\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/mnesia/doc/src/mnesia_registry.xml#L75\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"create_table-2\" href=\"/erldoc/docs/#create_table-2\">create_table(Tab, TabDef) -&gt; ok | exit(Reason)</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>A wrapper function for <span class=\"code\">mnesia:create_table/2</span>, which creates a table (if there is no existing table) with an appropriate set of <span class=\"code\">attributes</span>. The attributes and <span class=\"code\">TabDef</span> are forwarded to <span class=\"code\">mnesia:create_table/2</span>. For example, if the table is to reside as <span class=\"code\">disc_only_copies</span> on all nodes, a call looks as follows:</p> <div class=\"example example-none\"><pre> TabDef = [{{disc_only_copies, node()|nodes()]}], mnesia_registry:create_table(my_reg, TabDef)</pre></div> <p></p></div> "}