{"summary":"Default formatter for Logger.","description":"<p> </p><p>Each Logger handler has a configured formatter specified as a module and a configuration term. The purpose of the formatter is to translate the log events to a final printable string (<span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/unicode#type-chardata\"><span class=\"code\">unicode:chardata()</span></a></span>) which can be written to the output device of the handler. See sections <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/kernel/logger_chapter#handlers\">Handlers</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/kernel/logger_chapter#formatters\">Formatters</a></span> in the Kernel User&apos;s Guide for more information.</p> <p><span class=\"code\">logger_formatter</span> is the default formatter used by Logger.</p> <p></p>","funcs":" <a name=\"check_config-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-check_config-1-id218796\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/logger_formatter.xml#L291\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>check_config(Config) -&gt; ok | {error, term()}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Config = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-config\">config()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>The function is called by Logger when the formatter configuration for a handler is set or modified. It returns <span class=\"code\">ok</span> if the configuration is valid, and <span class=\"code\">{error,term()}</span> if it is faulty.</p> <p>The following Logger API functions can trigger this callback:</p> <ul> <li><span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/logger#add_handler-3\"><span class=\"code\">logger:add_handler/3</span></a></span></li> <li><span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/logger#set_handler_config-2\"><span class=\"code\">logger:set_handler_config/2,3</span></a></span></li> <li><span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/logger#update_handler_config-2\"><span class=\"code\">logger:update_handler_config/2</span></a></span></li> <li><span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/logger#update_formatter_config-2\"><span class=\"code\">logger:update_formatter_config/2</span></a></span></li> </ul> <p></p></div> <a name=\"format-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-format-2-id218970\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/logger_formatter.xml#L312\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>format(LogEvent, Config) -&gt; <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">LogEvent = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/logger#type-log_event\">logger:log_event()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Config = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-config\">config()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>This the formatter callback function to be called from handlers. The log event is processed as follows:</p> <ul> <li>If the message is on report form, it is converted to <span class=\"code\">{Format,Args}</span> by calling the report callback. See section <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/kernel/logger_chapter#log_message\">Log Message</a></span> in the Kernel User&apos;s Guide for more information about report callbacks and valid forms of log messages.</li> <li>The message size is limited according to the values of configuration parameters <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#chars_limit\"><span class=\"code\">chars_limit</span></a></span> and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#depth\"><span class=\"code\">depth</span></a></span>.</li> <li>The full log entry is composed according to the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#template\"><span class=\"code\">template</span></a></span>.</li> <li>If the final string is too long, it is truncated according to the value of configuration parameter <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#max_size\"><span class=\"code\">max_size</span></a></span>.</li> </ul> <p></p></div> ","name":"logger_formatter"}