{"summary":"Megaco encoder behaviour.","description":"<p> </p><p>The following functions should be exported from a <span class=\"code\">megaco_encoder</span> callback module:</p> <p></p>","funcs":" <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:encode_message-3-id86012\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_encoder.xml#L77\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:encode_message-3\" href=\"/erldoc/docs/#Module:encode_message-3\">Module:encode_message(EncodingConfig, Version, Message) -&gt; {ok, Bin} | Error</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">EncodingConfig = list()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Version = integer()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Message = megaco_message()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bin = binary()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Error = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Encode a megaco message.</p> <a name=\"decode_message\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:decode_message-3-id86064\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_encoder.xml#L94\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:decode_message-3\" href=\"/erldoc/docs/#Module:decode_message-3\">Module:decode_message(EncodingConfig, Version, Bin) -&gt; {ok, Message} | Error</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">EncodingConfig = list()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Version = integer() | dynamic</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Message = megaco_message()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bin = binary()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Error = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Decode a megaco message. </p> <p>Note that if the Version argument is <span class=\"code\">dynamic</span>, the decoder should try to figure out the actual version from the message itself and then use the proper decoder, e.g. version 1. <br>If on the other hand the Version argument is an integer, it means that this is the expected version of the message and the decoder for that version should be used.</p> <a name=\"decode_mini_message\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:decode_mini_message-3-id86128\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_encoder.xml#L117\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:decode_mini_message-3\" href=\"/erldoc/docs/#Module:decode_mini_message-3\">Module:decode_mini_message(EncodingConfig, Version, Bin) -&gt; {ok, Message} | Error</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">EncodingConfig = list()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Version = integer() | dynamic</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Message = megaco_message()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bin = binary()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Error = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Perform a minimal decode of a megaco message. </p> <p>The purpose of this function is to do a minimal decode of Megaco message. A successfull result is a <span class=\"code\">&apos;MegacoMessage&apos;</span> in which only version and mid has been initiated. This function is used by the megaco_messenger module when the <span class=\"code\">decode_message/3</span> function fails to figure out the mid (the actual sender) of the message.</p> <p>Note again that a successfull decode only returns a partially initiated message.</p> <a name=\"encode_transaction\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:encode_transaction-3-id86198\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_encoder.xml#L142\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:encode_transaction-3\" href=\"/erldoc/docs/#Module:encode_transaction-3\">Module:encode_transaction(EncodingConfig, Version, Transaction) -&gt; OK | Error</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">EncodingConfig = list()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Version = integer()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transaction = transaction()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">OK = {ok, Bin}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bin = binary()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Error = {error, Reason}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = not_implemented | OtherReason</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">OtherReason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Encode a megaco transaction. If this, for whatever reason, is not supported, the function should return the error reason <span class=\"code\">not_implemented</span>. </p> <p>This functionality is used both when the transaction sender is used and for segmentation. So, for either of those to work, this function <strong>must</strong> be fully supported! </p> <a name=\"encode_action_requests\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:encode_action_requests-3-id86274\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_encoder.xml#L168\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:encode_action_requests-3\" href=\"/erldoc/docs/#Module:encode_action_requests-3\">Module:encode_action_requests(EncodingConfig, Version, ARs) -&gt; OK | Error</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">EncodingConfig = list()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Version = integer()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ARs = action_requests()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">action_requests() = [action_request()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">OK = {ok, Bin}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bin = binary()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Error = {error, Reason}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = not_implemented | OtherReason</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">OtherReason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Encode megaco action requests. This function is called when the user calls the function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/megaco#encode_actions\">encode_actions/3</a></span>. If that function is never used or if the codec cannot support this (the encoding of individual actions), then return with error reason <span class=\"code\">not_implemented</span>. </p> <a name=\"encode_action_reply\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:encode_action_reply-3-id86352\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_encoder.xml#L194\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:encode_action_reply-3\" href=\"/erldoc/docs/#Module:encode_action_reply-3\">Module:encode_action_reply(EncodingConfig, Version, AR) -&gt; OK | Error</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">EncodingConfig = list()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Version = integer()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">AR = action_reply()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">OK = {ok, Bin}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bin = binary()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Error = {error, Reason}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = not_implemented | OtherReason</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">OtherReason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Encode a megaco action reply. If this, for whatever reason, is not supported, the function should return the error reason <span class=\"code\">not_implemented</span>. </p> <p>This function is used when segmentation has been configured. So, for this to work, this function <strong>must</strong> be fully supported! </p> <p></p></div> "}