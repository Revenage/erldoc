{"summary":"Coordination of system startup.","description":"<p> </p><p>This module is preloaded and contains the code for the <span class=\"code\">init</span> system process that coordinates the startup of the system. The first function evaluated at startup is <span class=\"code\">boot(BootArgs)</span>, where <span class=\"code\">BootArgs</span> is a list of command-line arguments supplied to the Erlang runtime system from the local operating system; see <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/erl\"><span class=\"code\">erl(1)</span></a></span>.</p> <p><span class=\"code\">init</span> reads the boot script, which contains instructions on how to initiate the system. For more information about boot scripts, see <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/script\"><span class=\"code\">script(4)</span></a></span>.</p> <p><span class=\"code\">init</span> also contains functions to restart, reboot, and stop the system.</p> <p></p>","funcs":" <a name=\"boot-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-boot-1-id88042\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/init.xml#L52\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>boot(BootArgs) -&gt; no_return()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BootArgs = [binary()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Starts the Erlang runtime system. This function is called when the emulator is started and coordinates system startup.</p> <p><span class=\"code\">BootArgs</span> are all command-line arguments except the emulator flags, that is, flags and plain arguments; see <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/erl\"><span class=\"code\">erl(1)</span></a></span>.</p> <p><span class=\"code\">init</span> interprets some of the flags, see section <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#flags\">Command-Line Flags</a></span> below. The remaining flags (&quot;user flags&quot;) and plain arguments are passed to the <span class=\"code\">init</span> loop and can be retrieved by calling <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_arguments-0\"><span class=\"code\">get_arguments/0</span></a></span> and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_plain_arguments-0\"><span class=\"code\">get_plain_arguments/0</span></a></span>, respectively.</p> <p></p></div> <a name=\"get_argument-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_argument-1-id312462\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/init.xml#L71\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_argument(Flag) -&gt; {ok, Arg} | error</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Flag = atom()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Arg = [Values :: [string()]]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns all values associated with the command-line user flag <span class=\"code\">Flag</span>. If <span class=\"code\">Flag</span> is provided several times, each <span class=\"code\">Values</span> is returned in preserved order. Example:</p> <div class=\"example\"><pre>% <span class=\"bold_code bc-12\">erl -a b c -a d</span>...1&gt; <span class=\"bold_code bc-12\">init:get_argument(a).</span>{ok,[[&quot;b&quot;,&quot;c&quot;],[&quot;d&quot;]]}</pre></div> <p>The following flags are defined automatically and can be retrieved using this function:</p> <dl> <dt><strong><span class=\"code\">root</span></strong></dt> <dd> <p>The installation directory of Erlang/OTP, <span class=\"code\">$ROOT</span>:</p> <div class=\"example\"><pre>2&gt; <span class=\"bold_code bc-12\">init:get_argument(root).</span>{ok,[[&quot;/usr/local/otp/releases/otp_beam_solaris8_r10b_patched&quot;]]}</pre></div> </dd> <dt><strong><span class=\"code\">progname</span></strong></dt> <dd> <p>The name of the program which started Erlang:</p> <div class=\"example\"><pre>3&gt; <span class=\"bold_code bc-12\">init:get_argument(progname).</span>{ok,[[&quot;erl&quot;]]}</pre></div> </dd> <dt><strong><span class=\"code\">home</span></strong></dt> <dd> <p>The home directory:</p> <div class=\"example\"><pre>4&gt; <span class=\"bold_code bc-12\">init:get_argument(home).</span>{ok,[[&quot;/home/harry&quot;]]}</pre></div> </dd> </dl> <p>Returns <span class=\"code\">error</span> if no value is associated with <span class=\"code\">Flag</span>.</p> <p></p></div> <a name=\"get_arguments-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_arguments-0-id328414\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/init.xml#L114\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_arguments() -&gt; Flags</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Flags = [{Flag :: atom(), Values :: [string()]}]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns all command-line flags and the system-defined flags, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_argument-1\"><span class=\"code\">get_argument/1</span></a></span>.</p> <p></p></div> <a name=\"get_plain_arguments-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_plain_arguments-0-id325414\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/init.xml#L123\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_plain_arguments() -&gt; [Arg]</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Arg = string()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns any plain command-line arguments as a list of strings (possibly empty).</p> <p></p></div> <a name=\"get_status-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_status-0-id330383\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/init.xml#L132\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_status() -&gt; {InternalStatus, ProvidedStatus}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">InternalStatus = internal_status()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ProvidedStatus = term()</span></div><div class=\"REFTYPES rt-2\"> <span class=\"bold_code bc-5\">internal_status() = starting | started | stopping</span><br></div></div><div class=\"REFBODY rb-7\"><p> </p><p>The current status of the <span class=\"code\">init</span> process can be inspected. During system startup (initialization), <span class=\"code\">InternalStatus</span> is <span class=\"code\">starting</span>, and <span class=\"code\">ProvidedStatus</span> indicates how far the boot script has been interpreted. Each <span class=\"code\">{progress, Info}</span> term interpreted in the boot script affects <span class=\"code\">ProvidedStatus</span>, that is, <span class=\"code\">ProvidedStatus</span> gets the value of <span class=\"code\">Info</span>.</p> <p></p></div> <a name=\"reboot-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-reboot-0-id314572\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/init.xml#L148\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>reboot() -&gt; ok</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>All applications are taken down smoothly, all code is unloaded, and all ports are closed before the system terminates. If command-line flag <span class=\"code\">-heart</span> was specified, the <span class=\"code\">heart</span> program tries to reboot the system. For more information, see <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/heart\"><span class=\"code\">heart(3)</span></a></span>.</p> <p>To limit the shutdown time, the time <span class=\"code\">init</span> is allowed to spend taking down applications, command-line flag <span class=\"code\">-shutdown_time</span> is to be used.</p> <p></p></div> <a name=\"restart-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-restart-0-id329678\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/init.xml#L164\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>restart() -&gt; ok</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>The system is restarted <strong>inside</strong> the running Erlang node, which means that the emulator is not restarted. All applications are taken down smoothly, all code is unloaded, and all ports are closed before the system is booted again in the same way as initially started. The same <span class=\"code\">BootArgs</span> are used again.</p> <p>To limit the shutdown time, the time <span class=\"code\">init</span> is allowed to spend taking down applications, command-line flag <span class=\"code\">-shutdown_time</span> is to be used.</p> <p></p></div> <a name=\"script_id-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-script_id-0-id324991\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/init.xml#L180\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>script_id() -&gt; Id</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Id = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Gets the identity of the boot script used to boot the system. <span class=\"code\">Id</span> can be any Erlang term. In the delivered boot scripts, <span class=\"code\">Id</span> is <span class=\"code\">{Name, Vsn}</span>. <span class=\"code\">Name</span> and <span class=\"code\">Vsn</span> are strings.</p> <p></p></div> <a name=\"stop-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-stop-0-id325260\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/init.xml#L191\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>stop() -&gt; ok</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>The same as <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#stop-1\"><span class=\"code\">stop(0)</span></a></span>.</p> <p></p></div> <a name=\"stop-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-stop-1-id71337\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/erts/doc/src/init.xml#L200\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>stop(Status) -&gt; ok</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Status = integer() &gt;= 0 | string()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>All applications are taken down smoothly, all code is unloaded, and all ports are closed before the system terminates by calling <span class=\"code\">halt(Status)</span>. If command-line flag <span class=\"code\">-heart</span> was specified, the <span class=\"code\">heart</span> program is terminated before the Erlang node terminates. For more information, see <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/heart\"><span class=\"code\">heart(3)</span></a></span>.</p> <p>To limit the shutdown time, the time <span class=\"code\">init</span> is allowed to spend taking down applications, command-line flag <span class=\"code\">-shutdown_time</span> is to be used.</p> <p></p></div> "}