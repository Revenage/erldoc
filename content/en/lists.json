{"summary":"List processing functions.","description":"<p> </p><p>This module contains functions for list processing.</p> <p>Unless otherwise stated, all functions assume that position numbering starts at 1. That is, the first element of a list is at position 1.</p> <p>Two terms <span class=\"code\">T1</span> and <span class=\"code\">T2</span> compare equal if <span class=\"code\">T1&#xA0;==&#xA0;T2</span> evaluates to <span class=\"code\">true</span>. They match if <span class=\"code\">T1&#xA0;=:=&#xA0;T2</span> evaluates to <span class=\"code\">true</span>.</p> <p>Whenever an <a name=\"ordering_function\"></a><strong>ordering function</strong> <span class=\"code\">F</span> is expected as argument, it is assumed that the following properties hold of <span class=\"code\">F</span> for all x, y, and z:</p> <ul> <li><p>If x <span class=\"code\">F</span> y and y <span class=\"code\">F</span> x, then x = y (<span class=\"code\">F</span> is antisymmetric).</p> </li> <li><p>If x <span class=\"code\">F</span> y and y <span class=\"code\">F</span> z, then x <span class=\"code\">F</span> z (<span class=\"code\">F</span> is transitive).</p> </li> <li><p>x <span class=\"code\">F</span> y or y <span class=\"code\">F</span> x (<span class=\"code\">F</span> is total).</p> </li> </ul> <p>An example of a typical ordering function is less than or equal to: <span class=\"code\">=&lt;/2</span>.</p> <p></p>","funcs":" <a name=\"all-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-all-2-id345029\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L65\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>all(Pred, List) -&gt; boolean()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Pred = fun((Elem :: T) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if <span class=\"code\">Pred(Elem)</span> returns <span class=\"code\">true</span> for all elements <span class=\"code\">Elem</span> in <span class=\"code\">List</span>, otherwise <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"any-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-any-2-id353284\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L76\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>any(Pred, List) -&gt; boolean()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Pred = fun((Elem :: T) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if <span class=\"code\">Pred(Elem)</span> returns <span class=\"code\">true</span> for at least one element <span class=\"code\">Elem</span> in <span class=\"code\">List</span>.</p> <p></p></div> <a name=\"append-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-append-1-id358384\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L87\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>append(ListOfLists) -&gt; List1</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListOfLists = [List]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = List1 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list in which all the sublists of <span class=\"code\">ListOfLists</span> have been appended.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:append([[1, 2, 3], [a, b], [4, 5, 6]]).</span>[1,2,3,a,b,4,5,6]</pre></div> <p></p></div> <a name=\"append-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-append-2-id358506\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L100\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>append(List1, List2) -&gt; List3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = List3 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a new list <span class=\"code\">List3</span>, which is made from the elements of <span class=\"code\">List1</span> followed by the elements of <span class=\"code\">List2</span>.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:append(&quot;abc&quot;, &quot;def&quot;).</span>&quot;abcdef&quot;</pre></div> <p><span class=\"code\">lists:append(A, B)</span> is equivalent to <span class=\"code\">A ++ B</span>.</p> <p></p></div> <a name=\"concat-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-concat-1-id356322\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L115\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>concat(Things) -&gt; string()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Things = [Thing]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Thing = atom() | integer() | float() | string()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Concatenates the text representation of the elements of <span class=\"code\">Things</span>. The elements of <span class=\"code\">Things</span> can be atoms, integers, floats, or strings.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:concat([doc, &apos;/&apos;, file, &apos;.&apos;, 3]).</span>&quot;doc/file.3&quot;</pre></div> <p></p></div> <a name=\"delete-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-delete-2-id357866\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L129\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>delete(Elem, List1) -&gt; List2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Elem = T</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a copy of <span class=\"code\">List1</span> where the first element matching <span class=\"code\">Elem</span> is deleted, if there is such an element.</p> <p></p></div> <a name=\"droplast-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-droplast-1-id356643\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L139\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>droplast(List) -&gt; InitList</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [T, ...]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">InitList = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Drops the last element of a <span class=\"code\">List</span>. The list is to be non-empty, otherwise the function crashes with a <span class=\"code\">function_clause</span>.</p> <p></p></div> <a name=\"dropwhile-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-dropwhile-2-id354505\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L149\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>dropwhile(Pred, List1) -&gt; List2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Pred = fun((Elem :: T) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Drops elements <span class=\"code\">Elem</span> from <span class=\"code\">List1</span> while <span class=\"code\">Pred(Elem)</span> returns <span class=\"code\">true</span> and returns the remaining list.</p> <p></p></div> <a name=\"duplicate-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-duplicate-2-id359341\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L161\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>duplicate(N, Elem) -&gt; List</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Elem = T</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list containing <span class=\"code\">N</span> copies of term <span class=\"code\">Elem</span>.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:duplicate(5, xx).</span>[xx,xx,xx,xx,xx]</pre></div> <p></p></div> <a name=\"filter-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-filter-2-id355254\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L174\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>filter(Pred, List1) -&gt; List2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Pred = fun((Elem :: T) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p><span class=\"code\">List2</span> is a list of all elements <span class=\"code\">Elem</span> in <span class=\"code\">List1</span> for which <span class=\"code\">Pred(Elem)</span> returns <span class=\"code\">true</span>.</p> <p></p></div> <a name=\"filtermap-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-filtermap-2-id359580\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L184\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>filtermap(Fun, List1) -&gt; List2</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B01</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((Elem) -&gt; boolean() | {true, Value})</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [Elem]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [Elem | Value]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Elem = Value = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Calls <span class=\"code\">Fun(Elem)</span> on successive elements <span class=\"code\">Elem</span> of <span class=\"code\">List1</span>. <span class=\"code\">Fun/1</span> must return either a Boolean or a tuple <span class=\"code\">{true, Value}</span>. The function returns the list of elements for which <span class=\"code\">Fun</span> returns a new value, where a value of <span class=\"code\">true</span> is synonymous with <span class=\"code\">{true, Elem}</span>.</p> <p>That is, <span class=\"code\">filtermap</span> behaves as if it had been defined as follows:</p> <div class=\"example example-none\"><pre>filtermap(Fun, List1) -&gt; lists:foldr(fun(Elem, Acc) -&gt; case Fun(Elem) of false -&gt; Acc; true -&gt; [Elem|Acc]; {true,Value} -&gt; [Value|Acc] end end, [], List1).</pre></div> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:filtermap(fun(X) -&gt; case X rem 2 of 0 -&gt; {true, X div 2}; _ -&gt; false end end, [1,2,3,4,5]).</span>[1,2]</pre></div> <p></p></div> <a name=\"flatlength-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-flatlength-1-id359849\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L213\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>flatlength(DeepList) -&gt; integer() &gt;= 0</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DeepList = [term() | DeepList]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Equivalent to <span class=\"code\">length(flatten(DeepList))</span>, but more efficient.</p> <p></p></div> <a name=\"flatmap-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-flatmap-2-id359857\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L222\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>flatmap(Fun, List1) -&gt; List2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((A) -&gt; [B])</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [A]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [B]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">A = B = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Takes a function from <span class=\"code\">A</span>s to lists of <span class=\"code\">B</span>s, and a list of <span class=\"code\">A</span>s (<span class=\"code\">List1</span>) and produces a list of <span class=\"code\">B</span>s by applying the function to every element in <span class=\"code\">List1</span> and appending the resulting lists.</p> <p>That is, <span class=\"code\">flatmap</span> behaves as if it had been defined as follows:</p> <div class=\"example example-none\"><pre>flatmap(Fun, List1) -&gt; append(map(Fun, List1)).</pre></div> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:flatmap(fun(X)-&gt;[X,X] end, [a,b,c]).</span>[a,a,b,b,c,c]</pre></div> <p></p></div> <a name=\"flatten-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-flatten-1-id360102\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L243\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>flatten(DeepList) -&gt; List</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DeepList = [term() | DeepList]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [term()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a flattened version of <span class=\"code\">DeepList</span>.</p> <p></p></div> <a name=\"flatten-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-flatten-2-id360184\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L251\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>flatten(DeepList, Tail) -&gt; List</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DeepList = [term() | DeepList]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tail = List = [term()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a flattened version of <span class=\"code\">DeepList</span> with tail <span class=\"code\">Tail</span> appended.</p> <p></p></div> <a name=\"foldl-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-foldl-3-id360210\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L260\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>foldl(Fun, Acc0, List) -&gt; Acc1</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((Elem :: T, AccIn) -&gt; AccOut)</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Acc0 = Acc1 = AccIn = AccOut = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Calls <span class=\"code\">Fun(Elem, AccIn)</span> on successive elements <span class=\"code\">A</span> of <span class=\"code\">List</span>, starting with <span class=\"code\">AccIn == Acc0</span>. <span class=\"code\">Fun/2</span> must return a new accumulator, which is passed to the next call. The function returns the final value of the accumulator. <span class=\"code\">Acc0</span> is returned if the list is empty.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:foldl(fun(X, Sum) -&gt; X + Sum end, 0, [1,2,3,4,5]).</span>15&gt; <span class=\"bold_code bc-12\">lists:foldl(fun(X, Prod) -&gt; X * Prod end, 1, [1,2,3,4,5]).</span>120</pre></div> <p></p></div> <a name=\"foldr-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-foldr-3-id360337\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L280\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>foldr(Fun, Acc0, List) -&gt; Acc1</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((Elem :: T, AccIn) -&gt; AccOut)</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Acc0 = Acc1 = AccIn = AccOut = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Like <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#foldl-3\"><span class=\"code\">foldl/3</span></a></span>, but the list is traversed from right to left.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">P = fun(A, AccIn) -&gt; io:format(&quot;~p &quot;, [A]), AccIn end.</span>#Fun&lt;erl_eval.12.2225172&gt;&gt; <span class=\"bold_code bc-12\">lists:foldl(P, void, [1,2,3]).</span>1 2 3 void&gt; <span class=\"bold_code bc-12\">lists:foldr(P, void, [1,2,3]).</span>3 2 1 void</pre></div> <p><span class=\"code\">foldl/3</span> is tail recursive and is usually preferred to <span class=\"code\">foldr/3</span>.</p> <p></p></div> <a name=\"join-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-join-2-id360504\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L299\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>join(Sep, List1) -&gt; List2</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Sep = T</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Inserts <span class=\"code\">Sep</span> between each element in <span class=\"code\">List1</span>. Has no effect on the empty list and on a singleton list. For example:</p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:join(x, [a,b,c]).</span>[a,x,b,x,c]&gt; <span class=\"bold_code bc-12\">lists:join(x, [a]).</span>[a]&gt; <span class=\"bold_code bc-12\">lists:join(x, []).</span>[]</pre></div> <p></p></div> <a name=\"foreach-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-foreach-2-id360501\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L314\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>foreach(Fun, List) -&gt; ok</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((Elem :: T) -&gt; term())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Calls <span class=\"code\">Fun(Elem)</span> for each element <span class=\"code\">Elem</span> in <span class=\"code\">List</span>. This function is used for its side effects and the evaluation order is defined to be the same as the order of the elements in the list.</p> <p></p></div> <a name=\"keydelete-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-keydelete-3-id360496\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L326\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>keydelete(Key, N, TupleList1) -&gt; TupleList2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 1</span></div><div class=\"REFBODY rb-1\">1..tuple_size(Tuple)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList1 = TupleList2 = [Tuple]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuple = tuple()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a copy of <span class=\"code\">TupleList1</span> where the first occurrence of a tuple whose <span class=\"code\">N</span>th element compares equal to <span class=\"code\">Key</span> is deleted, if there is such a tuple.</p> <p></p></div> <a name=\"keyfind-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-keyfind-3-id360666\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L338\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>keyfind(Key, N, TupleList) -&gt; Tuple | false</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 1</span></div><div class=\"REFBODY rb-1\">1..tuple_size(Tuple)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList = [Tuple]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuple = tuple()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Searches the list of tuples <span class=\"code\">TupleList</span> for a tuple whose <span class=\"code\">N</span>th element compares equal to <span class=\"code\">Key</span>. Returns <span class=\"code\">Tuple</span> if such a tuple is found, otherwise <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"keymap-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-keymap-3-id360669\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L351\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>keymap(Fun, N, TupleList1) -&gt; TupleList2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((Term1 :: term()) -&gt; Term2 :: term())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 1</span></div><div class=\"REFBODY rb-1\">1..tuple_size(Tuple)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList1 = TupleList2 = [Tuple]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuple = tuple()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list of tuples where, for each tuple in <span class=\"code\">TupleList1</span>, the <span class=\"code\">N</span>th element <span class=\"code\">Term1</span> of the tuple has been replaced with the result of calling <span class=\"code\">Fun(Term1)</span>.</p> <p><strong>Examples:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">Fun = fun(Atom) -&gt; atom_to_list(Atom) end.</span>#Fun&lt;erl_eval.6.10732646&gt;2&gt; <span class=\"bold_code bc-12\">lists:keymap(Fun, 2, [{name,jane,22},{name,lizzie,20},{name,lydia,15}]).</span>[{name,&quot;jane&quot;,22},{name,&quot;lizzie&quot;,20},{name,&quot;lydia&quot;,15}]</pre></div> <p></p></div> <a name=\"keymember-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-keymember-3-id361038\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L370\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>keymember(Key, N, TupleList) -&gt; boolean()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 1</span></div><div class=\"REFBODY rb-1\">1..tuple_size(Tuple)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList = [Tuple]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuple = tuple()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if there is a tuple in <span class=\"code\">TupleList</span> whose <span class=\"code\">N</span>th element compares equal to <span class=\"code\">Key</span>, otherwise <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"keymerge-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-keymerge-3-id361428\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L381\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>keymerge(N, TupleList1, TupleList2) -&gt; TupleList3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 1</span></div><div class=\"REFBODY rb-1\">1..tuple_size(Tuple)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList1 = [T1]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList2 = [T2]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList3 = [T1 | T2]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T1 = T2 = Tuple</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuple = tuple()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the sorted list formed by merging <span class=\"code\">TupleList1</span> and <span class=\"code\">TupleList2</span>. The merge is performed on the <span class=\"code\">N</span>th element of each tuple. Both <span class=\"code\">TupleList1</span> and <span class=\"code\">TupleList2</span> must be key-sorted before evaluating this function. When two tuples compare equal, the tuple from <span class=\"code\">TupleList1</span> is picked before the tuple from <span class=\"code\">TupleList2</span>.</p> <p></p></div> <a name=\"keyreplace-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-keyreplace-4-id361512\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L397\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>keyreplace(Key, N, TupleList1, NewTuple) -&gt; TupleList2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 1</span></div><div class=\"REFBODY rb-1\">1..tuple_size(Tuple)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList1 = TupleList2 = [Tuple]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">NewTuple = Tuple</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuple = tuple()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a copy of <span class=\"code\">TupleList1</span> where the first occurrence of a <span class=\"code\">T</span> tuple whose <span class=\"code\">N</span>th element compares equal to <span class=\"code\">Key</span> is replaced with <span class=\"code\">NewTuple</span>, if there is such a tuple <span class=\"code\">T</span>.</p> <p></p></div> <a name=\"keysearch-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-keysearch-3-id361040\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L409\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>keysearch(Key, N, TupleList) -&gt; {value, Tuple} | false</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 1</span></div><div class=\"REFBODY rb-1\">1..tuple_size(Tuple)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList = [Tuple]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuple = tuple()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Searches the list of tuples <span class=\"code\">TupleList</span> for a tuple whose <span class=\"code\">N</span>th element compares equal to <span class=\"code\">Key</span>. Returns <span class=\"code\">{value, Tuple}</span> if such a tuple is found, otherwise <span class=\"code\">false</span>.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>This function is retained for backward compatibility. Function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#keyfind-3\"><span class=\"code\">keyfind/3</span></a></span> is usually more convenient.</p> <p></p></div></div> <p></p></div> <a name=\"keysort-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-keysort-2-id361903\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L427\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>keysort(N, TupleList1) -&gt; TupleList2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 1</span></div><div class=\"REFBODY rb-1\">1..tuple_size(Tuple)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList1 = TupleList2 = [Tuple]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuple = tuple()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list containing the sorted elements of list <span class=\"code\">TupleList1</span>. Sorting is performed on the <span class=\"code\">N</span>th element of the tuples. The sort is stable.</p> <p></p></div> <a name=\"keystore-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-keystore-4-id361896\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L438\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>keystore(Key, N, TupleList1, NewTuple) -&gt; TupleList2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 1</span></div><div class=\"REFBODY rb-1\">1..tuple_size(Tuple)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList1 = [Tuple]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList2 = [Tuple, ...]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">NewTuple = Tuple</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuple = tuple()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a copy of <span class=\"code\">TupleList1</span> where the first occurrence of a tuple <span class=\"code\">T</span> whose <span class=\"code\">N</span>th element compares equal to <span class=\"code\">Key</span> is replaced with <span class=\"code\">NewTuple</span>, if there is such a tuple <span class=\"code\">T</span>. If there is no such tuple <span class=\"code\">T</span>, a copy of <span class=\"code\">TupleList1</span> where [<span class=\"code\">NewTuple</span>] has been appended to the end is returned.</p> <p></p></div> <a name=\"keytake-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-keytake-3-id362106\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L454\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>keytake(Key, N, TupleList1) -&gt; {value, Tuple, TupleList2} | false</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 1</span></div><div class=\"REFBODY rb-1\">1..tuple_size(Tuple)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList1 = TupleList2 = [tuple()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuple = tuple()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Searches the list of tuples <span class=\"code\">TupleList1</span> for a tuple whose <span class=\"code\">N</span>th element compares equal to <span class=\"code\">Key</span>. Returns <span class=\"code\">{value, Tuple, TupleList2}</span> if such a tuple is found, otherwise <span class=\"code\">false</span>. <span class=\"code\">TupleList2</span> is a copy of <span class=\"code\">TupleList1</span> where the first occurrence of <span class=\"code\">Tuple</span> has been removed.</p> <p></p></div> <a name=\"last-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-last-1-id361908\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L469\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>last(List) -&gt; Last</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [T, ...]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Last = T</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the last element in <span class=\"code\">List</span>.</p> <p></p></div> <a name=\"map-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-map-2-id362372\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L477\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>map(Fun, List1) -&gt; List2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((A) -&gt; B)</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [A]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [B]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">A = B = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Takes a function from <span class=\"code\">A</span>s to <span class=\"code\">B</span>s, and a list of <span class=\"code\">A</span>s and produces a list of <span class=\"code\">B</span>s by applying the function to every element in the list. This function is used to obtain the return values. The evaluation order depends on the implementation.</p> <p></p></div> <a name=\"mapfoldl-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-mapfoldl-3-id362097\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L490\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>mapfoldl(Fun, Acc0, List1) -&gt; {List2, Acc1}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((A, AccIn) -&gt; {B, AccOut})</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Acc0 = Acc1 = AccIn = AccOut = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [A]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [B]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">A = B = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Combines the operations of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#map-2\"><span class=\"code\">map/2</span></a></span> and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#foldl-3\"><span class=\"code\">foldl/3</span></a></span> into one pass.</p> <p><strong>Example:</strong></p> <p>Summing the elements in a list and double them at the same time:</p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:mapfoldl(fun(X, Sum) -&gt; {2*X, X+Sum} end,</span><span class=\"bold_code bc-12\">0, [1,2,3,4,5]).</span>{[2,4,6,8,10],15}</pre></div> <p></p></div> <a name=\"mapfoldr-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-mapfoldr-3-id362622\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L506\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>mapfoldr(Fun, Acc0, List1) -&gt; {List2, Acc1}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((A, AccIn) -&gt; {B, AccOut})</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Acc0 = Acc1 = AccIn = AccOut = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [A]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [B]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">A = B = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Combines the operations of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#map-2\"><span class=\"code\">map/2</span></a></span> and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#foldr-3\"><span class=\"code\">foldr/3</span></a></span> into one pass.</p> <p></p></div> <a name=\"max-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-max-1-id362607\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L516\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>max(List) -&gt; Max</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [T, ...]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Max = T</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the first element of <span class=\"code\">List</span> that compares greater than or equal to all other elements of <span class=\"code\">List</span>.</p> <p></p></div> <a name=\"member-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-member-2-id362855\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L526\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>member(Elem, List) -&gt; boolean()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Elem = T</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if <span class=\"code\">Elem</span> matches some element of <span class=\"code\">List</span>, otherwise <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"merge-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-merge-1-id362856\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L535\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>merge(ListOfLists) -&gt; List1</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListOfLists = [List]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = List1 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the sorted list formed by merging all the sublists of <span class=\"code\">ListOfLists</span>. All sublists must be sorted before evaluating this function. When two elements compare equal, the element from the sublist with the lowest position in <span class=\"code\">ListOfLists</span> is picked before the other element.</p> <p></p></div> <a name=\"merge-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-merge-2-id363177\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L548\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>merge(List1, List2) -&gt; List3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [X]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [Y]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List3 = [X | Y]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">X = Y = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the sorted list formed by merging <span class=\"code\">List1</span> and <span class=\"code\">List2</span>. Both <span class=\"code\">List1</span> and <span class=\"code\">List2</span> must be sorted before evaluating this function. When two elements compare equal, the element from <span class=\"code\">List1</span> is picked before the element from <span class=\"code\">List2</span>.</p> <p></p></div> <a name=\"merge-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-merge-3-id362858\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L561\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>merge(Fun, List1, List2) -&gt; List3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((A, B) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [A]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [B]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List3 = [A | B]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">A = B = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the sorted list formed by merging <span class=\"code\">List1</span> and <span class=\"code\">List2</span>. Both <span class=\"code\">List1</span> and <span class=\"code\">List2</span> must be sorted according to the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#ordering_function\">ordering function</a></span> <span class=\"code\">Fun</span> before evaluating this function. <span class=\"code\">Fun(A, B)</span> is to return <span class=\"code\">true</span> if <span class=\"code\">A</span> compares less than or equal to <span class=\"code\">B</span> in the ordering, otherwise <span class=\"code\">false</span>. When two elements compare equal, the element from <span class=\"code\">List1</span> is picked before the element from <span class=\"code\">List2</span>.</p> <p></p></div> <a name=\"merge3-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-merge3-3-id363570\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L579\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>merge3(List1, List2, List3) -&gt; List4</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [X]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [Y]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List3 = [Z]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List4 = [X | Y | Z]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">X = Y = Z = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the sorted list formed by merging <span class=\"code\">List1</span>, <span class=\"code\">List2</span>, and <span class=\"code\">List3</span>. All of <span class=\"code\">List1</span>, <span class=\"code\">List2</span>, and <span class=\"code\">List3</span> must be sorted before evaluating this function. When two elements compare equal, the element from <span class=\"code\">List1</span>, if there is such an element, is picked before the other element, otherwise the element from <span class=\"code\">List2</span> is picked before the element from <span class=\"code\">List3</span>.</p> <p></p></div> <a name=\"min-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-min-1-id363617\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L595\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>min(List) -&gt; Min</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [T, ...]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Min = T</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the first element of <span class=\"code\">List</span> that compares less than or equal to all other elements of <span class=\"code\">List</span>.</p> <p></p></div> <a name=\"nth-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-nth-2-id363768\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L605\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>nth(N, List) -&gt; Elem</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 1</span></div><div class=\"REFBODY rb-1\">1..length(List)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [T, ...]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Elem = T</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"code\">N</span>th element of <span class=\"code\">List</span>.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:nth(3, [a, b, c, d, e]).</span>c</pre></div> <p></p></div> <a name=\"nthtail-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-nthtail-2-id363990\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L619\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>nthtail(N, List) -&gt; Tail</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 0</span></div><div class=\"REFBODY rb-1\">0..length(List)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [T, ...]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tail = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"code\">N</span>th tail of <span class=\"code\">List</span>, that is, the sublist of <span class=\"code\">List</span> starting at <span class=\"code\">N+1</span> and continuing up to the end of the list.</p> <p><strong>Example</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:nthtail(3, [a, b, c, d, e]).</span>[d,e]&gt; <span class=\"bold_code bc-12\">tl(tl(tl([a, b, c, d, e]))).</span>[d,e]&gt; <span class=\"bold_code bc-12\">lists:nthtail(0, [a, b, c, d, e]).</span>[a,b,c,d,e]&gt; <span class=\"bold_code bc-12\">lists:nthtail(5, [a, b, c, d, e]).</span>[]</pre></div> <p></p></div> <a name=\"partition-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-partition-2-id364112\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L640\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>partition(Pred, List) -&gt; {Satisfying, NotSatisfying}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Pred = fun((Elem :: T) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = Satisfying = NotSatisfying = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Partitions <span class=\"code\">List</span> into two lists, where the first list contains all elements for which <span class=\"code\">Pred(Elem)</span> returns <span class=\"code\">true</span>, and the second list contains all elements for which <span class=\"code\">Pred(Elem)</span> returns <span class=\"code\">false</span>.</p> <p><strong>Examples:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:partition(fun(A) -&gt; A rem 2 == 1 end, [1,2,3,4,5,6,7]).</span>{[1,3,5,7],[2,4,6]}&gt; <span class=\"bold_code bc-12\">lists:partition(fun(A) -&gt; is_atom(A) end, [a,b,1,c,d,2,3,4,e]).</span>{[a,b,c,d,e],[1,2,3,4]}</pre></div> <p>For a different way to partition a list, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#splitwith-2\"><span class=\"code\">splitwith/2</span></a></span>.</p> <p></p></div> <a name=\"prefix-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-prefix-2-id364311\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L660\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>prefix(List1, List2) -&gt; boolean()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if <span class=\"code\">List1</span> is a prefix of <span class=\"code\">List2</span>, otherwise <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"reverse-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-reverse-1-id364421\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L669\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>reverse(List1) -&gt; List2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list with the elements in <span class=\"code\">List1</span> in reverse order.</p> <p></p></div> <a name=\"reverse-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-reverse-2-id364308\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L678\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>reverse(List1, Tail) -&gt; List2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tail = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list with the elements in <span class=\"code\">List1</span> in reverse order, with tail <span class=\"code\">Tail</span> appended.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:reverse([1, 2, 3, 4], [a, b, c]).</span>[4,3,2,1,a,b,c]</pre></div> <p></p></div> <a name=\"search-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-search-2-id364429\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L691\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>search(Pred, List) -&gt; {value, Value} | false</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Pred = fun((T) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Value = T</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If there is a <span class=\"code\">Value</span> in <span class=\"code\">List</span> such that <span class=\"code\">Pred(Value)</span> returns <span class=\"code\">true</span>, returns <span class=\"code\">{value, Value}</span> for the first such <span class=\"code\">Value</span>, otherwise returns <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"seq-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-seq-2-id364773\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L703\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>seq(From, To) -&gt; Seq</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"seq-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-seq-3-id364802\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L703\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>seq(From, To, Incr) -&gt; Seq</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">From = To = Incr = integer()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Seq = [integer()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a sequence of integers that starts with <span class=\"code\">From</span> and contains the successive results of adding <span class=\"code\">Incr</span> to the previous element, until <span class=\"code\">To</span> is reached or passed (in the latter case, <span class=\"code\">To</span> is not an element of the sequence). <span class=\"code\">Incr</span> defaults to 1.</p> <p>Failures:</p> <ul> <li> <p>If <span class=\"code\">To &lt; From - Incr</span> and <span class=\"code\">Incr &gt; 0</span>.</p> </li> <li> <p>If <span class=\"code\">To &gt; From - Incr</span> and <span class=\"code\">Incr &lt; 0</span>.</p> </li> <li> <p>If <span class=\"code\">Incr =:= 0</span> and <span class=\"code\">From =/= To</span>.</p> </li> </ul> <p>The following equalities hold for all sequences:</p> <div class=\"example example-none\"><pre>length(lists:seq(From, To)) =:= To - From + 1length(lists:seq(From, To, Incr)) =:= (To - From + Incr) div Incr</pre></div> <p><strong>Examples:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:seq(1, 10).</span>[1,2,3,4,5,6,7,8,9,10]&gt; <span class=\"bold_code bc-12\">lists:seq(1, 20, 3).</span>[1,4,7,10,13,16,19]&gt; <span class=\"bold_code bc-12\">lists:seq(1, 0, 1).</span>[]&gt; <span class=\"bold_code bc-12\">lists:seq(10, 6, 4).</span>[]&gt; <span class=\"bold_code bc-12\">lists:seq(1, 1, 0).</span>[1]</pre></div> <p></p></div> <a name=\"sort-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sort-1-id365068\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L750\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sort(List1) -&gt; List2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list containing the sorted elements of <span class=\"code\">List1</span>.</p> <p></p></div> <a name=\"sort-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sort-2-id365058\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L759\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sort(Fun, List1) -&gt; List2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((A :: T, B :: T) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list containing the sorted elements of <span class=\"code\">List1</span>, according to the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#ordering_function\">ordering function</a></span> <span class=\"code\">Fun</span>. <span class=\"code\">Fun(A, B)</span> is to return <span class=\"code\">true</span> if <span class=\"code\">A</span> compares less than or equal to <span class=\"code\">B</span> in the ordering, otherwise <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"split-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-split-2-id365301\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L773\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>split(N, List1) -&gt; {List2, List3}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 0</span></div><div class=\"REFBODY rb-1\">0..length(List1)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = List3 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Splits <span class=\"code\">List1</span> into <span class=\"code\">List2</span> and <span class=\"code\">List3</span>. <span class=\"code\">List2</span> contains the first <span class=\"code\">N</span> elements and <span class=\"code\">List3</span> the remaining elements (the <span class=\"code\">N</span>th tail).</p> <p></p></div> <a name=\"splitwith-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-splitwith-2-id365449\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L785\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>splitwith(Pred, List) -&gt; {List1, List2}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Pred = fun((T) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Partitions <span class=\"code\">List</span> into two lists according to <span class=\"code\">Pred</span>. <span class=\"code\">splitwith/2</span> behaves as if it is defined as follows:</p> <div class=\"example example-none\"><pre>splitwith(Pred, List) -&gt; {takewhile(Pred, List), dropwhile(Pred, List)}.</pre></div> <p><strong>Examples:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:splitwith(fun(A) -&gt; A rem 2 == 1 end, [1,2,3,4,5,6,7]).</span>{[1],[2,3,4,5,6,7]}&gt; <span class=\"bold_code bc-12\">lists:splitwith(fun(A) -&gt; is_atom(A) end, [a,b,1,c,d,2,3,4,e]).</span>{[a,b],[1,c,d,2,3,4,e]}</pre></div> <p>For a different way to partition a list, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#partition-2\"><span class=\"code\">partition/2</span></a></span>.</p> <p></p></div> <a name=\"sublist-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sublist-2-id365615\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L806\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sublist(List1, Len) -&gt; List2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Len = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the sublist of <span class=\"code\">List1</span> starting at position 1 and with (maximum) <span class=\"code\">Len</span> elements. It is not an error for <span class=\"code\">Len</span> to exceed the length of the list, in that case the whole list is returned.</p> <p></p></div> <a name=\"sublist-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sublist-3-id365602\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L818\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sublist(List1, Start, Len) -&gt; List2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Start = integer() &gt;= 1</span></div><div class=\"REFBODY rb-1\">1..(length(List1)+1)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Len = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the sublist of <span class=\"code\">List1</span> starting at <span class=\"code\">Start</span> and with (maximum) <span class=\"code\">Len</span> elements. It is not an error for <span class=\"code\">Start+Len</span> to exceed the length of the list.</p> <p><strong>Examples:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:sublist([1,2,3,4], 2, 2).</span>[2,3]&gt; <span class=\"bold_code bc-12\">lists:sublist([1,2,3,4], 2, 5).</span>[2,3,4]&gt; <span class=\"bold_code bc-12\">lists:sublist([1,2,3,4], 5, 2).</span>[]</pre></div> <p></p></div> <a name=\"subtract-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-subtract-2-id365607\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L840\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>subtract(List1, List2) -&gt; List3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = List3 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a new list <span class=\"code\">List3</span> that is a copy of <span class=\"code\">List1</span>, subjected to the following procedure: for each element in <span class=\"code\">List2</span>, its first occurrence in <span class=\"code\">List1</span> is deleted.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:subtract(&quot;123212&quot;, &quot;212&quot;).</span>&quot;312&quot;.</pre></div> <p><span class=\"code\">lists:subtract(A, B)</span> is equivalent to <span class=\"code\">A -- B</span>.</p> <p></p></div> <a name=\"suffix-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-suffix-2-id366040\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L856\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>suffix(List1, List2) -&gt; boolean()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if <span class=\"code\">List1</span> is a suffix of <span class=\"code\">List2</span>, otherwise <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"sum-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sum-1-id366151\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L865\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sum(List) -&gt; number()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [number()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the sum of the elements in <span class=\"code\">List</span>.</p> <p></p></div> <a name=\"takewhile-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-takewhile-2-id366230\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L873\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>takewhile(Pred, List1) -&gt; List2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Pred = fun((Elem :: T) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Takes elements <span class=\"code\">Elem</span> from <span class=\"code\">List1</span> while <span class=\"code\">Pred(Elem)</span> returns <span class=\"code\">true</span>, that is, the function returns the longest prefix of the list for which all elements satisfy the predicate.</p> <p></p></div> <a name=\"ukeymerge-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-ukeymerge-3-id366281\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L886\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>ukeymerge(N, TupleList1, TupleList2) -&gt; TupleList3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 1</span></div><div class=\"REFBODY rb-1\">1..tuple_size(Tuple)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList1 = [T1]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList2 = [T2]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList3 = [T1 | T2]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T1 = T2 = Tuple</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuple = tuple()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the sorted list formed by merging <span class=\"code\">TupleList1</span> and <span class=\"code\">TupleList2</span>. The merge is performed on the <span class=\"code\">N</span>th element of each tuple. Both <span class=\"code\">TupleList1</span> and <span class=\"code\">TupleList2</span> must be key-sorted without duplicates before evaluating this function. When two tuples compare equal, the tuple from <span class=\"code\">TupleList1</span> is picked and the one from <span class=\"code\">TupleList2</span> is deleted.</p> <p></p></div> <a name=\"ukeysort-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-ukeysort-2-id366372\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L904\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>ukeysort(N, TupleList1) -&gt; TupleList2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 1</span></div><div class=\"REFBODY rb-1\">1..tuple_size(Tuple)</div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleList1 = TupleList2 = [Tuple]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuple = tuple()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list containing the sorted elements of list <span class=\"code\">TupleList1</span> where all except the first tuple of the tuples comparing equal have been deleted. Sorting is performed on the <span class=\"code\">N</span>th element of the tuples.</p> <p></p></div> <a name=\"umerge-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-umerge-1-id366377\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L916\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>umerge(ListOfLists) -&gt; List1</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListOfLists = [List]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = List1 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the sorted list formed by merging all the sublists of <span class=\"code\">ListOfLists</span>. All sublists must be sorted and contain no duplicates before evaluating this function. When two elements compare equal, the element from the sublist with the lowest position in <span class=\"code\">ListOfLists</span> is picked and the other is deleted.</p> <p></p></div> <a name=\"umerge-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-umerge-2-id366658\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L929\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>umerge(List1, List2) -&gt; List3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [X]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [Y]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List3 = [X | Y]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">X = Y = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the sorted list formed by merging <span class=\"code\">List1</span> and <span class=\"code\">List2</span>. Both <span class=\"code\">List1</span> and <span class=\"code\">List2</span> must be sorted and contain no duplicates before evaluating this function. When two elements compare equal, the element from <span class=\"code\">List1</span> is picked and the one from <span class=\"code\">List2</span> is deleted.</p> <p></p></div> <a name=\"umerge-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-umerge-3-id366787\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L943\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>umerge(Fun, List1, List2) -&gt; List3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((A, B) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [A]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [B]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List3 = [A | B]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">A = B = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the sorted list formed by merging <span class=\"code\">List1</span> and <span class=\"code\">List2</span>. Both <span class=\"code\">List1</span> and <span class=\"code\">List2</span> must be sorted according to the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#ordering_function\">ordering function</a></span> <span class=\"code\">Fun</span> and contain no duplicates before evaluating this function. <span class=\"code\">Fun(A, B)</span> is to return <span class=\"code\">true</span> if <span class=\"code\">A</span> compares less than or equal to <span class=\"code\">B</span> in the ordering, otherwise <span class=\"code\">false</span>. When two elements compare equal, the element from <span class=\"code\">List1</span> is picked and the one from <span class=\"code\">List2</span> is deleted.</p> <p></p></div> <a name=\"umerge3-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-umerge3-3-id367065\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L960\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>umerge3(List1, List2, List3) -&gt; List4</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [X]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [Y]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List3 = [Z]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List4 = [X | Y | Z]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">X = Y = Z = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the sorted list formed by merging <span class=\"code\">List1</span>, <span class=\"code\">List2</span>, and <span class=\"code\">List3</span>. All of <span class=\"code\">List1</span>, <span class=\"code\">List2</span>, and <span class=\"code\">List3</span> must be sorted and contain no duplicates before evaluating this function. When two elements compare equal, the element from <span class=\"code\">List1</span> is picked if there is such an element, otherwise the element from <span class=\"code\">List2</span> is picked, and the other is deleted.</p> <p></p></div> <a name=\"unzip-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-unzip-1-id367103\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L975\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>unzip(List1) -&gt; {List2, List3}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [{A, B}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [A]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List3 = [B]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">A = B = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>&quot;Unzips&quot; a list of two-tuples into two lists, where the first list contains the first element of each tuple, and the second list contains the second element of each tuple.</p> <p></p></div> <a name=\"unzip3-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-unzip3-1-id367255\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L985\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>unzip3(List1) -&gt; {List2, List3, List4}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [{A, B, C}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [A]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List3 = [B]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List4 = [C]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">A = B = C = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>&quot;Unzips&quot; a list of three-tuples into three lists, where the first list contains the first element of each tuple, the second list contains the second element of each tuple, and the third list contains the third element of each tuple.</p> <p></p></div> <a name=\"usort-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-usort-1-id367395\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L996\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>usort(List1) -&gt; List2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list containing the sorted elements of <span class=\"code\">List1</span> where all except the first element of the elements comparing equal have been deleted.</p> <p></p></div> <a name=\"usort-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-usort-2-id367042\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L1006\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>usort(Fun, List1) -&gt; List2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((T, T) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = List2 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">T = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list containing the sorted elements of <span class=\"code\">List1</span> where all except the first element of the elements comparing equal according to the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#ordering_function\">ordering function</a></span> <span class=\"code\">Fun</span> have been deleted. <span class=\"code\">Fun(A, B)</span> is to return <span class=\"code\">true</span> if <span class=\"code\">A</span> compares less than or equal to <span class=\"code\">B</span> in the ordering, otherwise <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"zip-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-zip-2-id367684\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L1021\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>zip(List1, List2) -&gt; List3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [A]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [B]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List3 = [{A, B}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">A = B = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>&quot;Zips&quot; two lists of equal length into one list of two-tuples, where the first element of each tuple is taken from the first list and the second element is taken from the corresponding element in the second list.</p> <p></p></div> <a name=\"zip3-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-zip3-3-id367723\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L1032\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>zip3(List1, List2, List3) -&gt; List4</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [A]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [B]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List3 = [C]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List4 = [{A, B, C}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">A = B = C = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>&quot;Zips&quot; three lists of equal length into one list of three-tuples, where the first element of each tuple is taken from the first list, the second element is taken from the corresponding element in the second list, and the third element is taken from the corresponding element in the third list.</p> <p></p></div> <a name=\"zipwith-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-zipwith-3-id367698\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L1044\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>zipwith(Combine, List1, List2) -&gt; List3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Combine = fun((X, Y) -&gt; T)</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [X]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [Y]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List3 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">X = Y = T = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Combines the elements of two lists of equal length into one list. For each pair <span class=\"code\">X, Y</span> of list elements from the two lists, the element in the result list is <span class=\"code\">Combine(X, Y)</span>.</p> <p><span class=\"code\">zipwith(fun(X, Y) -&gt; {X,Y} end, List1, List2)</span> is equivalent to <span class=\"code\">zip(List1, List2)</span>.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:zipwith(fun(X, Y) -&gt; X+Y end, [1,2,3], [4,5,6]).</span>[5,7,9]</pre></div> <p></p></div> <a name=\"zipwith3-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-zipwith3-4-id367841\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/lists.xml#L1061\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>zipwith3(Combine, List1, List2, List3) -&gt; List4</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Combine = fun((X, Y, Z) -&gt; T)</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List1 = [X]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List2 = [Y]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List3 = [Z]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List4 = [T]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">X = Y = Z = T = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Combines the elements of three lists of equal length into one list. For each triple <span class=\"code\">X, Y, Z</span> of list elements from the three lists, the element in the result list is <span class=\"code\">Combine(X, Y, Z)</span>.</p> <p><span class=\"code\">zipwith3(fun(X, Y, Z) -&gt; {X,Y,Z} end, List1, List2, List3)</span> is equivalent to <span class=\"code\">zip3(List1, List2, List3)</span>.</p> <p><strong>Examples:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">lists:zipwith3(fun(X, Y, Z) -&gt; X+Y+Z end, [1,2,3], [4,5,6], [7,8,9]).</span>[12,15,18]&gt; <span class=\"bold_code bc-12\">lists:zipwith3(fun(X, Y, Z) -&gt; [X,Y,Z] end, [a,b,c], [x,y,z], [1,2,3]).</span>[[a,x,1],[b,y,2],[c,z,3]]</pre></div> <p></p></div> ","name":"lists"}