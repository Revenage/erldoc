{"summary":"Defines mnesia_frag_hash callback behavior","description":"<p> </p><p>This module defines a callback behavior for user-defined hash functions of fragmented tables.</p> <p>Which module that is selected to implement the <span class=\"code\">mnesia_frag_hash</span> behavior for a particular fragmented table is specified together with the other <span class=\"code\">frag_properties</span>. The <span class=\"code\">hash_module</span> defines the module name. The <span class=\"code\">hash_state</span> defines the initial hash state.</p> <p>This module implements dynamic hashing, which is a kind of hashing that grows nicely when new fragments are added. It is well suited for scalable hash tables.</p> <p></p>","funcs":" <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-init_state-2-id94969\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/mnesia/doc/src/mnesia_frag_hash.xml#L52\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"init_state-2\" href=\"/erldoc/docs/#init_state-2\">init_state(Tab, State) -&gt; NewState | abort(Reason)</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Tab = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">State = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">NewState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Starts when a fragmented table is created with the function <span class=\"code\">mnesia:create_table/2</span> or when a normal (unfragmented) table is converted to be a fragmented table with <span class=\"code\">mnesia:change_table_frag/2</span>.</p> <p>Notice that the function <span class=\"code\">add_frag/2</span> is started one time for each of the other fragments (except number 1) as a part of the table creation procedure.</p> <p><span class=\"code\">State</span> is the initial value of the <span class=\"code\">hash_state</span> <span class=\"code\">frag_property</span>. <span class=\"code\">NewState</span> is stored as <span class=\"code\">hash_state</span> among the other <span class=\"code\">frag_properties</span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-add_frag-1-id95054\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/mnesia/doc/src/mnesia_frag_hash.xml#L74\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"add_frag-1\" href=\"/erldoc/docs/#add_frag-1\">add_frag(State) -&gt; {NewState, IterFrags, AdditionalLockFrags} | abort(Reason)</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">State = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">NewState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">IterFrags = [integer()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">AdditionalLockFrags = [integer()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>To scale well, it is a good idea to ensure that the records are evenly distributed over all fragments, including the new one.</p> <p><span class=\"code\">NewState</span> is stored as <span class=\"code\">hash_state</span> among the other <span class=\"code\">frag_properties</span>.</p> <p>As a part of the <span class=\"code\">add_frag</span> procedure, Mnesia iterates over all fragments corresponding to the <span class=\"code\">IterFrags</span> numbers and starts <span class=\"code\">key_to_frag_number(NewState,RecordKey)</span> for each record. If the new fragment differs from the old fragment, the record is moved to the new fragment.</p> <p>As the <span class=\"code\">add_frag</span> procedure is a part of a schema transaction, Mnesia acquires write locks on the affected tables. That is, both the fragments corresponding to <span class=\"code\">IterFrags</span> and those corresponding to <span class=\"code\">AdditionalLockFrags</span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-del_frag-1-id95149\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/mnesia/doc/src/mnesia_frag_hash.xml#L102\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"del_frag-1\" href=\"/erldoc/docs/#del_frag-1\">del_frag(State) -&gt; {NewState, IterFrags, AdditionalLockFrags} | abort(Reason)</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">State = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">NewState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">IterFrags = [integer()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">AdditionalLockFrags = [integer()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p><span class=\"code\">NewState</span> is stored as <span class=\"code\">hash_state</span> among the other <span class=\"code\">frag_properties</span>.</p> <p>As a part of the <span class=\"code\">del_frag</span> procedure, Mnesia iterates over all fragments corresponding to the <span class=\"code\">IterFrags</span> numbers and starts <span class=\"code\">key_to_frag_number(NewState,RecordKey)</span> for each record. If the new fragment differs from the old fragment, the record is moved to the new fragment.</p> <p>Notice that all records in the last fragment must be moved to another fragment, as the entire fragment is deleted.</p> <p>As the <span class=\"code\">del_frag</span> procedure is a part of a schema transaction, Mnesia acquires write locks on the affected tables. That is, both the fragments corresponding to <span class=\"code\">IterFrags</span> and those corresponding to <span class=\"code\">AdditionalLockFrags</span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-key_to_frag_number-2-id95244\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/mnesia/doc/src/mnesia_frag_hash.xml#L129\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"key_to_frag_number-2\" href=\"/erldoc/docs/#key_to_frag_number-2\">key_to_frag_number(State, Key) -&gt; FragNum | abort(Reason)</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">FragNum = integer()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Starts whenever Mnesia needs to determine which fragment a certain record belongs to. It is typically started at <span class=\"code\">read</span>, <span class=\"code\">write</span>, and <span class=\"code\">delete</span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-match_spec_to_frag_numbers-2-id95291\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/mnesia/doc/src/mnesia_frag_hash.xml#L142\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"match_spec_to_frag_numbers-2\" href=\"/erldoc/docs/#match_spec_to_frag_numbers-2\">match_spec_to_frag_numbers(State, MatchSpec) -&gt; FragNums | abort(Reason)</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">MatcSpec = ets_select_match_spec()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">FragNums = [FragNum]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">FragNum = integer()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>This function is called whenever Mnesia needs to determine which fragments that need to be searched for a <span class=\"code\">MatchSpec</span>. It is typically called by <span class=\"code\">select</span> and <span class=\"code\">match_object</span>.</p> <p></p></div> "}