{"summary":"Interface module to UDP transport protocol for Megaco/H.248.","description":"<p> </p><p>This module contains the public interface to the UDP/IP version transport protocol for Megaco/H.248.</p> <p></p>","funcs":" <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-start_transport-0-id87459\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_udp.xml#L42\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"start_transport-0\" href=\"/erldoc/docs/#start_transport-0\">start_transport() -&gt; {ok, TransportRef}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">TransportRef = pid()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>This function is used for starting the UDP/IP transport service. Use exit(TransportRef, Reason) to stop the transport service.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-open-2-id87490\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_udp.xml#L53\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"open-2\" href=\"/erldoc/docs/#open-2\">open(TransportRef, OptionList) -&gt; {ok, Handle, ControlPid} | {error, Reason}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">TransportRef = pid() | regname()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">OptionList = [option()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">option() = {port, integer()} |{options, list()} |{receive_handle, receive_handle()} |{module, atom()}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Handle = socket_handle()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">receive_handle() = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ControlPid = pid()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>This function is used to open an UDP/IP socket.</p> <p>The <span class=\"code\">module</span> option makes it possible for the user to provide their own callback module. The functions <span class=\"code\">receive_message/4</span> or <span class=\"code\">process_received_message/4</span> of this module is called when a new message is received (which one depends on the size of the message; small - receive_message, large - process_received_message). Default value is <strong>megaco</strong>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-close-2-id87564\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_udp.xml#L75\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"close-2\" href=\"/erldoc/docs/#close-2\">close(Handle, Msg) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Handle = socket_handle()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Msg</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>This function is used for closing an active UDP socket.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-socket-1-id87598\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_udp.xml#L86\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"socket-1\" href=\"/erldoc/docs/#socket-1\">socket(Handle) -&gt; Socket</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Handle = socket_handle()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Socket = inet_socket()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>This function is used to convert a socket_handle() to a inet_socket(). inet_socket() is a plain socket, see the inet module for more info.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-create_send_handle-3-id87633\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_udp.xml#L99\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"create_send_handle-3\" href=\"/erldoc/docs/#create_send_handle-3\">create_send_handle(Handle, Host, Port) -&gt; send_handle()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Handle = socket_handle()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Host = {A,B,C,D} | string()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Port = integer()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a send handle from a transport handle. The send handle is intended to be used by megaco_udp:send_message/2.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-send_message-2-id87672\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_udp.xml#L112\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"send_message-2\" href=\"/erldoc/docs/#send_message-2\">send_message(SendHandle, Msg) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SendHandle = send_handle()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Message = binary() | iolist()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Sends a message on a socket. The send handle is obtained by megaco_udp:create_send_handle/3. Increments the NumOutMessages and NumOutOctets counters if message successfully sent. In case of a failure to send, the NumErrors counter is <strong>not</strong> incremented. This is done elsewhere in the megaco app.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-block-1-id87712\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_udp.xml#L127\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"block-1\" href=\"/erldoc/docs/#block-1\">block(Handle) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Handle = socket_handle()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Stop receiving incoming messages on the socket.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-unblock-1-id87742\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_udp.xml#L137\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"unblock-1\" href=\"/erldoc/docs/#unblock-1\">unblock(Handle) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Handle = socket_handle()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Starting to receive incoming messages from the socket again.</p> <a name=\"upgrade_receive_handle\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-upgrade_receive_handle-2-id87776\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_udp.xml#L148\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"upgrade_receive_handle-2\" href=\"/erldoc/docs/#upgrade_receive_handle-2\">upgrade_receive_handle(ControlPid, NewHandle) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ControlPid = pid()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">NewHandle = receive_handle()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">receive_handle() = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Update the receive handle of the control process (e.g. after having changed protocol version).</p> <a name=\"stats\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_stats-0-id87820\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_udp.xml#L162\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"get_stats-0\" href=\"/erldoc/docs/#get_stats-0\">get_stats() -&gt; {ok, TotalStats} | {error, Reason}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_stats-1-id87826\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_udp.xml#L162\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"get_stats-1\" href=\"/erldoc/docs/#get_stats-1\">get_stats(SendHandle) -&gt; {ok, SendHandleStats} | {error, Reason}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_stats-2-id87832\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_udp.xml#L162\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"get_stats-2\" href=\"/erldoc/docs/#get_stats-2\">get_stats(SendHandle, Counter) -&gt; {ok, CounterStats} | {error, Reason}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">TotalStats = [total_stats()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">total_stats() = {send_handle(), [stats()]}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SendHandle = send_handle()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SendHandleStats = [stats()]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Counter = udp_stats_counter()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CounterStats = integer()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">stats() = {udp_stats_counter(), integer()}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">tcp_stats_counter() = medGwyGatewayNumInMessages | medGwyGatewayNumInOctets | medGwyGatewayNumOutMessages | medGwyGatewayNumOutOctets | medGwyGatewayNumErrors</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Retreive the UDP related (SNMP) statistics counters.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-reset_stats-0-id87895\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_udp.xml#L182\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"reset_stats-0\" href=\"/erldoc/docs/#reset_stats-0\">reset_stats() -&gt; void()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-reset_stats-1-id87901\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_udp.xml#L182\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"reset_stats-1\" href=\"/erldoc/docs/#reset_stats-1\">reset_stats(SendHandle) -&gt; void()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SendHandle = send_handle()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Reset all TCP related (SNMP) statistics counters.</p> <p></p></div> "}