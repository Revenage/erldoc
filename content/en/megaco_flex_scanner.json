{"summary":"Interface module to the flex scanner linked in driver.","description":"<p> </p><p>This module contains the public interface to the flex scanner linked in driver. The flex scanner performs the scanning phase of text message decoding.</p> <p>The flex scanner is written using a tool called <strong>flex</strong>. In order to be able to compile the flex scanner driver, this tool has to be available. </p> <p>By default the flex scanner reports line-number of an error. But it can be built without line-number reporting. Instead token number is used. This will speed up the scanning some 5-10%. Use <span class=\"code\">--disable-megaco-flex-scanner-lineno</span> when configuring the application.</p> <p>The scanner will, by default, be built as a reentrant scanner <strong>if</strong> the flex utility supports this (it depends on the version of flex). It is possible to explicitly disable this even when flex support this. Use <span class=\"code\">--disable-megaco-reentrant-flex-scanner</span> when configuring the application.</p> <p></p>","funcs":" <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-start-0-id90111\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_flex_scanner.xml#L74\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"start-0\" href=\"/erldoc/docs/#start-0\">start() -&gt; {ok, PortOrPorts} | {error, Reason}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">PortOrPorts = megaco_ports()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>This function is used to start the flex scanner. It locates the library and loads the linked in driver.</p> <p>On a single core system or if it&apos;s a non-reentrant scanner, a single port is created. On a multi-core system with a reentrant scanner, several ports will be created (one for each scheduler). </p> <p>Note that the process that calls this function <strong>must</strong> be permanent. If it dies, the port(s) will exit and the driver unload.</p> <a name=\"stop\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-stop-1-id90164\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_flex_scanner.xml#L96\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"stop-1\" href=\"/erldoc/docs/#stop-1\">stop(PortOrPorts) -&gt; stopped</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">PortOrPorts = megaco_ports()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>This function is used to stop the flex scanner. It also unloads the driver.</p> <a name=\"is_reentrant_enabled\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-is_reentrant_enabled-0-id90199\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_flex_scanner.xml#L110\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"is_reentrant_enabled-0\" href=\"/erldoc/docs/#is_reentrant_enabled-0\">is_reentrant_enabled() -&gt; Boolean</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Boolean = boolean()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Is the flex scanner reentrant or not.</p> <a name=\"is_scanner_port\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-is_scanner_port-2-id90233\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_flex_scanner.xml#L123\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"is_scanner_port-2\" href=\"/erldoc/docs/#is_scanner_port-2\">is_scanner_port(Port, PortOrPorts) -&gt; Boolean</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Port = port()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">PortOrPorts = megaco_ports()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Boolean = boolean()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Checks if a port is a flex scanner port or not (useful when if a port exits). </p> <a name=\"scan\"></a> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-scan-2-id90276\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/megaco/doc/src/megaco_flex_scanner.xml#L139\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"scan-2\" href=\"/erldoc/docs/#scan-2\">scan(Binary, PortOrPorts) -&gt; {ok, Tokens, Version, LatestLine} | {error, Reason, LatestLine} </a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Binary = binary()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">PortOrPorts = megaco_ports()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Tokens = list()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Version = megaco_version()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">LatestLine = integer()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Scans a megaco message and generates a token list to be passed on the parser. </p> <p></p></div> "}