{"summary":"An event handler that logs events to disk.","description":"<p> </p><p>This module is a <span class=\"code\">gen_event</span> handler module that can be installed in any <span class=\"code\">gen_event</span> process. It logs onto disk all events that are sent to an event manager. Each event is written as a binary, which makes the logging very fast. However, a tool such as the Report Browser (<span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/rb\"><span class=\"code\">rb(3)</span></a></span>) must be used to read the files. The events are written to multiple files. When all files have been used, the first one is reused and overwritten. The directory location, the number of files, and the size of each file are configurable. The directory will include one file called <span class=\"code\">index</span>, and report files <span class=\"code\">1, 2, ...</span>.</p> <p></p>","funcs":" <a name=\"init-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-init-3-id355557\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/log_mf_h.xml#L62\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>init(Dir, MaxBytes, MaxFiles) -&gt; Args</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"init-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-init-4-id348366\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/log_mf_h.xml#L62\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>init(Dir, MaxBytes, MaxFiles, Pred) -&gt; Args</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-filename\">file:filename()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">MaxBytes = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">MaxFiles = 1..255</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Pred = fun((Event :: term()) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Args = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-args\">args()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Initiates the event handler. Returns <span class=\"code\">Args</span>, which is to be used in a call to <span class=\"code\">gen_event:add_handler(EventMgr, log_mf_h, Args)</span>. </p> <p><span class=\"code\">Dir</span> specifies which directory to use for the log files. <span class=\"code\">MaxBytes</span> specifies the size of each individual file. <span class=\"code\">MaxFiles</span> specifies how many files are used. <span class=\"code\">Pred</span> is a predicate function used to filter the events. If no predicate function is specified, all events are logged.</p> <p></p></div> ","name":"log_mf_h"}