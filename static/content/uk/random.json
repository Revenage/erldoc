{
	"erlref": {
		"header": {
			"copyright": {
				"year": [
					"1996",
					"2016"
				],
				"holder": "Ericsson AB. All Rights Reserved."
			},
			"legalnotice": "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.",
			"title": "random",
			"prepared": "Joe Armstrong",
			"responsible": "Bjarne Dcker",
			"docno": "1",
			"approved": "Bjarne Dcker",
			"checked": {},
			"date": "1996-09-09",
			"rev": "A",
			"file": "random.xml"
		},
		"module": {
			"since": "",
			"$t": "random"
		},
		"modulesummary": "Pseudo-random number generation.",
		"description": {
			"p": [
				"This module provides a random number generator. The method is attributed to B.A. Wichmann and I.D. Hill in 'An efficient and portable pseudo-random number generator', Journal of Applied Statistics. AS183. 1982. Also Byte March 1987.",
				"The algorithm is a modification of the version attributed to Richard A. O'Keefe in the standard Prolog library.",
				{
					"c": "ran()"
				}
			],
			"note": [
				{
					"p": {
						"seealso": [
							{
								"marker": "crypto:crypto",
								"c": "crypto"
							},
							{
								"marker": "crypto:crypto",
								"c": "crypto:strong_rand_bytes/1"
							}
						]
					}
				},
				{
					"p": {
						"seealso": {
							"marker": "rand",
							"c": "rand"
						}
					}
				}
			]
		},
		"datatypes": {
			"datatype": {
				"name": {
					"name": "ran"
				},
				"desc": {
					"p": "The state."
				}
			}
		},
		"funcs": {
			"func": [
				{
					"name": {
						"name": "seed",
						"arity": "0",
						"since": ""
					},
					"fsummary": "Seed random number generation with default values.",
					"desc": {
						"p": "Seeds random number generation with default (fixed) values in the process dictionary and returns the old state."
					}
				},
				{
					"name": {
						"name": "seed",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Seed random number generator.",
					"desc": {
						"p": {
							"c": [
								{
									"anno": [
										"A1",
										"A2",
										"A3"
									]
								},
								{
									"anno": [
										"A1",
										"A2",
										"A3"
									]
								}
							]
						}
					}
				},
				{
					"name": {
						"name": "seed",
						"arity": "3",
						"since": ""
					},
					"fsummary": "Seed random number generator.",
					"desc": {
						"p": [
							"Seeds random number generation with integer values in the process dictionary and returns the old state.",
							"The following is an easy way of obtaining a unique value to seed with:",
							{
								"seealso": [
									{
										"marker": "erts:erlang#phash2/1",
										"c": "erlang:phash2/1"
									},
									{
										"marker": "erts:erlang#node/0",
										"c": "erlang:node/0"
									},
									{
										"marker": "erts:erlang#monotonic_time/0",
										"c": "erlang:monotonic_time/0"
									},
									{
										"marker": "erts:erlang#unique_integer/0",
										"c": "erlang:unique_integer/0"
									}
								]
							}
						],
						"code": {
							"type": "none",
							"$t": "random:seed(erlang:phash2([node()]), erlang:monotonic_time(), erlang:unique_integer())"
						}
					}
				},
				{
					"name": {
						"name": "seed0",
						"arity": "0",
						"since": ""
					},
					"fsummary": "Return default state for random number generation.",
					"desc": {
						"p": "Returns the default state."
					}
				},
				{
					"name": {
						"name": "uniform",
						"arity": "0",
						"since": ""
					},
					"fsummary": "Return a random float.",
					"desc": {
						"p": {
							"c": [
								"0.0",
								"1.0"
							]
						}
					}
				},
				{
					"name": {
						"name": "uniform",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Return a random integer.",
					"desc": {
						"p": {
							"c": [
								{
									"anno": "N"
								},
								"1",
								{
									"anno": "N"
								}
							]
						}
					}
				},
				{
					"name": {
						"name": "uniform_s",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Return a random float.",
					"desc": {
						"p": {
							"c": [
								"0.0",
								"1.0"
							]
						}
					}
				},
				{
					"name": {
						"name": "uniform_s",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Return a random integer.",
					"desc": {
						"p": {
							"c": [
								{
									"anno": "N"
								},
								"1",
								{
									"anno": "N"
								}
							]
						}
					}
				}
			]
		},
		"section": {
			"title": "Note",
			"p": [
				{
					"c": "random_seed"
				},
				{
					"seealso": [
						{
							"marker": "#uniform/0",
							"c": "uniform/0"
						},
						{
							"marker": "#uniform/1",
							"c": "uniform/1"
						},
						{
							"marker": "#seed/0",
							"c": "seed/0"
						}
					]
				},
				{
					"c": "{0,0,0}"
				}
			]
		}
	}
}