{"summary":"A callback interface on top of Common Test.","description":"<p> </p><p>The <strong>Common Test Hook (CTH)</strong> framework allows extensions of the default behavior of <span class=\"code\">Common Test</span> by callbacks before and after all test suite calls. It is intended for advanced users of <span class=\"code\">Common Test</span> who want to abstract out behavior that is common to multiple test suites. </p> <p>In brief, CTH allows you to:</p> <ul> <li><p>Manipulate the runtime configuration before each suite configuration call.</p></li> <li><p>Manipulate the return of all suite configuration calls and by extension the result of the test themselves.</p></li> </ul> <p>The following sections describe the mandatory and optional CTH functions that <span class=\"code\">Common Test</span> calls during test execution. For more details, see section <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/../apps/common_test/ct_hooks_chapter\">Common Test Hooks</a></span> in the User&apos;s Guide.</p> <p>For information about how to add a CTH to your suite, see section <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/ct_hooks_chapter#installing\">Installing a CTH</a></span> in the User&apos;s Guide.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p></p><p>For a minimal example of a CTH, see section <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/ct_hooks_chapter#example\">Example CTH</a></span> in the User&apos;s Guide.</p><p></p></div></div> <p></p>","funcs":" <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:init-2-id124025\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L77\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:init-2\" href=\"/erldoc/docs/#Module:init-2\">Module:init(Id, Opts) -&gt; {ok, State} | {ok, State, Priority}</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B02</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = reference() | term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Opts = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">State = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Priority = integer()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>MANDATORY</p> <p>This function is always called before any other callback function. Use it to initiate any common state. It is to return a state for this CTH.</p> <p><span class=\"code\">Id</span> is either the return value of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Module:id-1\"><span class=\"code\">ct_hooks:id/1</span></a></span>, or a <span class=\"code\">reference</span> (created using <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/erlang#make_ref-0\">erlang:make_ref/0</a></span> in ERTS) if <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Module:id-1\"><span class=\"code\">ct_hooks:id/1</span></a></span> is not implemented.</p> <p><span class=\"code\">Priority</span> is the relative priority of this hook. Hooks with a lower priority are executed first. If no priority is specified, it is set to <span class=\"code\">0</span>.</p> <p>For details about when <span class=\"code\">init</span> is called, see section <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/ct_hooks_chapter#scope\">CTH Scope</a></span> in the User&apos;s Guide.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:post_groups-2-id124128\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L111\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:post_groups-2\" href=\"/erldoc/docs/#Module:post_groups-2\">Module:post_groups(SuiteName, GroupDefs) -&gt; NewGroupDefs</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.3.8</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupDefs = NewGroupDefs = [Group]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Group = {GroupName,Properties,GroupsAndTestCases}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Properties = [parallel | sequence | Shuffle | {GroupRepeatType,N}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupsAndTestCases = [Group | {group,GroupName} | TestCase | {testcase,TestCase,TCRepeatProps}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">TestCase = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">TCRepeatProps = [{repeat,N} | {repeat_until_ok,N} | {repeat_until_fail,N}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shuffle = shuffle | {shuffle,Seed}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Seed = {integer(),integer(),integer()}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupRepeatType = repeat | repeat_until_all_ok | repeat_until_all_fail | repeat_until_any_ok | repeat_until_any_fail</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">N = integer() | forever</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called after <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:groups-0\"><span class=\"code\">groups/0</span></a></span>. It is used to modify the test group definitions, for instance to add or remove groups or change group properties.</p> <p><span class=\"code\">GroupDefs</span> is what <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:groups-0\"><span class=\"code\">groups/0</span></a></span> returned, that is, a list of group definitions.</p> <p><span class=\"code\">NewGroupDefs</span> is the possibly modified version of this list.</p> <p>This function is called only if the CTH is added before <span class=\"code\">init_per_suite</span> is run. For details, see section <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/ct_hooks_chapter#scope\">CTH Scope</a></span> in the User&apos;s Guide.</p> <p>Notice that for CTHs that are installed by means of the <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:suite-0\"><span class=\"code\">suite/0</span></a></span> function, <span class=\"code\">post_groups/2</span> is called before the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Module:init-2\"><span class=\"code\">init/2</span></a></span> hook function. However, for CTHs that are installed by means of the CT start flag, the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Module:init-2\"><span class=\"code\">init/2</span></a></span> function is called first.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>Prior to each test execution, Common Test does a simulated test run in order to count test suites, groups and cases for logging purposes. This causes the <span class=\"code\">post_groups/2</span> hook function to always be called twice. For this reason, side effects are best avoided in this callback.</p> <p></p></div></div> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:post_all-3-id124293\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L167\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:post_all-3\" href=\"/erldoc/docs/#Module:post_all-3\">Module:post_all(SuiteName, Return, GroupDefs) -&gt; NewReturn</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.3.8</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Return = NewReturn = Tests | {skip,Reason}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Tests = [TestCase | {testcase,TestCase,TCRepeatProps} | {group,GroupName} | {group,GroupName,Properties} | {group,GroupName,Properties,SubGroups}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">TestCase = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">TCRepeatProps = [{repeat,N} | {repeat_until_ok,N} | {repeat_until_fail,N}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Properties = GroupProperties | default</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SubGroups = [{GroupName,Properties} | {GroupName,Properties,SubGroups}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shuffle = shuffle | {shuffle,Seed}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Seed = {integer(),integer(),integer()}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupRepeatType = repeat | repeat_until_all_ok | repeat_until_all_fail | repeat_until_any_ok | repeat_until_any_fail</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">N = integer() | forever</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupDefs = NewGroupDefs = [Group]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Group = {GroupName,GroupProperties,GroupsAndTestCases}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupProperties = [parallel | sequence | Shuffle | {GroupRepeatType,N}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupsAndTestCases = [Group | {group,GroupName} | TestCase]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called after <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:all-0\"><span class=\"code\">all/0</span></a></span>. It is used to modify the set of test cases and test group to be executed, for instance to add or remove test cases and groups, change group properties, or even skip all tests in the suite.</p> <p><span class=\"code\">Return</span> is what <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:all-0\"><span class=\"code\">all/0</span></a></span> returned, that is, a list of test cases and groups to be executed, or a tuple <span class=\"code\">{skip,Reason}</span>.</p> <p><span class=\"code\">GroupDefs</span> is what <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:groups-0\"><span class=\"code\">groups/0</span></a></span> or the <span class=\"code\">post_groups/2</span> hook returned, that is, a list of group definitions.</p> <p><span class=\"code\">NewReturn</span> is the possibly modified version of <span class=\"code\">Return</span>.</p> <p>This function is called only if the CTH is added before <span class=\"code\">init_per_suite</span> is run. For details, see section <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/ct_hooks_chapter#scope\">CTH Scope</a></span> in the User&apos;s Guide.</p> <p>Notice that for CTHs that are installed by means of the <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:suite-0\"><span class=\"code\">suite/0</span></a></span> function, <span class=\"code\">post_all/2</span> is called before the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Module:init-2\"><span class=\"code\">init/2</span></a></span> hook function. However, for CTHs that are installed by means of the CT start flag, the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Module:init-2\"><span class=\"code\">init/2</span></a></span> function is called first.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>Prior to each test execution, Common Test does a simulated test run in order to count test suites, groups and cases for logging purposes. This causes the <span class=\"code\">post_all/3</span> hook function to always be called twice. For this reason, side effects are best avoided in this callback.</p> <p></p></div></div> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:pre_init_per_suite-3-id124505\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L236\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:pre_init_per_suite-3\" href=\"/erldoc/docs/#Module:pre_init_per_suite-3\">Module:pre_init_per_suite(SuiteName, InitData, CTHState) -&gt; Result</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B02</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">InitData = Config | SkipOrFail</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Config = NewConfig = [{Key,Value}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = NewCTHState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Result = {Return, NewCTHState}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Return = NewConfig | SkipOrFail</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SkipOrFail = {fail, Reason} | {skip, Reason}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Key = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called before <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_suite-1\"><span class=\"code\">init_per_suite</span></a></span> if it exists. It typically contains initialization/logging that must be done before <span class=\"code\">init_per_suite</span> is called. If <span class=\"code\">{skip,Reason}</span> or <span class=\"code\">{fail,Reason}</span> is returned, <span class=\"code\">init_per_suite</span> and all test cases of the suite are skipped and <span class=\"code\">Reason</span> printed in the overview log of the suite.</p> <p><span class=\"code\">SuiteName</span> is the name of the suite to be run.</p> <p><span class=\"code\">InitData</span> is the original configuration list of the test suite, or a <span class=\"code\">SkipOrFail</span> tuple if a previous CTH has returned this.</p> <p><span class=\"code\">CTHState</span> is the current internal state of the CTH.</p> <p><span class=\"code\">Return</span> is the result of the <span class=\"code\">init_per_suite</span> function. If it is <span class=\"code\">{skip,Reason}</span> or <span class=\"code\">{fail,Reason}</span>, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_suite-1\"><span class=\"code\">init_per_suite</span></a></span> is never called, instead the initiation is considered to be skipped or failed, respectively. If a <span class=\"code\">NewConfig</span> list is returned, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_suite-1\"><span class=\"code\">init_per_suite</span></a></span> is called with that <span class=\"code\">NewConfig</span> list. For more details, see section <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/ct_hooks_chapter#pre\">Pre Hooks</a></span> in the User&apos;s Guide.</p> <p>This function is called only if the CTH is added before <span class=\"code\">init_per_suite is run</span>. For details, see section <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/ct_hooks_chapter#scope\">CTH Scope</a></span> in the User&apos;s Guide.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:post_init_per_suite-4-id124687\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L288\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:post_init_per_suite-4\" href=\"/erldoc/docs/#Module:post_init_per_suite-4\">Module:post_init_per_suite(SuiteName, Config, Return, CTHState) -&gt; Result</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B02</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Config = [{Key,Value}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Return = NewReturn = Config | SkipOrFail | term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SkipOrFail = {fail, Reason} | {skip, Reason} | term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = NewCTHState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Result = {NewReturn, NewCTHState}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Key = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called after <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_suite-1\"><span class=\"code\">init_per_suite</span></a></span> if it exists. It typically contains extra checks to ensure that all the correct dependencies are started correctly.</p> <p><span class=\"code\">Return</span> is what <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_suite-1\"><span class=\"code\">init_per_suite</span></a></span> returned, that is, <span class=\"code\">{fail,Reason}</span>, <span class=\"code\">{skip,Reason}</span>, a <span class=\"code\">Config</span> list, or a term describing how <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_suite-1\"><span class=\"code\">init_per_suite</span></a></span> failed.</p> <p><span class=\"code\">NewReturn</span> is the possibly modified return value of <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_suite-1\"><span class=\"code\">init_per_suite</span></a></span>. To recover from a failure in <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_suite-1\"><span class=\"code\">init_per_suite</span></a></span>, return <span class=\"code\">ConfigList</span> with the <span class=\"code\">tc_status</span> element removed. For more details, see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/ct_hooks_chapter#post\">Post Hooks</a></span> in section &quot;Manipulating Tests&quot; in the User&apos;s Guide.</p> <p><span class=\"code\">CTHState</span> is the current internal state of the CTH.</p> <p>This function is called only if the CTH is added before or in <span class=\"code\">init_per_suite</span>. For details, see section <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/ct_hooks_chapter#scope\">CTH Scope</a></span> in the User&apos;s Guide.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:pre_init_per_group-4-id124849\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L335\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:pre_init_per_group-4\" href=\"/erldoc/docs/#Module:pre_init_per_group-4\">Module:pre_init_per_group(SuiteName, GroupName, InitData, CTHState) -&gt; Result</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.3</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">InitData = Config | SkipOrFail</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Config = NewConfig = [{Key,Value}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = NewCTHState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Result = {NewConfig | SkipOrFail, NewCTHState}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SkipOrFail = {fail,Reason} | {skip, Reason}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Key = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called before <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_group-2\"><span class=\"code\">init_per_group</span></a></span> if it exists. It behaves the same way as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct_hooks#Module:pre_init_per_suite-3\"><span class=\"code\">pre_init_per_suite</span></a></span>, but for function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_group-2\"><span class=\"code\">init_per_group</span></a></span> instead.</p> <p>If <span class=\"code\">Module:pre_init_per_group/4</span> is not exported, common_test will attempt to call <span class=\"code\">Module:pre_init_per_group(GroupName, InitData, CTHState)</span> instead. This is for backwards compatibility.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:post_init_per_group-5-id124954\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L368\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:post_init_per_group-5\" href=\"/erldoc/docs/#Module:post_init_per_group-5\">Module:post_init_per_group(SuiteName, GroupName, Config, Return, CTHState) -&gt; Result</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.3</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Config = [{Key,Value}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Return = NewReturn = Config | SkipOrFail | term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SkipOrFail = {fail,Reason} | {skip, Reason}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = NewCTHState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Result = {NewReturn, NewCTHState}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Key = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called after <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_group-2\"><span class=\"code\">init_per_group</span></a></span> if it exists. It behaves the same way as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct_hooks#Module:post_init_per_suite-4\"><span class=\"code\">post_init_per_suite</span></a></span>, but for function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_group-2\"><span class=\"code\">init_per_group</span></a></span> instead.</p> <p>If <span class=\"code\">Module:post_init_per_group/5</span> is not exported, common_test will attempt to call <span class=\"code\">Module:post_init_per_group(GroupName, Config, Return, CTHState)</span> instead. This is for backwards compatibility.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:pre_init_per_testcase-4-id125058\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L401\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:pre_init_per_testcase-4\" href=\"/erldoc/docs/#Module:pre_init_per_testcase-4\">Module:pre_init_per_testcase(SuiteName, TestcaseName, InitData, CTHState) -&gt; Result</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.3</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">TestcaseName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">InitData = Config | SkipOrFail</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Config = NewConfig = [{Key,Value}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = NewCTHState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Result = {NewConfig | SkipOrFail, NewCTHState}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SkipOrFail = {fail,Reason} | {skip, Reason}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Key = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called before <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_testcase-2\"><span class=\"code\">init_per_testcase</span></a></span> if it exists. It behaves the same way as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct_hooks#Module:pre_init_per_suite-3\"><span class=\"code\">pre_init_per_suite</span></a></span>, but for function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_testcase-2\"><span class=\"code\">init_per_testcase</span></a></span> instead.</p> <p>If <span class=\"code\">Module:pre_init_per_testcase/4</span> is not exported, common_test will attempt to call <span class=\"code\">Module:pre_init_per_testcase(TestcaseName, InitData, CTHState)</span> instead. This is for backwards compatibility.</p> <p>CTHs cannot be added here right now. That feature may be added in a later release, but it would right now break backwards compatibility.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:post_init_per_testcase-5-id125168\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L438\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:post_init_per_testcase-5\" href=\"/erldoc/docs/#Module:post_init_per_testcase-5\">Module:post_init_per_testcase(SuiteName, TestcaseName, Config, Return, CTHState) -&gt; Result</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.3</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">TestcaseName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Config = [{Key,Value}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Return = NewReturn = Config | SkipOrFail | term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SkipOrFail = {fail,Reason} | {skip, Reason}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = NewCTHState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Result = {NewReturn, NewCTHState}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Key = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called after <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_testcase-2\"><span class=\"code\">init_per_testcase</span></a></span> if it exists. It behaves the same way as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct_hooks#Module:post_init_per_suite-4\"><span class=\"code\">post_init_per_suite</span></a></span>, but for function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:init_per_testcase-2\"><span class=\"code\">init_per_testcase</span></a></span> instead.</p> <p>If <span class=\"code\">Module:post_init_per_testcase/5</span> is not exported, common_test will attempt to call <span class=\"code\">Module:post_init_per_testcase(TestcaseName, Config, Return, CTHState)</span> instead. This is for backwards compatibility.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:pre_end_per_testcase-4-id125272\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L471\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:pre_end_per_testcase-4\" href=\"/erldoc/docs/#Module:pre_end_per_testcase-4\">Module:pre_end_per_testcase(SuiteName, TestcaseName, EndData, CTHState) -&gt; Result</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.3</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">TestcaseName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">EndData = Config</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Config = NewConfig = [{Key,Value}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = NewCTHState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Result = {NewConfig, NewCTHState}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Key = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called before <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:end_per_testcase-2\"><span class=\"code\">end_per_testcase</span></a></span> if it exists. It behaves the same way as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct_hooks#Module:pre_end_per_suite-3\"><span class=\"code\">pre_end_per_suite</span></a></span>, but for function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:end_per_testcase-2\"><span class=\"code\">end_per_testcase</span></a></span> instead.</p> <p>This function cannot change the result of the test case by returning skip or fail tuples, but it may insert items in <span class=\"code\">Config</span> that can be read in <span class=\"code\">end_per_testcase/2</span> or in <span class=\"code\">post_end_per_testcase/5</span>.</p> <p>If <span class=\"code\">Module:pre_end_per_testcase/4</span> is not exported, common_test will attempt to call <span class=\"code\">Module:pre_end_per_testcase(TestcaseName, EndData, CTHState)</span> instead. This is for backwards compatibility.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:post_end_per_testcase-5-id125388\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L507\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:post_end_per_testcase-5\" href=\"/erldoc/docs/#Module:post_end_per_testcase-5\">Module:post_end_per_testcase(SuiteName, TestcaseName, Config, Return, CTHState) -&gt; Result</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.3</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">TestcaseName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Config = [{Key,Value}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Return = NewReturn = Config | SkipOrFail | term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SkipOrFail = {fail,Reason} | {skip, Reason}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = NewCTHState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Result = {NewReturn, NewCTHState}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Key = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called after <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:end_per_testcase-2\"><span class=\"code\">end_per_testcase</span></a></span> if it exists. It behaves the same way as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct_hooks#Module:post_end_per_suite-4\"><span class=\"code\">post_end_per_suite</span></a></span>, but for function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:end_per_testcase-2\"><span class=\"code\">end_per_testcase</span></a></span> instead.</p> <p>If <span class=\"code\">Module:post_end_per_testcase/5</span> is not exported, common_test will attempt to call <span class=\"code\">Module:post_end_per_testcase(TestcaseName, Config, Return, CTHState)</span> instead. This is for backwards compatibility.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:pre_end_per_group-4-id125493\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L540\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:pre_end_per_group-4\" href=\"/erldoc/docs/#Module:pre_end_per_group-4\">Module:pre_end_per_group(SuiteName, GroupName, EndData, CTHState) -&gt; Result</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.3</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">EndData = Config | SkipOrFail</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Config = NewConfig = [{Key,Value}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = NewCTHState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Result = {NewConfig | SkipOrFail, NewCTHState}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SkipOrFail = {fail,Reason} | {skip, Reason}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Key = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called before <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:end_per_group-2\"><span class=\"code\">end_per_group</span></a></span> if it exists. It behaves the same way as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct_hooks#Module:pre_init_per_suite-3\"><span class=\"code\">pre_init_per_suite</span></a></span>, but for function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:end_per_group-2\"><span class=\"code\">end_per_group</span></a></span> instead.</p> <p>If <span class=\"code\">Module:pre_end_per_group/4</span> is not exported, common_test will attempt to call <span class=\"code\">Module:pre_end_per_group(GroupName, EndData, CTHState)</span> instead. This is for backwards compatibility.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:post_end_per_group-5-id125597\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L573\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:post_end_per_group-5\" href=\"/erldoc/docs/#Module:post_end_per_group-5\">Module:post_end_per_group(SuiteName, GroupName, Config, Return, CTHState) -&gt; Result</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.3</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Config = [{Key,Value}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Return = NewReturn = Config | SkipOrFail | term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SkipOrFail = {fail,Reason} | {skip, Reason}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = NewCTHState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Result = {NewReturn, NewCTHState}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Key = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called after <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:end_per_group-2\"><span class=\"code\">end_per_group</span></a></span> if it exists. It behaves the same way as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct_hooks#Module:post_init_per_suite-4\"><span class=\"code\">post_init_per_suite</span></a></span>, but for function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:end_per_group-2\">end_per_group</a></span> instead.</p> <p>If <span class=\"code\">Module:post_end_per_group/5</span> is not exported, common_test will attempt to call <span class=\"code\">Module:post_end_per_group(GroupName, Config, Return, CTHState)</span> instead. This is for backwards compatibility.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:pre_end_per_suite-3-id125701\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L606\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:pre_end_per_suite-3\" href=\"/erldoc/docs/#Module:pre_end_per_suite-3\">Module:pre_end_per_suite(SuiteName, EndData, CTHState) -&gt; Result</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B02</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">EndData = Config | SkipOrFail</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Config = NewConfig = [{Key,Value}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = NewCTHState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Result = {NewConfig | SkipOrFail, NewCTHState}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SkipOrFail = {fail,Reason} | {skip, Reason}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Key = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called before <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:end_per_suite-1\"><span class=\"code\">end_per_suite</span></a></span> if it exists. It behaves the same way as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct_hooks#Module:pre_init_per_suite-3\"><span class=\"code\">pre_init_per_suite</span></a></span>, but for function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:end_per_suite-1\"><span class=\"code\">end_per_suite</span></a></span> instead.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:post_end_per_suite-4-id125789\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L633\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:post_end_per_suite-4\" href=\"/erldoc/docs/#Module:post_end_per_suite-4\">Module:post_end_per_suite(SuiteName, Config, Return, CTHState) -&gt; Result</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B02</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Config = [{Key,Value}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Return = NewReturn = Config | SkipOrFail | term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SkipOrFail = {fail,Reason} | {skip, Reason}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = NewCTHState = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Result = {NewReturn, NewCTHState}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Key = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called after <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:end_per_suite-1\"><span class=\"code\">end_per_suite</span></a></span> if it exists. It behaves the same way as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct_hooks#Module:post_init_per_suite-4\"><span class=\"code\">post_init_per_suite</span></a></span>, but for function <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/common_test#Module:end_per_suite-1\"><span class=\"code\">end_per_suite</span></a></span> instead.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:on_tc_fail-4-id125878\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L660\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:on_tc_fail-4\" href=\"/erldoc/docs/#Module:on_tc_fail-4\">Module:on_tc_fail(SuiteName, TestName, Reason, CTHState) -&gt; NewCTHState</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.3</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">TestName = init_per_suite | end_per_suite | {init_per_group,GroupName} | {end_per_group,GroupName} | {FuncName,GroupName} | FuncName</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">FuncName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = NewCTHState = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called whenever a test case (or configuration function) fails. It is called after the post function is called for the failed test case, that is:</p> <ul> <li><p>If <span class=\"code\">init_per_suite</span> fails, this function is called after <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Module:post_init_per_suite-4\"><span class=\"code\">post_init_per_suite</span></a></span>.</p></li> <li><p>If a test case fails, this funcion is called after <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Module:post_end_per_testcase-5\"><span class=\"code\">post_end_per_testcase</span></a></span>.</p></li> </ul> <p>If the failed test case belongs to a test case group, the first argument is a tuple <span class=\"code\">{FuncName,GroupName}</span>, otherwise only the function name.</p> <p>The data that comes with <span class=\"code\">Reason</span> follows the same format as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/event_handler_chapter#failreason\"><span class=\"code\">FailReason</span></a></span> in event <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/event_handler_chapter#tc_done\"><span class=\"code\">tc_done</span></a></span>. For details, see section <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/event_handler_chapter#events\">Event Handling</a></span> in the User&apos;s Guide.</p> <p>If <span class=\"code\">Module:on_tc_fail/4</span> is not exported, common_test will attempt to call <span class=\"code\">Module:on_tc_fail(TestName, Reason, CTHState)</span> instead. This is for backwards compatibility.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:on_tc_skip-4-id126017\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L704\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:on_tc_skip-4\" href=\"/erldoc/docs/#Module:on_tc_skip-4\">Module:on_tc_skip(SuiteName, TestName, Reason, CTHState) -&gt; NewCTHState</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.3</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SuiteName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">TestName = init_per_suite | end_per_suite | {init_per_group,GroupName} | {end_per_group,GroupName} | {FuncName,GroupName} | FuncName</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">FuncName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">GroupName = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = {tc_auto_skip | tc_user_skip, term()}</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = NewCTHState = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called whenever a test case (or configuration function) is skipped. It is called after the post function is called for the skipped test case, that is:</p> <ul> <li><p>If <span class=\"code\">init_per_group</span> is skipped, this function is called after <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Module:post_init_per_group-5\"><span class=\"code\">post_init_per_group</span></a></span>.</p></li> <li><p>If a test case is skipped, this function is called after <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Module:post_end_per_testcase-5\"><span class=\"code\">post_end_per_testcase</span></a></span>.</p></li> </ul> <p>If the skipped test case belongs to a test case group, the first argument is a tuple <span class=\"code\">{FuncName,GroupName}</span>, otherwise only the function name.</p> <p>The data that comes with <span class=\"code\">Reason</span> follows the same format as events <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/event_handler_chapter#tc_auto_skip\"><span class=\"code\">tc_auto_skip</span></a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/event_handler_chapter#tc_user_skip\"><span class=\"code\">tc_user_skip</span></a></span> For details, see section <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/event_handler_chapter#events\">Event Handling</a></span> in the User&apos;s Guide.</p> <p>If <span class=\"code\">Module:on_tc_skip/4</span> is not exported, common_test will attempt to call <span class=\"code\">Module:on_tc_skip(TestName, Reason, CTHState)</span> instead. This is for backwards compatibility.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:terminate-1-id126158\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L750\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:terminate-1\" href=\"/erldoc/docs/#Module:terminate-1\">Module:terminate(CTHState)</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B02</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CTHState = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>This function is called at the end of a CTH <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/ct_hooks_chapter#scope\">scope</a></span>.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-Module:id-1-id126199\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_hooks.xml#L764\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"Module:id-1\" href=\"/erldoc/docs/#Module:id-1\">Module:id(Opts) -&gt; Id</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B02</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Opts = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>OPTIONAL</p> <p>The <span class=\"code\">Id</span> identifies a CTH instance uniquely. If two CTHs return the same <span class=\"code\">Id</span>, the second CTH is ignored and subsequent calls to the CTH are only made to the first instance. For details, see section <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/common_test/ct_hooks_chapter#installing\">Installing a CTH</a></span> in the User&apos;s Guide.</p> <p>This function is <strong>not</strong> to have any side effects, as it can be called multiple times by <span class=\"code\">Common Test</span>.</p> <p>If not implemented, the CTH acts as if this function returned a call to <span class=\"code\">make_ref/0</span>.</p> <p></p></div> ","name":"ct_hooks"}