{"summary":"Operating system-specific functions.","description":"<p> </p><p>The functions in this module are operating system-specific. Careless use of these functions results in programs that will only run on a specific platform. On the other hand, with careful use, these functions can be of help in enabling a program to run on most platforms.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p> File operations used to accept filenames containing null characters (integer value zero). This caused the name to be truncated and in some cases arguments to primitive operations to be mixed up. Filenames containing null characters inside the filename are now <strong>rejected</strong> and will cause primitive file operations to fail. </p> <p> Also environment variable operations used to accept names and values of environment variables containing null characters (integer value zero). This caused operations to silently produce erroneous results. Environment variable names and values containing null characters inside the name or value are now <strong>rejected</strong> and will cause environment variable operations to fail. </p> <p></p></div></div> <p></p>","funcs":" <a name=\"cmd-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-cmd-1-id216324\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L136\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>cmd(Command) -&gt; string()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"cmd-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-cmd-2-id217989\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L136\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>cmd(Command, Options) -&gt; string()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.2.3</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Command = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-os_command\">os_command()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-os_command_opts\">os_command_opts()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Executes <span class=\"code\">Command</span> in a command shell of the target OS, captures the standard output of the command, and returns this result as a string.</p> <div class=\"warning\"><div class=\"label\">Warning</div><div class=\"content\"><p></p><p>Previous implementation used to allow all characters as long as they were integer values greater than or equal to zero. This sometimes lead to unwanted results since null characters (integer value zero) often are interpreted as string termination. The current implementation rejects these.</p><p></p></div></div> <p><strong>Examples:</strong></p> <div class=\"example example-none\"><pre>LsOut = os:cmd(&quot;ls&quot;), % on unix platformDirOut = os:cmd(&quot;dir&quot;), % on Win32 platform</pre></div> <p>Notice that in some cases, standard output of a command when called from another program (for example, <span class=\"code\">os:cmd/1</span>) can differ, compared with the standard output of the command when called directly from an OS command shell.</p> <p><span class=\"code\">os:cmd/2</span> was added in kernel-5.5 (OTP-20.2.1). It makes it possible to pass an options map as the second argument in order to control the behaviour of <span class=\"code\">os:cmd</span>. The possible options are: </p> <dl> <dt><strong><span class=\"code\">max_size</span></strong></dt> <dd> <p>The maximum size of the data returned by the <span class=\"code\">os:cmd</span> call. This option is a safety feature that should be used when the command executed can return a very large, possibly infinite, result.</p> <div class=\"example example-none\"><pre>&gt; os:cmd(&quot;cat /dev/zero&quot;, #{ max_size =&gt; 20 }).[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]</pre></div> </dd> </dl> <p></p></div> <a name=\"find_executable-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-find_executable-1-id218225\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L175\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>find_executable(Name) -&gt; Filename | false</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"find_executable-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-find_executable-2-id218255\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L175\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>find_executable(Name, Path) -&gt; Filename | false</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Name = Path = Filename = string()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>These two functions look up an executable program, with the specified name and a search path, in the same way as the underlying OS. <span class=\"code\">find_executable/1</span> uses the current execution path (that is, the environment variable <span class=\"code\">PATH</span> on Unix and Windows).</p> <p><span class=\"code\">Path</span>, if specified, is to conform to the syntax of execution paths on the OS. Returns the absolute filename of the executable program <span class=\"code\">Name</span>, or <span class=\"code\">false</span> if the program is not found.</p> <p></p></div> <a name=\"getenv-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-getenv-0-id218399\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L192\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>getenv() -&gt; [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-env_var_name_value\">env_var_name_value()</a></span>]</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list of all environment variables. Each environment variable is expressed as a single string on the format <span class=\"code\">&quot;VarName=Value&quot;</span>, where <span class=\"code\">VarName</span> is the name of the variable and <span class=\"code\">Value</span> its value.</p> <p>If Unicode filename encoding is in effect (see the <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/erl#file_name_encoding\"><span class=\"code\">erl</span>manual page</a></span>), the strings can contain characters with codepoints &gt; 255.</p> <p></p></div> <a name=\"getenv-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-getenv-1-id218494\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L207\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>getenv(VarName) -&gt; Value | false</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">VarName = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-env_var_name\">env_var_name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Value = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-env_var_value\">env_var_value()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"code\">Value</span> of the environment variable <span class=\"code\">VarName</span>, or <span class=\"code\">false</span> if the environment variable is undefined.</p> <p>If Unicode filename encoding is in effect (see the <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/erl#file_name_encoding\"><span class=\"code\">erl</span>manual page</a></span>), the strings <span class=\"code\">VarName</span> and <span class=\"code\">Value</span> can contain characters with codepoints &gt; 255.</p> <p></p></div> <a name=\"getenv-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-getenv-2-id218504\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L222\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>getenv(VarName, DefaultValue) -&gt; Value</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 18.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">VarName = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-env_var_name\">env_var_name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DefaultValue = Value = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-env_var_value\">env_var_value()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"code\">Value</span> of the environment variable <span class=\"code\">VarName</span>, or <span class=\"code\">DefaultValue</span> if the environment variable is undefined.</p> <p>If Unicode filename encoding is in effect (see the <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/erl#file_name_encoding\"><span class=\"code\">erl</span>manual page</a></span>), the strings <span class=\"code\">VarName</span> and <span class=\"code\">Value</span> can contain characters with codepoints &gt; 255.</p> <p></p></div> <a name=\"getpid-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-getpid-0-id218502\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L237\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>getpid() -&gt; Value</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Value = string()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the process identifier of the current Erlang emulator in the format most commonly used by the OS environment. Returns <span class=\"code\">Value</span> as a string containing the (usually) numerical identifier for a process. On Unix, this is typically the return value of the <span class=\"code\">getpid()</span> system call. On Windows, the process id as returned by the <span class=\"code\">GetCurrentProcessId()</span> system call is used.</p> <p></p></div> <a name=\"putenv-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-putenv-2-id218888\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L253\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>putenv(VarName, Value) -&gt; true</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">VarName = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-env_var_name\">env_var_name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Value = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-env_var_value\">env_var_value()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sets a new <span class=\"code\">Value</span> for environment variable <span class=\"code\">VarName</span>.</p> <p>If Unicode filename encoding is in effect (see the <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/erl#file_name_encoding\"><span class=\"code\">erl</span>manual page</a></span>), the strings <span class=\"code\">VarName</span> and <span class=\"code\">Value</span> can contain characters with codepoints &gt; 255.</p> <p>On Unix platforms, the environment is set using UTF-8 encoding if Unicode filename translation is in effect. On Windows, the environment is set using wide character interfaces.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p> <span class=\"code\">VarName</span> is not allowed to contain an <span class=\"code\">$=</span> character. Previous implementations used to just let the <span class=\"code\">$=</span> character through which silently caused erroneous results. Current implementation will instead throw a <span class=\"code\">badarg</span> exception. </p> <p></p></div></div> <p></p></div> <a name=\"set_signal-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-set_signal-2-id219077\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L279\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>set_signal(Signal, Option) -&gt; ok</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Signal = <br>&#xA0;&#xA0;&#xA0;&#xA0;sighup | sigquit | sigabrt | sigalrm | sigterm | sigusr1 |<br>&#xA0;&#xA0;&#xA0;&#xA0;sigusr2 | sigchld | sigstop | sigtstp</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Option = default | handle | ignore</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Enables or disables OS signals.</p> <p>Each signal my be set to one of the following options:</p> <dl> <dt><strong><span class=\"code\">ignore</span></strong></dt> <dd> This signal will be ignored. </dd> <dt><strong><span class=\"code\">default</span></strong></dt> <dd> This signal will use the default signal handler for the operating system. </dd> <dt><strong><span class=\"code\">handle</span></strong></dt> <dd> This signal will notify <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/kernel_app#erl_signal_server\"><span class=\"code\">erl_signal_server</span></a></span> when it is received by the Erlang runtime system. </dd> </dl> <p></p></div> <a name=\"system_time-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-system_time-0-id219220\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L306\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>system_time() -&gt; integer()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 18.0</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>Returns the current <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/erts/time_correction#OS_System_Time\">OS system time</a></span> in <span class=\"code\">native</span> <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/erlang#type_time_unit\">time unit</a></span>.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p></p><p>This time is <strong>not</strong> a monotonically increasing time.</p> <p></p></div></div> <p></p></div> <a name=\"system_time-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-system_time-1-id219324\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L319\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>system_time(Unit) -&gt; integer()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 18.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Unit = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/erlang#type-time_unit\">erlang:time_unit()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the current <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/erts/time_correction#OS_System_Time\">OS system time</a></span> converted into the <span class=\"code\">Unit</span> passed as argument.</p> <p>Calling <span class=\"code\">os:system_time(Unit)</span> is equivalent to <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/erlang#convert_time_unit-3\"><span class=\"code\">erlang:convert_time_unit</span></a></span>(<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#system_time-0\"><span class=\"code\">os:system_time()</span></a></span><span class=\"code\">, native, Unit)</span>.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p></p><p>This time is <strong>not</strong> a monotonically increasing time.</p> <p></p></div></div> <p></p></div> <a name=\"timestamp-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-timestamp-0-id219494\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L334\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>timestamp() -&gt; Timestamp</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timestamp = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/erlang#type-timestamp\">erlang:timestamp()</a></span></span></div><div class=\"REFBODY rb-1\">Timestamp = {MegaSecs, Secs, MicroSecs}</div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the current <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/erts/time_correction#OS_System_Time\">OS system time</a></span> in the same format as <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/erlang#timestamp-0\"><span class=\"code\">erlang:timestamp/0</span></a></span>. The tuple can be used together with function <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/calendar#now_to_universal_time-1\"><span class=\"code\">calendar:now_to_universal_time/1</span></a></span> or <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/calendar#now_to_local_time-1\"><span class=\"code\">calendar:now_to_local_time/1</span></a></span> to get calendar time. Using the calendar time, together with the <span class=\"code\">MicroSecs</span> part of the return tuple from this function, allows you to log time stamps in high resolution and consistent with the time in the rest of the OS.</p> <p>Example of code formatting a string in format &quot;DD Mon YYYY HH:MM:SS.mmmmmm&quot;, where DD is the day of month, Mon is the textual month name, YYYY is the year, HH:MM:SS is the time, and mmmmmm is the microseconds in six positions:</p> <div class=\"example example-none\"><pre>-module(print_time).-export([format_utc_timestamp/0]).format_utc_timestamp() -&gt; TS = {_,_,Micro} = os:timestamp(), {{Year,Month,Day},{Hour,Minute,Second}} =calendar:now_to_universal_time(TS), Mstr = element(Month,{&quot;Jan&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,&quot;Jul&quot;, &quot;Aug&quot;,&quot;Sep&quot;,&quot;Oct&quot;,&quot;Nov&quot;,&quot;Dec&quot;}), io_lib:format(&quot;~2w ~s ~4w ~2w:~2..0w:~2..0w.~6..0w&quot;, [Day,Mstr,Year,Hour,Minute,Second,Micro]).</pre></div> <p>This module can be used as follows:</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">io:format(&quot;~s~n&quot;,[print_time:format_utc_timestamp()]).</span>29 Apr 2009 9:55:30.051711</pre></div> <p>OS system time can also be retreived by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#system_time-0\"><span class=\"code\">system_time/0</span></a></span> and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#system_time-1\"><span class=\"code\">system_time/1</span></a></span>.</p> <p></p></div> <a name=\"perf_counter-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-perf_counter-0-id219691\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L375\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>perf_counter() -&gt; Counter</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Counter = integer()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the current performance counter value in <span class=\"code\">perf_counter</span> <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/erlang#type_time_unit\">time unit</a></span>. This is a highly optimized call that might not be traceable. </p> <p></p></div> <a name=\"perf_counter-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-perf_counter-1-id219787\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L385\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>perf_counter(Unit) -&gt; integer()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Unit = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/erlang#type-time_unit\">erlang:time_unit()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p></p><p>Returns a performance counter that can be used as a very fast and high resolution timestamp. This counter is read directly from the hardware or operating system with the same guarantees. This means that two consecutive calls to the function are not guaranteed to be monotonic, though it most likely will be. The performance counter will be converted to the resolution passed as an argument.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">T1 = os:perf_counter(1000),receive after 10000 -&gt; ok end,T2 = os:perf_counter(1000).</span>1765258612&gt; <span class=\"bold_code bc-12\">T2 - T1.</span>10004</pre></div> <p></p></div> <a name=\"type-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-type-0-id219796\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L399\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>type() -&gt; {Osfamily, Osname}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Osfamily = unix | win32</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Osname = atom()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"code\">Osfamily</span> and, in some cases, the <span class=\"code\">Osname</span> of the current OS.</p> <p>On Unix, <span class=\"code\">Osname</span> has the same value as <span class=\"code\">uname -s</span> returns, but in lower case. For example, on Solaris 1 and 2, it is <span class=\"code\">sunos</span>.</p> <p>On Windows, <span class=\"code\">Osname</span> is <span class=\"code\">nt</span>.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>Think twice before using this function. Use module <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/filename\"><span class=\"code\">filename</span></a></span> if you want to inspect or build filenames in a portable way. Avoid matching on atom <span class=\"code\">Osname</span>.</p> <p></p></div></div> <p></p></div> <a name=\"unsetenv-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-unsetenv-1-id220065\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L419\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>unsetenv(VarName) -&gt; true</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B03</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">VarName = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-env_var_name\">env_var_name()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Deletes the environment variable <span class=\"code\">VarName</span>.</p> <p>If Unicode filename encoding is in effect (see the <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/erl#file_name_encoding\"><span class=\"code\">erl</span>manual page</a></span>), the string <span class=\"code\">VarName</span> can contain characters with codepoints &gt; 255.</p> <p></p></div> <a name=\"version-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-version-0-id220169\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/os.xml#L431\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>version() -&gt; VersionString | {Major, Minor, Release}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">VersionString = string()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Major = Minor = Release = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the OS version. On most systems, this function returns a tuple, but a string is returned instead if the system has versions that cannot be expressed as three numbers.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>Think twice before using this function. If you still need to use it, always <span class=\"code\">call os:type()</span> first.</p> <p></p></div></div> <p></p></div> "}