{"summary":"Support functions for property lists.","description":"<p> </p><p>Property lists are ordinary lists containing entries in the form of either tuples, whose first elements are keys used for lookup and insertion, or atoms, which work as shorthand for tuples <span class=\"code\">{Atom, true}</span>. (Other terms are allowed in the lists, but are ignored by this module.) If there is more than one entry in a list for a certain key, the first occurrence normally overrides any later (irrespective of the arity of the tuples).</p> <p>Property lists are useful for representing inherited properties, such as options passed to a function where a user can specify options overriding the default settings, object properties, annotations, and so on.</p> <p>Two keys are considered equal if they match (<span class=\"code\">=:=</span>). That is, numbers are compared literally rather than by value, so that, for example, <span class=\"code\">1</span> and <span class=\"code\">1.0</span> are different keys.</p> <p></p>","funcs":" <a name=\"append_values-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-append_values-2-id356435\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L68\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>append_values(Key, ListIn) -&gt; ListOut</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListIn = ListOut = [term()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Similar to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_all_values-2\"><span class=\"code\">get_all_values/2</span></a></span>, but each value is wrapped in a list unless it is already itself a list. The resulting list of lists is concatenated. This is often useful for &quot;incremental&quot; options.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>append_values(a, [{a, [1,2]}, {b, 0}, {a, 3}, {c, -1}, {a, [4]}])</pre></div> <p>returns:</p> <div class=\"example example-none\"><pre>[1,2,3,4]</pre></div> <p></p></div> <a name=\"compact-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-compact-1-id351470\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L86\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>compact(ListIn) -&gt; ListOut</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListIn = ListOut = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-property\">property()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Minimizes the representation of all entries in the list. This is equivalent to <span class=\"code\">[property(P) || P &lt;- ListIn]</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#property-1\"><span class=\"code\">property/1</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#unfold-1\"><span class=\"code\">unfold/1</span></a></span>.</p> <p></p></div> <a name=\"delete-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-delete-2-id349791\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L98\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>delete(Key, List) -&gt; List</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [term()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Deletes all entries associated with <span class=\"code\">Key</span> from <span class=\"code\">List</span>.</p> <p></p></div> <a name=\"expand-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-expand-2-id352410\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L107\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>expand(Expansions, ListIn) -&gt; ListOut</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Expansions = [{Property :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-property\">property()</a></span>, Expansion :: [term()]}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListIn = ListOut = [term()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Expands particular properties to corresponding sets of properties (or other terms). For each pair <span class=\"code\">{Property, Expansion}</span> in <span class=\"code\">Expansions</span>: if <span class=\"code\">E</span> is the first entry in <span class=\"code\">ListIn</span> with the same key as <span class=\"code\">Property</span>, and <span class=\"code\">E</span> and <span class=\"code\">Property</span> have equivalent normal forms, then <span class=\"code\">E</span> is replaced with the terms in <span class=\"code\">Expansion</span>, and any following entries with the same key are deleted from <span class=\"code\">ListIn</span>.</p> <p>For example, the following expressions all return <span class=\"code\">[fie, bar, baz, fum]</span>:</p> <div class=\"example example-none\"><pre>expand([{foo, [bar, baz]}], [fie, foo, fum])expand([{{foo, true}, [bar, baz]}], [fie, foo, fum])expand([{{foo, false}, [bar, baz]}], [fie, {foo, false}, fum])</pre></div> <p>However, no expansion is done in the following call because <span class=\"code\">{foo, false}</span> shadows <span class=\"code\">foo</span>:</p> <div class=\"example example-none\"><pre>expand([{{foo, true}, [bar, baz]}], [{foo, false}, fie, foo, fum])</pre></div> <p>Notice that if the original property term is to be preserved in the result when expanded, it must be included in the expansion list. The inserted terms are not expanded recursively. If <span class=\"code\">Expansions</span> contains more than one property with the same key, only the first occurrence is used.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#normalize-2\"><span class=\"code\">normalize/2</span></a></span>.</p> <p></p></div> <a name=\"get_all_values-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_all_values-2-id357810\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L140\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_all_values(Key, List) -&gt; [term()]</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [term()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Similar to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_value-2\"><span class=\"code\">get_value/2</span></a></span>, but returns the list of values for <strong>all</strong> entries <span class=\"code\">{Key, Value}</span> in <span class=\"code\">List</span>. If no such entry exists, the result is the empty list.</p> <p></p></div> <a name=\"get_bool-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_bool-2-id359206\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L152\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_bool(Key, List) -&gt; boolean()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [term()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the value of a boolean key/value option. If <span class=\"code\">lookup(Key, List)</span> would yield <span class=\"code\">{Key, true}</span>, this function returns <span class=\"code\">true</span>, otherwise <span class=\"code\">false</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_value-2\"><span class=\"code\">get_value/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#lookup-2\"><span class=\"code\">lookup/2</span></a></span>.</p> <p></p></div> <a name=\"get_keys-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_keys-1-id359275\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L166\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_keys(List) -&gt; [term()]</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [term()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns an unordered list of the keys used in <span class=\"code\">List</span>, not containing duplicates.</p> <p></p></div> <a name=\"get_value-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_value-2-id359285\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L175\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_value(Key, List) -&gt; term()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [term()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Equivalent to <span class=\"code\">get_value(Key, List, undefined)</span>.</p> <p></p></div> <a name=\"get_value-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_value-3-id359266\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L184\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_value(Key, List, Default) -&gt; term()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [term()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Default = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the value of a simple key/value property in <span class=\"code\">List</span>. If <span class=\"code\">lookup(Key, List)</span> would yield <span class=\"code\">{Key, Value}</span>, this function returns the corresponding <span class=\"code\">Value</span>, otherwise <span class=\"code\">Default</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_all_values-2\"><span class=\"code\">get_all_values/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_bool-2\"><span class=\"code\">get_bool/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_value-2\"><span class=\"code\">get_value/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#lookup-2\"><span class=\"code\">lookup/2</span></a></span>.</p> <p></p></div> <a name=\"is_defined-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-is_defined-2-id359609\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L201\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>is_defined(Key, List) -&gt; boolean()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [term()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if <span class=\"code\">List</span> contains at least one entry associated with <span class=\"code\">Key</span>, otherwise <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"lookup-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-lookup-2-id359716\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L211\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>lookup(Key, List) -&gt; none | tuple()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [term()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the first entry associated with <span class=\"code\">Key</span> in <span class=\"code\">List</span>, if one exists, otherwise returns <span class=\"code\">none</span>. For an atom <span class=\"code\">A</span> in the list, the tuple <span class=\"code\">{A, true}</span> is the entry associated with <span class=\"code\">A</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_bool-2\"><span class=\"code\">get_bool/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_value-2\"><span class=\"code\">get_value/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#lookup_all-2\"><span class=\"code\">lookup_all/2</span></a></span>.</p> <p></p></div> <a name=\"lookup_all-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-lookup_all-2-id359874\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L226\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>lookup_all(Key, List) -&gt; [tuple()]</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [term()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the list of all entries associated with <span class=\"code\">Key</span> in <span class=\"code\">List</span>. If no such entry exists, the result is the empty list.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#lookup-2\"><span class=\"code\">lookup/2</span></a></span>.</p> <p></p></div> <a name=\"normalize-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-normalize-2-id359974\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L238\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>normalize(ListIn, Stages) -&gt; ListOut</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListIn = [term()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Stages = [Operation]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Operation = <br>&#xA0;&#xA0;&#xA0;&#xA0;{aliases, Aliases} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{negations, Negations} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{expand, Expansions}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Aliases = Negations = [{Key, Key}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Expansions = [{Property :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-property\">property()</a></span>, Expansion :: [term()]}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListOut = [term()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Passes <span class=\"code\">ListIn</span> through a sequence of substitution/expansion stages. For an <span class=\"code\">aliases</span> operation, function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#substitute_aliases-2\"><span class=\"code\">substitute_aliases/2</span></a></span> is applied using the specified list of aliases:</p> <ul> <li> <p>For a <span class=\"code\">negations</span> operation, <span class=\"code\">substitute_negations/2</span> is applied using the specified negation list.</p> </li> <li> <p>For an <span class=\"code\">expand</span> operation, function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#expand-2\"><span class=\"code\">expand/2</span></a></span> is applied using the specified list of expansions.</p> </li> </ul> <p>The final result is automatically compacted (compare <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#compact-1\"><span class=\"code\">compact/1</span></a></span>).</p> <p>Typically you want to substitute negations first, then aliases, then perform one or more expansions (sometimes you want to pre-expand particular entries before doing the main expansion). You might want to substitute negations and/or aliases repeatedly, to allow such forms in the right-hand side of aliases and expansion lists.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#substitute_negations-2\"><span class=\"code\">substitute_negations/2</span></a></span>.</p> <p></p></div> <a name=\"property-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-property-1-id360061\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L270\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>property(PropertyIn) -&gt; PropertyOut</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">PropertyIn = PropertyOut = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-property\">property()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a normal form (minimal) representation of a property. If <span class=\"code\">PropertyIn</span> is <span class=\"code\">{Key, true}</span>, where <span class=\"code\">Key</span> is an atom, <span class=\"code\">Key</span> is returned, otherwise the whole term <span class=\"code\">PropertyIn</span> is returned.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#property-2\"><span class=\"code\">property/2</span></a></span>.</p> <p></p></div> <a name=\"property-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-property-2-id360365\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L283\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>property(Key, Value) -&gt; Property</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = Value = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Property = atom() | {term(), term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a normal form (minimal) representation of a simple key/value property. Returns <span class=\"code\">Key</span> if <span class=\"code\">Value</span> is <span class=\"code\">true</span> and <span class=\"code\">Key</span> is an atom, otherwise a tuple <span class=\"code\">{Key, Value}</span> is returned.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#property-1\"><span class=\"code\">property/1</span></a></span>.</p> <p></p></div> <a name=\"split-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-split-2-id360502\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L296\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>split(List, Keys) -&gt; {Lists, Rest}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = Keys = [term()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Lists = [[term()]]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Rest = [term()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Partitions <span class=\"code\">List</span> into a list of sublists and a remainder. <span class=\"code\">Lists</span> contains one sublist for each key in <span class=\"code\">Keys</span>, in the corresponding order. The relative order of the elements in each sublist is preserved from the original <span class=\"code\">List</span>. <span class=\"code\">Rest</span> contains the elements in <span class=\"code\">List</span> that are not associated with any of the specified keys, also with their original relative order preserved.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>split([{c, 2}, {e, 1}, a, {c, 3, 4}, d, {b, 5}, b], [a, b, c])</pre></div> <p>returns:</p> <div class=\"example example-none\"><pre>{[[a], [{b, 5}, b],[{c, 2}, {c, 3, 4}]], [{e, 1}, d]}</pre></div> <p></p></div> <a name=\"substitute_aliases-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-substitute_aliases-2-id360656\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L317\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>substitute_aliases(Aliases, ListIn) -&gt; ListOut</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Aliases = [{Key, Key}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListIn = ListOut = [term()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Substitutes keys of properties. For each entry in <span class=\"code\">ListIn</span>, if it is associated with some key <span class=\"code\">K1</span> such that <span class=\"code\">{K1, K2}</span> occurs in <span class=\"code\">Aliases</span>, the key of the entry is changed to <span class=\"code\">K2</span>. If the same <span class=\"code\">K1</span> occurs more than once in <span class=\"code\">Aliases</span>, only the first occurrence is used.</p> <p>For example, <span class=\"code\">substitute_aliases([{color, colour}], L)</span> replaces all tuples <span class=\"code\">{color, ...}</span> in <span class=\"code\">L</span> with <span class=\"code\">{colour, ...}</span>, and all atoms <span class=\"code\">color</span> with <span class=\"code\">colour</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#normalize-2\"><span class=\"code\">normalize/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#substitute_negations-2\"><span class=\"code\">substitute_negations/2</span></a></span>.</p> <p></p></div> <a name=\"substitute_negations-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-substitute_negations-2-id360861\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L339\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>substitute_negations(Negations, ListIn) -&gt; ListOut</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Negations = [{Key1, Key2}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key1 = Key2 = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListIn = ListOut = [term()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Substitutes keys of boolean-valued properties and simultaneously negates their values. For each entry in <span class=\"code\">ListIn</span>, if it is associated with some key <span class=\"code\">K1</span> such that <span class=\"code\">{K1, K2}</span> occurs in <span class=\"code\">Negations</span>: if the entry was <span class=\"code\">{K1, true}</span>, it is replaced with <span class=\"code\">{K2, false}</span>, otherwise with <span class=\"code\">K2</span>, thus changing the name of the option and simultaneously negating the value specified by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_bool-2\"><span class=\"code\">get_bool(Key,ListIn)</span></a></span>. If the same <span class=\"code\">K1</span> occurs more than once in <span class=\"code\">Negations</span>, only the first occurrence is used.</p> <p>For example, <span class=\"code\">substitute_negations([{no_foo, foo}], L)</span> replaces any atom <span class=\"code\">no_foo</span> or tuple <span class=\"code\">{no_foo, true}</span> in <span class=\"code\">L</span> with <span class=\"code\">{foo, false}</span>, and any other tuple <span class=\"code\">{no_foo, ...}</span> with <span class=\"code\">foo</span>.</p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_bool-2\"><span class=\"code\">get_bool/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#normalize-2\"><span class=\"code\">normalize/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#substitute_aliases-2\"><span class=\"code\">substitute_aliases/2</span></a></span>.</p> <p></p></div> <a name=\"unfold-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-unfold-1-id361128\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/proplists.xml#L367\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>unfold(ListIn) -&gt; ListOut</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListIn = ListOut = [term()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Unfolds all occurrences of atoms in <span class=\"code\">ListIn</span> to tuples <span class=\"code\">{Atom, true}</span>.</p> <p></p></div> ","name":"proplists"}