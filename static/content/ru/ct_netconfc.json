{"summary":"NETCONF client module.","description":"<p> </p><p>NETCONF client module compliant with RFC 6241, NETCONF Configuration Protocol, and RFC 6242, Using the NETCONF Configuration Protocol over Secure SHell (SSH), and with support for RFC 5277, NETCONF Event Notifications.</p> <a name=\"Connecting\"></a> <p><strong>Connecting to a NETCONF server</strong></p> <p>Call <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#connect-1\"><span class=\"code\">connect/1,2</span></a></span> to establish a connection to a server, then pass the returned handle to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#session-1\"><span class=\"code\">session/1-3</span></a></span> to establish a NETCONF session on a new SSH channel. Each call to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#session-1\"><span class=\"code\">session/1-3</span></a></span> establishes a new session on the same connection, and results in a hello message to the server.</p> <p>Alternately, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-1\"><span class=\"code\">open/1,2</span></a></span> can be used to establish a single session on a dedicated connection. (Or, equivalently, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#only_open-1\"><span class=\"code\">only_open/1,2</span></a></span> followed by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#hello-1\"><span class=\"code\">hello/1-3</span></a></span>.)</p> <p>Connect/session options can be specified in a configuration file with entries like the following.</p> <div class=\"example\"><pre> {server_id(), [option()]}.</pre></div> <p>The <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-server_id\"><span class=\"code\">server_id()</span></a></span> or an associated <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct#type-target_name\"><span class=\"code\">ct:target_name()</span></a></span> can then be passed to the aforementioned functions to use the referenced configuration.</p> <a name=\"Signaling\"></a> <p><strong>Signaling</strong></p> <p>Protocol operations in the NETCONF protocol are realized as remote procedure calls (RPCs) from client to server and a corresponding reply from server to client. RPCs are sent using like-named functions (eg. <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#edit_config-3\"><span class=\"code\">edit_config/3-5</span></a></span> to send an edit-config RPC), with the server reply as return value. There are functions for each RPC defined in RFC 6241 and the create-subscription RPC from RFC 5277, all of which are wrappers on <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#send_rpc-2\"><span class=\"code\">send_rpc/2,3</span></a></span>, that can be used to send an arbitrary RPC not defined in RFC 6241 or RFC 5277.</p> <p>All of the signaling functions have one variant with a <span class=\"code\">Timeout</span> argument and one without, corresponding to an infinite timeout. The latter is inappropriate in most cases since a non-response by the server or a missing message-id causes the call to hang indefinitely.</p> <a name=\"Logging\"></a> <p><strong>Logging</strong></p> <p>The NETCONF server uses <span class=\"code\">error_logger</span> for logging of NETCONF traffic. A special purpose error handler is implemented in <span class=\"code\">ct_conn_log_h</span>. To use this error handler, add the <span class=\"code\">cth_conn_log</span> hook in the test suite, for example:</p> <div class=\"example\"><pre> suite() -&gt; [{ct_hooks, [{cth_conn_log, [{<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct#type-conn_log_mod\"><span class=\"code\">ct:conn_log_mod()</span></a></span>, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct#type-conn_log_options\"><span class=\"code\">ct:conn_log_options()</span></a></span>}]}]}].</pre></div> <p><span class=\"code\">conn_log_mod()</span> is the name of the <span class=\"code\">Common Test</span> module implementing the connection protocol, for example, <span class=\"code\">ct_netconfc</span>.</p> <p>Hook option <span class=\"code\">log_type</span> specifies the type of logging:</p> <dl> <dt><strong><span class=\"code\">raw</span></strong></dt> <dd><p>The sent and received NETCONF data is logged to a separate text file &quot;as is&quot; without any formatting. A link to the file is added to the test case HTML log.</p></dd> <dt><strong><span class=\"code\">pretty</span></strong></dt> <dd><p>The sent and received NETCONF data is logged to a separate text file with XML data nicely indented. A link to the file is added to the test case HTML log.</p></dd> <dt><strong><span class=\"code\">html (default)</span></strong></dt> <dd><p>The sent and received NETCONF traffic is pretty printed directly in the test case HTML log.</p></dd> <dt><strong><span class=\"code\">silent</span></strong></dt> <dd><p>NETCONF traffic is not logged.</p></dd> </dl> <p>By default, all NETCONF traffic is logged in one single log file. However, different connections can be logged in separate files. To do this, use hook option <span class=\"code\">hosts</span> and list the names of the servers/connections to be used in the suite. The connections must be named for this to work, that is, they must be opened with <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-2\"><span class=\"code\">open/2</span></a></span>.</p> <p>Option <span class=\"code\">hosts</span> has no effect if <span class=\"code\">log_type</span> is set to <span class=\"code\">html</span> or <span class=\"code\">silent</span>.</p> <p>The hook options can also be specified in a configuration file with configuration variable <span class=\"code\">ct_conn_log</span>:</p> <div class=\"example\"><pre> {ct_conn_log,[{<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct#type-conn_log_mod\"><span class=\"code\">ct:conn_log_mod()</span></a></span>, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct#type-conn_log_options\"><span class=\"code\">ct:conn_log_options()</span></a></span>}]}.</pre></div> <p>For example:</p> <div class=\"example\"><pre> {ct_conn_log,[{ct_netconfc,[{log_type,pretty}, {hosts,[<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct#type-key_or_name\"><span class=\"code\">ct:key_or_name()</span></a></span>]}]}]}</pre></div> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>Hook options specified in a configuration file overwrite the hard-coded hook options in the test suite.</p> <p></p></div></div> <p><strong>Logging Example 1:</strong></p> <a name=\"Logging_example_1\"></a> <p>The following <span class=\"code\">ct_hooks</span> statement causes pretty printing of NETCONF traffic to separate logs for the connections named <span class=\"code\">nc_server1</span> and <span class=\"code\">nc_server2</span>. Any other connections are logged to default NETCONF log.</p> <div class=\"example\"><pre> suite() -&gt; [{ct_hooks, [{cth_conn_log, [{ct_netconfc,[{log_type,pretty}}, {hosts,[nc_server1,nc_server2]}]} ]}]}].</pre></div> <p>Connections must be opened as follows:</p> <div class=\"example\"><pre> open(nc_server1,[...]), open(nc_server2,[...]).</pre></div> <p><strong>Logging Example 2:</strong></p> <a name=\"Logging_example_2\"></a> <p>The following configuration file causes raw logging of all NETCONF traffic in to one single text file:</p> <div class=\"example\"><pre> {ct_conn_log,[{ct_netconfc,[{log_type,raw}]}]}.</pre></div> <p>The <span class=\"code\">ct_hooks</span> statement must look as follows:</p> <div class=\"example\"><pre> suite() -&gt; [{ct_hooks, [{cth_conn_log, []}]}].</pre></div> <p>The same <span class=\"code\">ct_hooks</span> statement without the configuration file would cause HTML logging of all NETCONF connections in to the test case HTML log.</p> <p></p>","funcs":" <a name=\"action-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-action-2-id133067\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L346\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>action(Client, Action) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"action-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-action-3-id133136\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L346\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>action(Client, Action, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Action = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = ok | {ok, [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span>]} | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Executes an action. If the return type is void, <span class=\"code\">ok</span> is returned instead of <span class=\"code\">{ok,[simple_xml()]}</span>.</p> <p></p></div> <a name=\"close_session-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-close_session-1-id133062\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L356\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>close_session(Client) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"close_session-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-close_session-2-id133266\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L356\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>close_session(Client, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = ok | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Requests graceful termination of the session associated with the client.</p> <p>When a NETCONF server receives a <span class=\"code\">close-session</span> request, it gracefully closes the session. The server releases any locks and resources associated with the session and gracefully closes any associated connections. Any NETCONF requests received after a <span class=\"code\">close-session</span> request are ignored.</p> <p></p></div> <a name=\"connect-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-connect-1-id133046\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L373\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>connect(Options) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">option()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = {ok, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span>} | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Opens an SSH connection to a NETCONF server.</p> <p>If the server options are specified in a configuration file, use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#connect-2\"><span class=\"code\">connect/2</span></a></span> instead.</p> <p>The opaque <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\"><span class=\"code\">handle()</span></a></span> reference returned from this function is required as connection identifier when opening sessions over this connection, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#session-1\"><span class=\"code\">session/1-3</span></a></span>.</p> <p></p></div> <a name=\"connect-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-connect-2-id133581\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L391\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>connect(KeyOrName, ExtraOptions) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">KeyOrName = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct#type-key_or_name\">ct:key_or_name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ExtraOptions = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">option()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = {ok, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span>} | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Open an SSH connection to a named NETCONF server.</p> <p>If <span class=\"code\">KeyOrName</span> is a configured <span class=\"code\">server_id()</span> or a <span class=\"code\">target_name()</span> associated with such an Id, then the options for this server are fetched from the configuration file.</p> <p>The options list is added to those of the configuration file. If an option is specified in both lists, the configuration file takes precedence.</p> <p>If the server is not specified in a configuration file, use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#connect-1\"><span class=\"code\">connect/1</span></a></span> instead.</p> <p>The opaque <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\"><span class=\"code\">handle()</span></a></span> reference returned from this function can be used as connection identifier when opening sessions over this connection, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#session-1\"><span class=\"code\">session/1-3</span></a></span>. However, if <span class=\"code\">KeyOrName</span> is a <span class=\"code\">target_name()</span>, that is, if the server is named through a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct#require-2\"><span class=\"code\">ct:require/2</span></a></span> or a <span class=\"code\">require</span> statement in the test suite, then this name can be used instead of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\"><span class=\"code\">handle()</span></a></span>.</p> <p></p></div> <a name=\"copy_config-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-copy_config-3-id133875\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L424\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>copy_config(Client, Target, Source) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"copy_config-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-copy_config-4-id133848\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L424\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>copy_config(Client, Target, Source, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Target = Source = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-netconf_db\">netconf_db()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = ok | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Copies configuration data.</p> <p>Which source and target options that can be issued depends on the capabilities supported by the server. That is, <span class=\"code\">:candidate</span> and/or <span class=\"code\">:startup</span> are required.</p> <p></p></div> <a name=\"create_subscription-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-create_subscription-2-id133986\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L437\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>create_subscription(Client, Values) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><a name=\"create_subscription-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-create_subscription-3-id133911\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L437\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>create_subscription(Client, Values, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Values = <br>&#xA0;&#xA0;&#xA0;&#xA0;#{stream =&gt; Stream,<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;filter =&gt; Filter,<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;start =&gt; StartTime,<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;stop =&gt; StopTime}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Stream = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-stream_name\">stream_name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filter = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span> | [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">StartTime = StopTime = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-xs_datetime\">xs_datetime()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = ok | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a subscription for event notifications by sending an RFC 5277 create-subscription RPC to the server. The calling process receives events as messages of type <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-notification\"><span class=\"code\">notification()</span></a></span>.</p> <p>From RFC 5722, 2.1 Subscribing to Receive Event Notifications:</p> <dl> <dt><strong><span class=\"code\">Stream</span></strong></dt> <dd><p>Indicates which stream of event is of interest. If not present, events in the default NETCONF stream are sent.</p></dd> <dt><strong><span class=\"code\">Filter</span></strong></dt> <dd><p>Indicates which subset of all possible events is of interest. The parameter format is the same as that of the filter parameter in the NETCONF protocol operations. If not present, all events not precluded by other parameters are sent.</p></dd> <dt><strong><span class=\"code\">StartTime</span></strong></dt> <dd><p>Used to trigger the replay feature and indicate that the replay is to start at the time specified. If <span class=\"code\">StartTime</span> is not present, this is not a replay subscription. It is not valid to specify start times that are later than the current time. If <span class=\"code\">StartTime</span> is specified earlier than the log can support, the replay begins with the earliest available notification. This parameter is of type <span class=\"code\">dateTime</span> and compliant to RFC 3339. Implementations must support time zones.</p></dd> <dt><strong><span class=\"code\">StopTime</span></strong></dt> <dd><p>Used with the optional replay feature to indicate the newest notifications of interest. If <span class=\"code\">StopTime</span> is not present, the notifications continues until the subscription is terminated. Must be used with and be later than <span class=\"code\">StartTime</span>. Values of <span class=\"code\">StopTime</span> in the future are valid. This parameter is of type <span class=\"code\">dateTime</span> and compliant to RFC 3339. Implementations must support time zones.</p></dd> </dl> <p>See RFC 5277 for more details. The requirement that <span class=\"code\">StopTime</span> must only be used with <span class=\"code\">StartTime</span> is not enforced, to allow an invalid request to be sent to the server.</p> <p>Prior to OTP 22.1, this function was documented as having 15 variants in 6 arities. These are still exported for backwards compatibility, but no longer documented. The map-based variants documented above provide the same functionality with simpler arguments.</p> <p></p></div> <a name=\"delete_config-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-delete_config-2-id134174\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L496\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>delete_config(Client, Target) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"delete_config-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-delete_config-3-id134516\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L496\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>delete_config(Client, Target, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Target = startup | candidate</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = ok | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Deletes configuration data.</p> <p>The running configuration cannot be deleted and <span class=\"code\">:candidate</span> or <span class=\"code\">:startup</span> must be advertised by the server.</p> <p></p></div> <a name=\"disconnect-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-disconnect-1-id134508\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L508\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>disconnect(Conn) -&gt; ok | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Conn = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Closes the given SSH connection.</p> <p>If there are open NETCONF sessions on the connection, these will be brutally aborted. To avoid this, close each session with <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#close_session-1\"><span class=\"code\">close_session/1,2</span></a></span></p> <p></p></div> <a name=\"edit_config-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-edit_config-3-id134161\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L520\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>edit_config(Client, Target, Config) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"edit_config-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-edit_config-4-id134829\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L520\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>edit_config(Client, Target, Config, OptParams) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 18.0</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-edit_config-4-id134891\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L520\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>edit_config(Client, Target, Config, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"edit_config-5\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-edit_config-5-id134797\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L520\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>edit_config(Client, Target, Config, OptParams, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 18.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-netconf_db\">netconf_db()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Config = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span> | [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">OptParams = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = ok | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Edits configuration data.</p> <p>By default only the running target is available, unless the server includes <span class=\"code\">:candidate</span> or <span class=\"code\">:startup</span> in its list of capabilities.</p> <p><span class=\"code\">OptParams</span> can be used for specifying optional parameters (<span class=\"code\">default-operation</span>, <span class=\"code\">test-option</span>, or <span class=\"code\">error-option</span>) to be added to the <span class=\"code\">edit-config</span> request. The value must be a list containing valid simple XML, for example:</p> <div class=\"example\"><pre> [{&apos;default-operation&apos;, [&quot;none&quot;]}, {&apos;error-option&apos;, [&quot;rollback-on-error&quot;]}]</pre></div> <p>If <span class=\"code\">OptParams</span> is not given, the default value <span class=\"code\">[]</span> is used.</p> <p></p></div> <a name=\"get-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get-2-id134494\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L548\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get(Client, Filter) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"get-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get-3-id134519\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L548\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get(Client, Filter, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filter = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-xpath\">xpath()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = {ok, [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span>]} | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Gets data.</p> <p>This operation returns both configuration and state data from the server.</p> <p>Filter type <span class=\"code\">xpath</span> can be used only if the server supports <span class=\"code\">:xpath</span>.</p> <p></p></div> <a name=\"get_capabilities-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_capabilities-1-id134827\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L563\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_capabilities(Client) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"get_capabilities-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_capabilities-2-id135159\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L563\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_capabilities(Client, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = [string()] | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the server capabilities as received in its hello message.</p> <p></p></div> <a name=\"get_config-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_config-3-id135158\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L572\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_config(Client, Source, Filter) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"get_config-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_config-4-id135188\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L572\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_config(Client, Source, Filter, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Source = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-netconf_db\">netconf_db()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filter = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-xpath\">xpath()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = {ok, [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span>]} | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Gets configuration data.</p> <p>To be able to access another source than <span class=\"code\">running</span>, the server must advertise <span class=\"code\">:candidate</span> and/or <span class=\"code\">:startup</span>.</p> <p>Filter type <span class=\"code\">xpath</span> can be used only if the server supports <span class=\"code\">:xpath</span>.</p> <p></p></div> <a name=\"get_event_streams-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_event_streams-1-id135158\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L587\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_event_streams(Client) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"get_event_streams-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_event_streams-2-id134989\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L587\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_event_streams(Client, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_event_streams-2-id135855\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L587\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_event_streams(Client, Streams) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"get_event_streams-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_event_streams-3-id135908\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L587\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_event_streams(Client, Streams, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Streams = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-stream_name\">stream_name()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = {ok, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-streams\">streams()</a></span>} | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sends a request to get the specified event streams.</p> <p><span class=\"code\">Streams</span> is a list of stream names. The following filter is sent to the NETCONF server in a <span class=\"code\">get</span> request:</p> <div class=\"example\"><pre> &lt;netconf xmlns=&quot;urn:ietf:params:xml:ns:netmod:notification&quot;&gt; &lt;streams&gt; &lt;stream&gt; &lt;name&gt;StreamName1&lt;/name&gt; &lt;/stream&gt; &lt;stream&gt; &lt;name&gt;StreamName2&lt;/name&gt; &lt;/stream&gt; ... &lt;/streams&gt; &lt;/netconf&gt;</pre></div> <p>If <span class=\"code\">Streams</span> is an empty list, <strong>all</strong> streams are requested by sending the following filter:</p> <div class=\"example\"><pre> &lt;netconf xmlns=&quot;urn:ietf:params:xml:ns:netmod:notification&quot;&gt; &lt;streams/&gt; &lt;/netconf&gt;</pre></div> <p>If more complex filtering is needed, use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get-2\"><span class=\"code\">ct_netconfc:get/2,3</span></a></span> and specify the exact filter according to &quot;XML Schema for Event Notifications&quot; in RFC 5277.</p> <p></p></div> <a name=\"get_session_id-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_session_id-1-id135906\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L627\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_session_id(Client) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"get_session_id-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_session_id-2-id136130\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L627\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_session_id(Client, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = integer() &gt;= 1 | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the session Id associated with the specified client.</p> <p></p></div> <a name=\"hello-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-hello-1-id136289\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L637\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>hello(Client) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"hello-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-hello-2-id136116\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L637\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>hello(Client, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"hello-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-hello-3-id134762\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L637\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>hello(Client, Options, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.5.3</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [{capability, [string()]}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = ok | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Exchanges <span class=\"code\">hello</span> messages with the server. Returns when the server hello has been received or after the specified timeout.</p> <p>Note that capabilities for an outgoing hello can be passed directly to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-2\"><span class=\"code\">open/2</span></a></span>.</p> <p></p></div> <a name=\"kill_session-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-kill_session-2-id136268\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L652\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>kill_session(Client, SessionId) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"kill_session-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-kill_session-3-id136520\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L652\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>kill_session(Client, SessionId, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SessionId = integer() &gt;= 1</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = ok | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Forces termination of the session associated with the supplied session Id.</p> <p>The server side must abort any ongoing operations, release any locks and resources associated with the session, and close any associated connections.</p> <p>Only if the server is in the confirmed commit phase, the configuration is restored to its state before entering the confirmed commit phase. Otherwise, no configuration rollback is performed.</p> <p>If the specified <span class=\"code\">SessionId</span> is equal to the current session Id, an error is returned.</p> <p></p></div> <a name=\"lock-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-lock-2-id136396\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L674\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>lock(Client, Target) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"lock-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-lock-3-id136729\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L674\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>lock(Client, Target, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-netconf_db\">netconf_db()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = ok | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Locks the configuration target.</p> <p>Which target parameters that can be used depends on if <span class=\"code\">:candidate</span> and/or <span class=\"code\">:startup</span> are supported by the server. If successfull, the configuration system of the device is unavailable to other clients (NETCONF, CORBA, SNMP, and so on). Locks are intended to be short-lived.</p> <p>Operation <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#kill_session-2\"><span class=\"code\">kill_session/2,3</span></a></span> can be used to force the release of a lock owned by another NETCONF session. How this is achieved by the server side is implementation-specific.</p> <p></p></div> <a name=\"only_open-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-only_open-1-id135855\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L695\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>only_open(Options) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">option()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = {ok, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span>} | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Opens a NETCONF session, but does not send <span class=\"code\">hello</span>.</p> <p>As <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-1\"><span class=\"code\">open/1</span></a></span>, but does not send a <span class=\"code\">hello</span> message.</p> <p></p></div> <a name=\"only_open-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-only_open-2-id134976\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L706\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>only_open(KeyOrName, ExtraOptions) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">KeyOrName = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct#type-key_or_name\">ct:key_or_name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ExtraOptions = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">option()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = {ok, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span>} | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Opens a named NETCONF session, but does not send <span class=\"code\">hello</span>.</p> <p>As <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-2\"><span class=\"code\">open/2</span></a></span>, but does not send a <span class=\"code\">hello</span> message.</p> <p></p></div> <a name=\"open-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-open-1-id134900\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L717\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>open(Options) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">option()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = {ok, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span>} | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Opens a NETCONF session and exchanges <span class=\"code\">hello</span> messages.</p> <p>If the server options are specified in a configuration file, or if a named client is needed for logging purposes (see section <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Logging\">Logging</a></span> in this module), use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-2\"><span class=\"code\">open/2</span></a></span> instead.</p> <p>The opaque <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\"><span class=\"code\">handle()</span></a></span> reference returned from this function is required as client identifier when calling any other function in this module.</p> <p></p></div> <a name=\"open-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-open-2-id137195\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L736\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>open(KeyOrName, ExtraOption) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">KeyOrName = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct#type-key_or_name\">ct:key_or_name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ExtraOption = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">option()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = {ok, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span>} | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Opens a named NETCONF session and exchanges <span class=\"code\">hello</span> messages.</p> <p>If <span class=\"code\">KeyOrName</span> is a configured <span class=\"code\">server_id()</span> or a <span class=\"code\">target_name()</span> associated with such an Id, then the options for this server are fetched from the configuration file.</p> <p>The options list is added to those of the configuration file. If an option is specified in both lists, the configuration file take precedence.</p> <p>If the server is not specified in a configuration file, use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-1\"><span class=\"code\">open/1</span></a></span> instead.</p> <p>The opaque <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\"><span class=\"code\">handle()</span></a></span> reference returned from this function can be used as client identifier when calling any other function in this module. However, if <span class=\"code\">KeyOrName</span> is a <span class=\"code\">target_name()</span>, that is, if the server is named through a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct#require-2\"><span class=\"code\">ct:require/2</span></a></span> or a <span class=\"code\">require</span> statement in the test suite, then this name can be used instead of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\"><span class=\"code\">handle()</span></a></span>.</p> <p>See also <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct#require-2\"><span class=\"code\">ct:require/2</span></a></span>.</p> <p></p></div> <a name=\"send-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-send-2-id137603\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L772\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>send(Client, SimpleXml) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B02</span></td></tr></tbody></table><a name=\"send-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-send-3-id137648\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L772\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>send(Client, SimpleXml, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SimpleXml = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span> | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sends an XML document to the server.</p> <p>The specified XML document is sent &quot;as is&quot; to the server. This function can be used for sending XML documents that cannot be expressed by other interface functions in this module.</p> <p></p></div> <a name=\"send_rpc-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-send_rpc-2-id137632\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L785\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>send_rpc(Client, SimpleXml) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B02</span></td></tr></tbody></table><a name=\"send_rpc-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-send_rpc-3-id137825\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L785\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>send_rpc(Client, SimpleXml, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SimpleXml = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-simple_xml\">simple_xml()</a></span>] | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sends a NETCONF <span class=\"code\">rpc</span> request to the server.</p> <p>The specified XML document is wrapped in a valid NETCONF <span class=\"code\">rpc</span> request and sent to the server. The <span class=\"code\">message-id</span> and namespace attributes are added to element <span class=\"code\">rpc</span>.</p> <p>This function can be used for sending <span class=\"code\">rpc</span> requests that cannot be expressed by other interface functions in this module.</p> <p></p></div> <a name=\"session-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-session-1-id137609\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L801\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>session(Conn) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"session-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-session-2-id137593\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L801\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>session(Conn, Options) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-session-2-id138053\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L801\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>session(KeyOrName, Conn) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"session-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-session-3-id137606\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L801\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>session(KeyOrName, Conn, Options) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Conn = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [session_option()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">KeyOrName = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct#type-key_or_name\">ct:key_or_name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = {ok, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\">handle()</a></span>} | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div><div class=\"REFTYPES rt-2\"> <span class=\"bold_code bc-5\">session_option() = <br>&#xA0;&#xA0;&#xA0;&#xA0;{timeout, timeout()} | {capability, string() | [string()]}</span><br></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Opens a NETCONF session as a channel on the given SSH connection, and exchanges hello messages with the server.</p> <p>The opaque <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\"><span class=\"code\">handle()</span></a></span> reference returned from this function can be used as client identifier when calling any other function in this module. However, if <span class=\"code\">KeyOrName</span> is used and it is a <span class=\"code\">target_name()</span>, that is, if the server is named through a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ct#require-2\"><span class=\"code\">ct:require/2</span></a></span> or a <span class=\"code\">require</span> statement in the test suite, then this name can be used instead of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-handle\"><span class=\"code\">handle()</span></a></span>.</p> <p></p></div> <a name=\"unlock-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-unlock-2-id137602\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L828\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>unlock(Client, Target) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><a name=\"unlock-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-unlock-3-id137839\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/common_test/doc/src/ct_netconfc.xml#L828\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>unlock(Client, Target, Timeout) -&gt; Result</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B02</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Client = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-client\">client()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-netconf_db\">netconf_db()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = ok | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-error_reason\">error_reason()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Unlocks the configuration target.</p> <p>If the client earlier has acquired a lock through <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#lock-2\"><span class=\"code\">lock/2,3</span></a></span>, this operation releases the associated lock. To access another target than <span class=\"code\">running</span>, the server must support <span class=\"code\">:candidate</span> and/or <span class=\"code\">:startup</span>.</p> <p></p></div> "}