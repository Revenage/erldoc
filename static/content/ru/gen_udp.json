{"summary":"Interface to UDP sockets.","description":"<p> </p><p>This module provides functions for communicating with sockets using the UDP protocol.</p> <p></p>","funcs":" <a name=\"close-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-close-1-id213358\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_udp.xml#L55\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>close(Socket) -&gt; ok</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Closes a UDP socket.</p> <p></p></div> <a name=\"controlling_process-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-controlling_process-2-id218013\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_udp.xml#L63\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>controlling_process(Socket, Pid) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Pid = pid()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = closed | not_owner | badarg | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Assigns a new controlling process <span class=\"code\">Pid</span> to <span class=\"code\">Socket</span>. The controlling process is the process that receives messages from the socket. If called by any other process than the current controlling process, <span class=\"code\">{error, not_owner}</span> is returned. If the process identified by <span class=\"code\">Pid</span> is not an existing local pid, <span class=\"code\">{error, badarg}</span> is returned. <span class=\"code\">{error, badarg}</span> may also be returned in some cases when <span class=\"code\">Socket</span> is closed during the execution of this function.</p> <p></p></div> <a name=\"open-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-open-1-id213353\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_udp.xml#L79\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>open(Port) -&gt; {ok, Socket} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"open-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-open-2-id218192\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_udp.xml#L79\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>open(Port, Opts) -&gt; {ok, Socket} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Port = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Opts = [Option]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Option = <br>&#xA0;&#xA0;&#xA0;&#xA0;{ip, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-socket_address\">inet:socket_address()</a></span>} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{fd, integer() &gt;= 0} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{ifaddr, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-socket_address\">inet:socket_address()</a></span>} |<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-address_family\">inet:address_family()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;{port, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span>} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{netns, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/file#type-filename_all\">file:filename_all()</a></span>} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{bind_to_device, binary()} |<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">option()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = system_limit | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Associates a UDP port number (<span class=\"code\">Port</span>) with the calling process.</p> <p>The following options are available:</p> <dl> <dt><strong><span class=\"code\">list</span></strong></dt> <dd><p>Received <span class=\"code\">Packet</span> is delivered as a list.</p></dd> <dt><strong><span class=\"code\">binary</span></strong></dt> <dd><p>Received <span class=\"code\">Packet</span> is delivered as a binary.</p></dd> <dt><strong><span class=\"code\">{ip, Address}</span></strong></dt> <dd><p>If the host has many network interfaces, this option specifies which one to use.</p></dd> <dt><strong><span class=\"code\">{ifaddr, Address}</span></strong></dt> <dd><p>Same as <span class=\"code\">{ip, Address}</span>. If the host has many network interfaces, this option specifies which one to use.</p></dd> <dt><strong><span class=\"code\">{fd, integer() &gt;= 0}</span></strong></dt> <dd><p>If a socket has somehow been opened without using <span class=\"code\">gen_udp</span>, use this option to pass the file descriptor for it. If <span class=\"code\">Port</span> is not set to <span class=\"code\">0</span> and/or <span class=\"code\">{ip, ip_address()}</span> is combined with this option, the <span class=\"code\">fd</span> is bound to the specified interface and port after it is being opened. If these options are not specified, it is assumed that the <span class=\"code\">fd</span> is already bound appropriately.</p></dd> <dt><strong><span class=\"code\">inet6</span></strong></dt> <dd><p>Sets up the socket for IPv6.</p></dd> <dt><strong><span class=\"code\">inet</span></strong></dt> <dd><p>Sets up the socket for IPv4.</p></dd> <dt><strong><span class=\"code\">local</span></strong></dt> <dd> <p> Sets up a Unix Domain Socket. See <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-local_address\"><span class=\"code\">inet:local_address()</span></a></span> </p> </dd> <dt><strong><span class=\"code\">{udp_module, module()}</span></strong></dt> <dd><p>Overrides which callback module is used. Defaults to <span class=\"code\">inet_udp</span> for IPv4 and <span class=\"code\">inet6_udp</span> for IPv6.</p></dd> <dt><strong><span class=\"code\">{multicast_if, Address}</span></strong></dt> <dd><p>Sets the local device for a multicast socket.</p></dd> <dt><strong><span class=\"code\">{multicast_loop, true | false}</span></strong></dt> <dd><p>When <span class=\"code\">true</span>, sent multicast packets are looped back to the local sockets.</p></dd> <dt><strong><span class=\"code\">{multicast_ttl, Integer}</span></strong></dt> <dd><p>Option <span class=\"code\">multicast_ttl</span> changes the time-to-live (TTL) for outgoing multicast datagrams to control the scope of the multicasts.</p> <p>Datagrams with a TTL of 1 are not forwarded beyond the local network. Defaults to <span class=\"code\">1</span>.</p></dd> <dt><strong><span class=\"code\">{add_membership, {MultiAddress, InterfaceAddress}}</span></strong></dt> <dd><p>Joins a multicast group.</p></dd> <dt><strong><span class=\"code\">{drop_membership, {MultiAddress, InterfaceAddress}}</span></strong></dt> <dd><p>Leaves a multicast group.</p></dd> <dt><strong><span class=\"code\">Opt</span></strong></dt> <dd><p>See <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#setopts-2\"><span class=\"code\">inet:setopts/2</span></a></span>. </p></dd> </dl> <p>The returned socket <span class=\"code\">Socket</span> is used to send packets from this port with <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#send-4\"><span class=\"code\">send/4</span></a></span>. When UDP packets arrive at the opened port, if the socket is in an active mode, the packets are delivered as messages to the controlling process:</p> <div class=\"example example-none\"><pre>{udp, Socket, IP, InPortNo, Packet} % Without ancillary data{udp, Socket, IP, InPortNo, AncData, Packet} % With ancillary data</pre></div> <p> The message contains an <span class=\"code\">AncData</span> field if any of the socket <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">options</a></span> <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#option-recvtos\"><span class=\"code\">recvtos</span></a></span>, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#option-recvtclass\"><span class=\"code\">recvtclass</span></a></span> or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#option-recvttl\"><span class=\"code\">recvttl</span></a></span> are active, otherwise it does not. </p> <p> </p> <p>If the socket is not in an active mode, data can be retrieved through the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#recv-2\"><span class=\"code\">recv/2,3</span></a></span> calls. Notice that arriving UDP packets that are longer than the receive buffer option specifies can be truncated without warning.</p> <p>When a socket in <span class=\"code\">{active, N}</span> mode (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#setopts-2\"><span class=\"code\">inet:setopts/2</span></a></span> for details), transitions to passive (<span class=\"code\">{active, false}</span>) mode, the controlling process is notified by a message of the following form:</p> <div class=\"example example-none\"><pre>{udp_passive, Socket}</pre></div> <p><span class=\"code\">IP</span> and <span class=\"code\">InPortNo</span> define the address from which <span class=\"code\">Packet</span> comes. <span class=\"code\">Packet</span> is a list of bytes if option <span class=\"code\">list</span> is specified. <span class=\"code\">Packet</span> is a binary if option <span class=\"code\">binary</span> is specified.</p> <p>Default value for the receive buffer option is <span class=\"code\">{recbuf, 8192}</span>.</p> <p>If <span class=\"code\">Port == 0</span>, the underlying OS assigns a free UDP port, use <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#port-1\"><span class=\"code\">inet:port/1</span></a></span> to retrieve it.</p> <p></p></div> <a name=\"recv-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-recv-2-id218977\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_udp.xml#L191\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>recv(Socket, Length) -&gt; {ok, RecvData} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"recv-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-recv-3-id219079\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_udp.xml#L191\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>recv(Socket, Length, Timeout) -&gt; {ok, RecvData} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Length = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RecvData = <br>&#xA0;&#xA0;&#xA0;&#xA0;{Address, Port, Packet} | {Address, Port, AncData, Packet}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Address = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ip_address\">inet:ip_address()</a></span> | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-returned_non_ip_address\">inet:returned_non_ip_address()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Port = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AncData = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ancillary_data\">inet:ancillary_data()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Packet = string() | binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = not_owner | timeout | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p> Receives a packet from a socket in passive mode. Optional parameter <span class=\"code\">Timeout</span> specifies a time-out in milliseconds. Defaults to <span class=\"code\">infinity</span>. </p> <p> If any of the socket <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">options</a></span> <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#option-recvtos\"><span class=\"code\">recvtos</span></a></span>, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#option-recvtclass\"><span class=\"code\">recvtclass</span></a></span> or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#option-recvttl\"><span class=\"code\">recvttl</span></a></span> are active, the <span class=\"code\">RecvData</span> tuple contains an <span class=\"code\">AncData</span> field, otherwise it does not. </p> <p></p></div> <a name=\"send-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-send-3-id219086\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_udp.xml#L215\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>send(Socket, Destination, Packet) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Destination = <br>&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ip_address\">inet:ip_address()</a></span>, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span>} |<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-family_address\">inet:family_address()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Packet = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = not_owner | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p> Sends a packet to the specified <span class=\"code\">Destination</span>. </p> <p> This function is equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#send-4-AncData\"><span class=\"code\">send(Socket,Destination, [],Packet)</span></a></span>. </p> <p></p></div> <a name=\"send-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-send-4-id218975\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_udp.xml#L229\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>send(Socket, Host, Port, Packet) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Host = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-hostname\">inet:hostname()</a></span> | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ip_address\">inet:ip_address()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Port = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span> | atom()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Packet = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = not_owner | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p> Sends a packet to the specified <span class=\"code\">Host</span> and <span class=\"code\">Port</span>. </p> <p> This clause is equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#send-5\"><span class=\"code\">send(Socket,Host,Port, [],Packet)</span></a></span>. </p> <p></p></div> <a name=\"send-4-AncData\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-send-4-id218969\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_udp.xml#L244\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>send(Socket, Destination, AncData, Packet) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Destination = <br>&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ip_address\">inet:ip_address()</a></span>, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span>} |<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-family_address\">inet:family_address()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AncData = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ancillary_data\">inet:ancillary_data()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Packet = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = not_owner | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p> Sends a packet to the specified <span class=\"code\">Destination</span> with ancillary data <span class=\"code\">AncData</span>. </p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p> The ancillary data <span class=\"code\">AncData</span> contains options that for this single message override the default options for the socket, an operation that may not be supported on all platforms, and if so return <span class=\"code\">{error, einval}</span>. Using more than one of an ancillary data item type may also not be supported. <span class=\"code\">AncData =:= []</span> is always supported. </p> <p></p></div></div> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-send-4-id219005\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_udp.xml#L267\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>send(Socket, Destination, PortZero, Packet) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Destination = <br>&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ip_address\">inet:ip_address()</a></span>, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span>} |<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-family_address\">inet:family_address()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">PortZero = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Packet = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = not_owner | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p> Sends a packet to the specified <span class=\"code\">Destination</span>. Since <span class=\"code\">Destination</span> is complete, <span class=\"code\">PortZero</span> is redundant and has to be <span class=\"code\">0</span>. </p> <p> This is a legacy clause mostly for <span class=\"code\">Destination = {local, Binary}</span> where <span class=\"code\">PortZero</span> is superfluous. It is equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#send-4-AncData\"><span class=\"code\">send(Socket,Destination, [],Packet)</span></a></span>, the clause right above here. </p> <p></p></div> <a name=\"send-5\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-send-5-id219936\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_udp.xml#L286\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>send(Socket, Host, Port, AncData, Packet) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-socket\">socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Host = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-hostname\">inet:hostname()</a></span> | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ip_address\">inet:ip_address()</a></span> | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-local_address\">inet:local_address()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Port = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span> | atom()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AncData = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ancillary_data\">inet:ancillary_data()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Packet = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = not_owner | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p> Sends a packet to the specified <span class=\"code\">Host</span> and <span class=\"code\">Port</span>, with ancillary data <span class=\"code\">AncData</span>. </p> <p> Argument <span class=\"code\">Host</span> can be a hostname or a socket address, and <span class=\"code\">Port</span> can be a port number or a service name atom. These are resolved into a <span class=\"code\">Destination</span> and after that this function is equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#send-4-AncData\"><span class=\"code\">send(Socket, Destination,AncData,Packet)</span></a></span>, read there about ancillary data. </p> <p></p></div> ","name":"gen_udp"}