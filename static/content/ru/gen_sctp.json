{"summary":"Functions for communicating with sockets using the SCTP\n    protocol.","description":"<p> </p><p>This module provides functions for communicating with sockets using the SCTP protocol. The implementation assumes that the OS kernel supports SCTP <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.rfc-archive.org/getrfc.php?rfc=2960\">(RFC 2960)</a></span> through the user-level <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://tools.ietf.org/html/draft-ietf-tsvwg-sctpsocket-13\">Sockets API Extensions</a></span>.</p> <p>During development, this implementation was tested on:</p> <ul> <li>Linux Fedora Core 5.0 (kernel 2.6.15-2054 or later is needed)</li> <li>Solaris 10, 11</li> </ul> <p>During OTP adaptation it was tested on:</p> <ul> <li>SUSE Linux Enterprise Server 10 (x86_64) kernel 2.6.16.27-0.6-smp, with lksctp-tools-1.0.6</li> <li>Briefly on Solaris 10</li> <li>SUSE Linux Enterprise Server 10 Service Pack 1 (x86_64) kernel 2.6.16.54-0.2.3-smp with lksctp-tools-1.0.7</li> <li>FreeBSD 8.2</li> </ul> <p>This module was written for one-to-many style sockets (type <span class=\"code\">seqpacket</span>). With the addition of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#peeloff-2\"><span class=\"code\">peeloff/2</span></a></span>, one-to-one style sockets (type <span class=\"code\">stream</span>) were introduced.</p> <p>Record definitions for this module can be found using:</p> <div class=\"example\"><pre>-include_lib(&quot;kernel/include/inet_sctp.hrl&quot;).</pre></div> <p>These record definitions use the &quot;new&quot; spelling &apos;adaptation&apos;, not the deprecated &apos;adaption&apos;, regardless of which spelling the underlying C API uses.</p> <p></p>","funcs":" <a name=\"abort-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-abort-2-id218085\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L102\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>abort(Socket, Assoc) -&gt; ok | {error, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Assoc = #sctp_assoc_change{}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Abnormally terminates the association specified by <span class=\"code\">Assoc</span>, without flushing of unsent data. The socket itself remains open. Other associations opened on this socket are still valid, and the socket can be used in new associations.</p> <p></p></div> <a name=\"close-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-close-1-id218194\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L115\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>close(Socket) -&gt; ok | {error, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Closes the socket and all associations on it. The unsent data is flushed as in <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#eof-2\"><span class=\"code\">eof/2</span></a></span>. The <span class=\"code\">close/1</span> call is blocking or otherwise depending of the value of the <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#option-linger\"><span class=\"code\">linger</span></a></span> socket <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#options\">option</a></span>. If <span class=\"code\">close</span> does not linger or linger time-out expires, the call returns and the data is flushed in the background.</p> <p></p></div> <a name=\"connect-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-connect-4-id218336\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L130\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>connect(Socket, Addr, Port, Opts) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, #sctp_assoc_change{state = comm_up}} |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, #sctp_assoc_change{state = cant_assoc}} |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Addr = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ip_address\">inet:ip_address()</a></span> | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-hostname\">inet:hostname()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Port = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Opts = [Opt :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">option()</a></span>]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Same as <span class=\"code\">connect(Socket, Addr, Port, Opts, infinity)</span>.</p> <p></p></div> <a name=\"connect-5\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-connect-5-id218415\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L139\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>connect(Socket, Addr, Port, Opts, Timeout) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, #sctp_assoc_change{state = comm_up}} |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, #sctp_assoc_change{state = cant_assoc}} |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Addr = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ip_address\">inet:ip_address()</a></span> | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-hostname\">inet:hostname()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Port = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Opts = [Opt :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">option()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Establishes a new association for socket <span class=\"code\">Socket</span>, with the peer (SCTP server socket) specified by <span class=\"code\">Addr</span> and <span class=\"code\">Port</span>. <span class=\"code\">Timeout</span>, is expressed in milliseconds. A socket can be associated with multiple peers.</p> <div class=\"warning\"><div class=\"label\">Warning</div><div class=\"content\"><p></p><p>Using a value of <span class=\"code\">Timeout</span> less than the maximum time taken by the OS to establish an association (around 4.5 minutes if the default values from <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://tools.ietf.org/html/rfc4960\">RFC 4960</a></span> are used), can result in inconsistent or incorrect return values. This is especially relevant for associations sharing the same <span class=\"code\">Socket</span> (that is, source address and port), as the controlling process blocks until <span class=\"code\">connect/*</span> returns. <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#connect_init-4\"><span class=\"code\">connect_init/*</span></a></span> provides an alternative without this limitation.</p> <p></p></div></div> <p><a name=\"record-sctp_assoc_change\"></a> The result of <span class=\"code\">connect/*</span> is an <span class=\"code\">#sctp_assoc_change{}</span> event that contains, in particular, the new <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-assoc_id\">Association ID</a></span>:</p> <div class=\"example\"><pre>#sctp_assoc_change{ state = atom(), error = atom(), outbound_streams = integer(), inbound_streams = integer(), assoc_id = assoc_id()}</pre></div> <p>The number of outbound and inbound streams can be set by giving an <span class=\"code\">sctp_initmsg</span> option to <span class=\"code\">connect</span> as in:</p> <div class=\"example\"><pre>connect(Socket, Ip, Port&gt;, [{sctp_initmsg,#sctp_initmsg{num_ostreams=OutStreams, max_instreams=MaxInStreams}}])</pre></div> <p>All options <span class=\"code\">Opt</span> are set on the socket before the association is attempted. If an option record has undefined field values, the options record is first read from the socket for those values. In effect, <span class=\"code\">Opt</span> option records only define field values to change before connecting.</p> <p>The returned <span class=\"code\">outbound_streams</span> and <span class=\"code\">inbound_streams</span> are the stream numbers on the socket. These can be different from the requested values (<span class=\"code\">OutStreams</span> and <span class=\"code\">MaxInStreams</span>, respectively) if the peer requires lower values.</p> <p><span class=\"code\">state</span> can have the following values:</p> <dl> <dt><strong><span class=\"code\">comm_up</span></strong></dt> <dd><p>Association is successfully established. This indicates a successful completion of <span class=\"code\">connect</span>.</p></dd> <dt><strong><span class=\"code\">cant_assoc</span></strong></dt> <dd><p>The association cannot be established (<span class=\"code\">connect/*</span> failure).</p></dd> </dl> <p>Other states do not normally occur in the output from <span class=\"code\">connect/*</span>. Rather, they can occur in <span class=\"code\">#sctp_assoc_change{}</span> events received instead of data in <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#recv-1\"><span class=\"code\">recv/*</span></a></span> calls. All of them indicate losing the association because of various error conditions, and are listed here for the sake of completeness:</p> <dl> <dt><strong><span class=\"code\">comm_lost</span></strong></dt> <dd></dd> <dt><strong><span class=\"code\">restart</span></strong></dt> <dd></dd> <dt><strong><span class=\"code\">shutdown_comp</span></strong></dt> <dd></dd> </dl> <p>Field <span class=\"code\">error</span> can provide more detailed diagnostics.</p> <p></p></div> <a name=\"connect_init-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-connect_init-4-id219004\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L215\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>connect_init(Socket, Addr, Port, Opts) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok | {error, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span>}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Addr = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ip_address\">inet:ip_address()</a></span> | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-hostname\">inet:hostname()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Port = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Opts = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">option()</a></span>]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Same as <span class=\"code\">connect_init(Socket, Addr, Port, Opts, infinity)</span>.</p> <p></p></div> <a name=\"connect_init-5\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-connect_init-5-id219025\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L224\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>connect_init(Socket, Addr, Port, Opts, Timeout) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok | {error, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span>}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R13B04</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Addr = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ip_address\">inet:ip_address()</a></span> | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-hostname\">inet:hostname()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Port = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Opts = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">option()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Initiates a new association for socket <span class=\"code\">Socket</span>, with the peer (SCTP server socket) specified by <span class=\"code\">Addr</span> and <span class=\"code\">Port</span>.</p> <p>The fundamental difference between this API and <span class=\"code\">connect/*</span> is that the return value is that of the underlying OS <span class=\"code\">connect(2)</span> system call. If <span class=\"code\">ok</span> is returned, the result of the association establishment is received by the calling process as an <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#record-sctp_assoc_change\"><span class=\"code\">#sctp_assoc_change{}</span></a></span> event. The calling process must be prepared to receive this, or poll for it using <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#recv-1\"><span class=\"code\">recv/*</span></a></span>, depending on the value of the active option.</p> <p>The parameters are as described in <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#connect-5\"><span class=\"code\">connect/*</span></a></span>, except the <span class=\"code\">Timeout</span> value.</p> <p>The timer associated with <span class=\"code\">Timeout</span> only supervises IP resolution of <span class=\"code\">Addr</span>.</p> <p></p></div> <a name=\"controlling_process-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-controlling_process-2-id219044\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L250\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>controlling_process(Socket, Pid) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Pid = pid()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = closed | not_owner | badarg | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Assigns a new controlling process <span class=\"code\">Pid</span> to <span class=\"code\">Socket</span>. Same implementation as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gen_udp#controlling_process-2\"><span class=\"code\">gen_udp:controlling_process/2</span></a></span>. </p> <p></p></div> <a name=\"eof-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-eof-2-id219036\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L261\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>eof(Socket, Assoc) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Assoc = #sctp_assoc_change{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Gracefully terminates the association specified by <span class=\"code\">Assoc</span>, with flushing of all unsent data. The socket itself remains open. Other associations opened on this socket are still valid. The socket can be used in new associations.</p> <p></p></div> <a name=\"error_string-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-error_string-1-id219457\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L274\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>error_string(ErrorNumber) -&gt; ok | string() | unknown_error</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ErrorNumber = integer()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Translates an SCTP error number from, for example, <span class=\"code\">#sctp_remote_error{}</span> or <span class=\"code\">#sctp_send_failed{}</span> into an explanatory string, or one of the atoms <span class=\"code\">ok</span> for no error or <span class=\"code\">undefined</span> for an unrecognized error.</p> <p></p></div> <a name=\"listen-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-listen-2-id219764\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L285\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>listen(Socket, IsServer) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-listen-2-id219769\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L285\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>listen(Socket, Backlog) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Backlog = integer()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sets up a socket to listen on the IP address and port number it is bound to.</p> <p>For type <span class=\"code\">seqpacket</span>, sockets (the default) <span class=\"code\">IsServer</span> must be <span class=\"code\">true</span> or <span class=\"code\">false</span>. In contrast to TCP, there is no listening queue length in SCTP. If <span class=\"code\">IsServer</span> is <span class=\"code\">true</span>, the socket accepts new associations, that is, it becomes an SCTP server socket.</p> <p>For type <span class=\"code\">stream</span>, sockets Backlog define the backlog queue length just like in TCP.</p> <p></p></div> <a name=\"open-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-open-0-id219956\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L302\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>open() -&gt; {ok, Socket} | {error, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"open-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-open-1-id219950\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L302\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>open(Port) -&gt; {ok, Socket} | {error, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-open-1-id219764\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L302\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>open(Opts) -&gt; {ok, Socket} | {error, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"open-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-open-2-id220266\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L302\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>open(Port, Opts) -&gt; {ok, Socket} | {error, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Opts = [Opt]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Opt = <br>&#xA0;&#xA0;&#xA0;&#xA0;{ip, IP} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{ifaddr, IP} |<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-address_family\">inet:address_family()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;{port, Port} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{type, SockType} |<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">option()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IP = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ip_address\">inet:ip_address()</a></span> | any | loopback</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Port = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SockType = seqpacket | stream</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates an SCTP socket and binds it to the local addresses specified by all <span class=\"code\">{ip,IP}</span> (or synonymously <span class=\"code\">{ifaddr,IP}</span>) options (this feature is called SCTP multi-homing). The default <span class=\"code\">IP</span> and <span class=\"code\">Port</span> are <span class=\"code\">any</span> and <span class=\"code\">0</span>, meaning bind to all local addresses on any free port.</p> <p>Other options:</p> <dl> <dt><strong><span class=\"code\">inet6</span></strong></dt> <dd> <p>Sets up the socket for IPv6.</p> </dd> <dt><strong><span class=\"code\">inet</span></strong></dt> <dd> <p>Sets up the socket for IPv4. This is the default.</p> </dd> </dl> <p>A default set of socket <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#options\">options</a></span> is used. In particular, the socket is opened in <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#option-binary\">binary</a></span> and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#option-active\">passive</a></span> mode, with SockType <span class=\"code\">seqpacket</span>, and with reasonably large <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#option-sndbuf\">kernel</a></span> and driver <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#option-buffer\">buffers</a></span>.</p> <p> If the socket is in <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#option-active\">passive</a></span> mode data can be received through the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#recv-1\"><span class=\"code\">recv/1,2</span></a></span> calls. </p> <p> If the socket is in <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#option-active\">active</a></span> mode data received data is delivered to the controlling process as messages: </p> <div class=\"example example-none\"><pre>{sctp, Socket, FromIP, FromPort, {AncData, Data}} </pre></div> <p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#recv-1\"><span class=\"code\">recv/1,2</span></a></span> for a description of the message fields. </p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p> This message format unfortunately differs slightly from the <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gen_udp#open-1\"><span class=\"code\">gen_udp</span></a></span> message format with ancillary data, and from the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#recv-1\"><span class=\"code\">recv/1,2</span></a></span> return tuple format. </p> <p></p></div></div> <p></p></div> <a name=\"peeloff-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-peeloff-2-id220552\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L368\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>peeloff(Socket, Assoc) -&gt; {ok, NewSocket} | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Assoc = #sctp_assoc_change{} | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-assoc_id\">assoc_id()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">NewSocket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Branches off an existing association <span class=\"code\">Assoc</span> in a socket <span class=\"code\">Socket</span> of type <span class=\"code\">seqpacket</span> (one-to-many style) into a new socket <span class=\"code\">NewSocket</span> of type <span class=\"code\">stream</span> (one-to-one style).</p> <p>The existing association argument <span class=\"code\">Assoc</span> can be either a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#record-sctp_assoc_change\"><span class=\"code\">#sctp_assoc_change{}</span></a></span> record as returned from, for example, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#recv-2\"><span class=\"code\">recv/*</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#connect-5\"><span class=\"code\">connect/*</span></a></span>, or from a listening socket in active mode. It can also be just the field <span class=\"code\">assoc_id</span> integer from such a record.</p> <p></p></div> <a name=\"recv-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-recv-1-id220756\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L389\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>recv(Socket) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, {FromIP, FromPort, AncData, Data}} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"recv-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-recv-2-id220883\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L389\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>recv(Socket, Timeout) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, {FromIP, FromPort, AncData, Data}} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Timeout = timeout()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FromIP = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ip_address\">inet:ip_address()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FromPort = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-port_number\">inet:port_number()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AncData = [#sctp_sndrcvinfo{} | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ancillary_data\">inet:ancillary_data()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Data = <br>&#xA0;&#xA0;&#xA0;&#xA0;binary() |<br>&#xA0;&#xA0;&#xA0;&#xA0;string() |<br>&#xA0;&#xA0;&#xA0;&#xA0;#sctp_sndrcvinfo{} |<br>&#xA0;&#xA0;&#xA0;&#xA0;#sctp_assoc_change{} |<br>&#xA0;&#xA0;&#xA0;&#xA0;#sctp_paddr_change{} |<br>&#xA0;&#xA0;&#xA0;&#xA0;#sctp_adaptation_event{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;#sctp_send_failed{} |<br>&#xA0;&#xA0;&#xA0;&#xA0;#sctp_paddr_change{} |<br>&#xA0;&#xA0;&#xA0;&#xA0;#sctp_pdapi_event{} |<br>&#xA0;&#xA0;&#xA0;&#xA0;#sctp_remote_error{} |<br>&#xA0;&#xA0;&#xA0;&#xA0;#sctp_shutdown_event{}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Receives the <span class=\"code\">Data</span> message from any association of the socket. If the receive times out, <span class=\"code\">{error,timeout}</span> is returned. The default time-out is <span class=\"code\">infinity</span>. <span class=\"code\">FromIP</span> and <span class=\"code\">FromPort</span> indicate the address of the sender.</p> <p><span class=\"code\">AncData</span> is a list of ancillary data items that can be received along with the main <span class=\"code\">Data</span>. This list can be empty, or contain a single <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#record-sctp_sndrcvinfo\"><span class=\"code\">#sctp_sndrcvinfo{}</span></a></span> record if receiving of such ancillary data is enabled (see option <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#option-sctp_events\"><span class=\"code\">sctp_events</span></a></span>). It is enabled by default, as such ancillary data provides an easy way of determining the association and stream over which the message is received. (An alternative way is to get the association ID from <span class=\"code\">FromIP</span> and <span class=\"code\">FromPort</span> using socket option <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#option-sctp_get_peer_addr_info\"><span class=\"code\">sctp_get_peer_addr_info</span></a></span>, but this does still not produce the stream number).</p> <p> <span class=\"code\">AncData</span> may also contain <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-ancillary_data\">ancillary data</a></span> from the socket <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-option\">options</a></span> <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#option-recvtos\"><span class=\"code\">recvtos</span></a></span>, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#option-recvtclass\"><span class=\"code\">recvtclass</span></a></span> or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#option-recvttl\"><span class=\"code\">recvttl</span></a></span>, if that is supported by the platform for the socket. </p> <p>The <span class=\"code\">Data</span> received can be a <span class=\"code\">binary()</span> or a <span class=\"code\">list()</span> of bytes (integers in the range 0 through 255) depending on the socket mode, or an SCTP event.</p> <a name=\"sctp_events\"></a> <p>Possible SCTP events:</p> <ul> <li> <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#record-sctp_sndrcvinfo\"><span class=\"code\">#sctp_sndrcvinfo{}</span></a></span> </li> <li> <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#record-sctp_assoc_change\"><span class=\"code\">#sctp_assoc_change{}</span></a></span> </li> <li> <div class=\"example\"><pre>#sctp_paddr_change{ addr = {ip_address(),port()}, state = atom(), error = integer(), assoc_id = assoc_id()}</pre></div> <p>Indicates change of the status of the IP address of the peer specified by <span class=\"code\">addr</span> within association <span class=\"code\">assoc_id</span>. Possible values of <span class=\"code\">state</span> (mostly self-explanatory) include:</p> <dl> <dt><strong><span class=\"code\">addr_unreachable</span></strong></dt> <dd></dd> <dt><strong><span class=\"code\">addr_available</span></strong></dt> <dd></dd> <dt><strong><span class=\"code\">addr_removed</span></strong></dt> <dd></dd> <dt><strong><span class=\"code\">addr_added</span></strong></dt> <dd></dd> <dt><strong><span class=\"code\">addr_made_prim</span></strong></dt> <dd></dd> <dt><strong><span class=\"code\">addr_confirmed</span></strong></dt> <dd></dd> </dl> <p>In case of an error (for example, <span class=\"code\">addr_unreachable</span>), field <span class=\"code\">error</span> provides more diagnostics. In such cases, event <span class=\"code\">#sctp_paddr_change{}</span> is automatically converted into an <span class=\"code\">error</span> term returned by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#recv-1\"><span class=\"code\">recv</span></a></span>. The <span class=\"code\">error</span> field value can be converted into a string using <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#error_string-1\"><span class=\"code\">error_string/1</span></a></span>. </p> </li> <li> <div class=\"example\"><pre>#sctp_send_failed{ flags = true | false, error = integer(), info = #sctp_sndrcvinfo{}, assoc_id = assoc_id() data = binary()}</pre></div> <p>The sender can receive this event if a send operation fails.</p> <dl> <dt><strong><span class=\"code\">flags</span></strong></dt> <dd><p>A Boolean specifying if the data has been transmitted over the wire.</p></dd> <dt><strong><span class=\"code\">error</span></strong></dt> <dd><p>Provides extended diagnostics, use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#error_string-1\"><span class=\"code\">error_string/1</span>.</a></span></p> </dd> <dt><strong><span class=\"code\">info</span></strong></dt> <dd><p>The original <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#record-sctp_sndrcvinfo\"><span class=\"code\">#sctp_sndrcvinfo{}</span></a></span> record used in the failed <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#send-3\"><span class=\"code\">send/*</span>.</a></span></p> </dd> <dt><strong><span class=\"code\">data</span></strong></dt> <dd><p>The whole original data chunk attempted to be sent.</p> </dd> </dl> <p>In the current implementation of the Erlang/SCTP binding, this event is internally converted into an <span class=\"code\">error</span> term returned by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#recv-1\"><span class=\"code\">recv/*</span></a></span>.</p> </li> <li> <div class=\"example\"><pre>#sctp_adaptation_event{ adaptation_ind = integer(), assoc_id = assoc_id()}</pre></div> <p>Delivered when a peer sends an adaptation layer indication parameter (configured through option <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#option-sctp_adaptation_layer\"><span class=\"code\">sctp_adaptation_layer</span></a></span>). Notice that with the current implementation of the Erlang/SCTP binding, this event is disabled by default.</p> </li> <li> <div class=\"example\"><pre>#sctp_pdapi_event{ indication = sctp_partial_delivery_aborted, assoc_id = assoc_id()}</pre></div> <p>A partial delivery failure. In the current implementation of the Erlang/SCTP binding, this event is internally converted into an <span class=\"code\">error</span> term returned by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#recv-1\"><span class=\"code\">recv/*</span></a></span>.</p> </li> </ul> <p></p></div> <a name=\"send-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-send-3-id221633\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L534\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>send(Socket, SndRcvInfo, Data) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SndRcvInfo = #sctp_sndrcvinfo{}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Data = binary() | iolist()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sends the <span class=\"code\">Data</span> message with all sending parameters from a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#record-sctp_sndrcvinfo\"><span class=\"code\">#sctp_sndrcvinfo{}</span></a></span> record. This way, the user can specify the PPID (passed to the remote end) and context (passed to the local SCTP layer), which can be used, for example, for error identification. However, such a fine level of user control is rarely required. The function <span class=\"code\">send/4</span> is sufficient for most applications.</p> <p></p></div> <a name=\"send-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-send-4-id221641\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/gen_sctp.xml#L549\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>send(Socket, Assoc, Stream, Data) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sctp_socket\">sctp_socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Assoc = #sctp_assoc_change{} | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-assoc_id\">assoc_id()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Stream = integer()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Data = binary() | iolist()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sends a <span class=\"code\">Data</span> message over an existing association and specified stream.</p> <p></p></div> ","name":"gen_sctp"}