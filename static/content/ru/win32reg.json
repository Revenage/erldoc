{"summary":"Provides access to the registry on Windows.","description":"<p> </p><p>This module provides read and write access to the registry on Windows. It is essentially a port driver wrapped around the Win32 API calls for accessing the registry.</p> <p>The registry is a hierarchical database, used to store various system and software information in Windows. It contains installation data, and is updated by installers and system programs. The Erlang installer updates the registry by adding data that Erlang needs.</p> <p>The registry contains keys and values. Keys are like the directories in a file system, they form a hierarchy. Values are like files, they have a name and a value, and also a type.</p> <p>Paths to keys are left to right, with subkeys to the right and backslash between keys. (Remember that backslashes must be doubled in Erlang strings.) Case is preserved but not significant.</p> <p>For example, <span class=\"code\">&quot;\\\\hkey_local_machine\\\\software\\\\Ericsson\\\\Erlang\\\\5.0&quot;</span> is the key for the installation data for the latest Erlang release.</p> <p>There are six entry points in the Windows registry, top-level keys. They can be abbreviated in this module as follows:</p> <div class=\"example\"><pre>Abbreviation Registry key============ ============hkcr HKEY_CLASSES_ROOTcurrent_user HKEY_CURRENT_USERhkcu HKEY_CURRENT_USERlocal_machine HKEY_LOCAL_MACHINEhklm HKEY_LOCAL_MACHINEusers HKEY_USERShku HKEY_USERScurrent_config HKEY_CURRENT_CONFIGhkcc HKEY_CURRENT_CONFIGdyn_data HKEY_DYN_DATAhkdd HKEY_DYN_DATA</pre></div> <p>The key above can be written as <span class=\"code\">&quot;\\\\hklm\\\\software\\\\ericsson\\\\erlang\\\\5.0&quot;</span>.</p> <p>This module uses a current key. It works much like the current directory. From the current key, values can be fetched, subkeys can be listed, and so on.</p> <p>Under a key, any number of named values can be stored. They have names, types, and data.</p> <p><span class=\"code\">win32reg</span> supports storing of the following types:</p> <ul> <li><span class=\"code\">REG_DWORD</span>, which is an integer</li> <li><span class=\"code\">REG_SZ</span>, which is a string</li> <li><span class=\"code\">REG_BINARY</span>, which is a binary</li> </ul> <p>Other types can be read, and are returned as binaries.</p> <p>There is also a &quot;default&quot; value, which has the empty string as name. It is read and written with the atom <span class=\"code\">default</span> instead of the name.</p> <p>Some registry values are stored as strings with references to environment variables, for example, <span class=\"code\">%SystemRoot%Windows</span>. <span class=\"code\">SystemRoot</span> is an environment variable, and is to be replaced with its value. Function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#expand-1\"><span class=\"code\">expand/1</span></a></span> is provided so that environment variables surrounded by <span class=\"code\">%</span> can be expanded to their values.</p> <p>For more information on the Windows registry, see consult the Win32 Programmer&apos;s Reference.</p> <p></p>","funcs":" <a name=\"change_key-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-change_key-2-id352075\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/win32reg.xml#L114\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>change_key(RegHandle, Key) -&gt; ReturnValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RegHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-reg_handle\">reg_handle()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = string()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ReturnValue = ok | {error, ErrorId :: atom()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Changes the current key to another key. Works like <span class=\"code\">cd</span>. The key can be specified as a relative path or as an absolute path, starting with <span class=\"code\">\\.</span></p> <p></p></div> <a name=\"change_key_create-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-change_key_create-2-id351068\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/win32reg.xml#L124\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>change_key_create(RegHandle, Key) -&gt; ReturnValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RegHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-reg_handle\">reg_handle()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = string()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ReturnValue = ok | {error, ErrorId :: atom()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a key, or just changes to it, if it is already there. Works like a combination of <span class=\"code\">mkdir</span> and <span class=\"code\">cd</span>. Calls the Win32 API function <span class=\"code\">RegCreateKeyEx()</span>.</p> <p>The registry must have been opened in write mode.</p> <p></p></div> <a name=\"close-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-close-1-id356428\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/win32reg.xml#L135\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>close(RegHandle) -&gt; ok</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RegHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-reg_handle\">reg_handle()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Closes the registry. After that, the <span class=\"code\">RegHandle</span> cannot be used.</p> <p></p></div> <a name=\"current_key-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-current_key-1-id351069\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/win32reg.xml#L144\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>current_key(RegHandle) -&gt; ReturnValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RegHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-reg_handle\">reg_handle()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ReturnValue = {ok, string()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the path to the current key. This is the equivalent of <span class=\"code\">pwd</span>.</p> <p>Notice that the current key is stored in the driver, and can be invalid (for example, if the key has been removed).</p> <p></p></div> <a name=\"delete_key-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-delete_key-1-id356429\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/win32reg.xml#L155\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>delete_key(RegHandle) -&gt; ReturnValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RegHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-reg_handle\">reg_handle()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ReturnValue = ok | {error, ErrorId :: atom()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Deletes the current key, if it is valid. Calls the Win32 API function <span class=\"code\">RegDeleteKey()</span>. Notice that this call does not change the current key (unlike <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#change_key_create-2\"><span class=\"code\">change_key_create/2</span></a></span>). This means that after the call, the current key is invalid.</p> <p></p></div> <a name=\"delete_value-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-delete_value-2-id359182\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/win32reg.xml#L168\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>delete_value(RegHandle, Name) -&gt; ReturnValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RegHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-reg_handle\">reg_handle()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Name = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name\">name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ReturnValue = ok | {error, ErrorId :: atom()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Deletes a named value on the current key. The atom <span class=\"code\">default</span> is used for the default value.</p> <p>The registry must have been opened in write mode.</p> <p></p></div> <a name=\"expand-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-expand-1-id359285\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/win32reg.xml#L178\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>expand(String) -&gt; ExpandedString</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">String = ExpandedString = string()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Expands a string containing environment variables between percent characters. Anything between two <span class=\"code\">%</span> is taken for an environment variable, and is replaced by the value. Two consecutive <span class=\"code\">%</span> are replaced by one <span class=\"code\">%</span>.</p> <p>A variable name that is not in the environment results in an error.</p> <p></p></div> <a name=\"format_error-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-format_error-1-id359371\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/win32reg.xml#L191\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>format_error(ErrorId) -&gt; ErrorString</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ErrorId = atom()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ErrorString = string()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Converts a POSIX error code to a string (by calling <span class=\"code\">erl_posix_msg:message/1</span>).</p> <p></p></div> <a name=\"open-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-open-1-id359367\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/win32reg.xml#L200\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>open(OpenModeList) -&gt; ReturnValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">OpenModeList = [OpenMode]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">OpenMode = read | write</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ReturnValue = {ok, RegHandle} | {error, ErrorId :: enotsup}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RegHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-reg_handle\">reg_handle()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Opens the registry for reading or writing. The current key is the root (<span class=\"code\">HKEY_CLASSES_ROOT</span>). Flag <span class=\"code\">read</span> in the mode list can be omitted.</p> <p>Use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#change_key-2\"><span class=\"code\">change_key/2</span></a></span> with an absolute path after <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-1\"><span class=\"code\">open</span></a></span>.</p> <p></p></div> <a name=\"set_value-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-set_value-3-id359607\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/win32reg.xml#L213\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>set_value(RegHandle, Name, Value) -&gt; ReturnValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RegHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-reg_handle\">reg_handle()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Name = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name\">name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Value = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-value\">value()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ReturnValue = ok | {error, ErrorId :: atom()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sets the named (or default) value to <span class=\"code\">value</span>. Calls the Win32 API function <span class=\"code\">RegSetValueEx()</span>. The value can be of three types, and the corresponding registry type is used. The supported types are the following:</p> <ul> <li><span class=\"code\">REG_DWORD</span> for integers</li> <li><span class=\"code\">REG_SZ</span> for strings</li> <li><span class=\"code\">REG_BINARY</span> for binaries</li> </ul> <p>Other types cannot be added or changed.</p> <p>The registry must have been opened in write mode.</p> <p></p></div> <a name=\"sub_keys-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sub_keys-1-id359601\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/win32reg.xml#L232\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sub_keys(RegHandle) -&gt; ReturnValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RegHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-reg_handle\">reg_handle()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ReturnValue = {ok, [SubKey]} | {error, ErrorId :: atom()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SubKey = string()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list of subkeys to the current key. Calls the Win32 API function <span class=\"code\">EnumRegKeysEx()</span>.</p> <p>Avoid calling this on the root keys, as it can be slow.</p> <p></p></div> <a name=\"value-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-value-2-id359381\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/win32reg.xml#L242\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>value(RegHandle, Name) -&gt; ReturnValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RegHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-reg_handle\">reg_handle()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Name = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name\">name()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ReturnValue = <br>&#xA0;&#xA0;&#xA0;&#xA0;{ok, Value :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-value\">value()</a></span>} | {error, ErrorId :: atom()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Retrieves the named value (or default) on the current key. Registry values of type <span class=\"code\">REG_SZ</span> are returned as strings. Type <span class=\"code\">REG_DWORD</span> values are returned as integers. All other types are returned as binaries.</p> <p></p></div> <a name=\"values-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-values-1-id359895\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/win32reg.xml#L253\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>values(RegHandle) -&gt; ReturnValue</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RegHandle = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-reg_handle\">reg_handle()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ReturnValue = {ok, [ValuePair]} | {error, ErrorId :: atom()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ValuePair = {Name :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name\">name()</a></span>, Value :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-value\">value()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Retrieves a list of all values on the current key. The values have types corresponding to the registry types, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#value-2\"><span class=\"code\">value/2</span></a></span>. Calls the Win32 API function <span class=\"code\">EnumRegValuesEx()</span>.</p> <p></p></div> ","name":"win32reg"}