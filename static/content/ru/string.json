{"summary":"String processing functions.","description":"<p> </p><p>This module provides functions for string processing.</p> <p>A string in this module is represented by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\"><span class=\"code\">unicode:chardata()</span></a></span>, that is, a list of codepoints, binaries with UTF-8-encoded codepoints (<strong>UTF-8 binaries</strong>), or a mix of the two.</p> <div class=\"example example-none\"><pre>&quot;abcd&quot; is a valid string&lt;&lt;&quot;abcd&quot;&gt;&gt; is a valid string[&quot;abcd&quot;] is a valid string&lt;&lt;&quot;abc..&#xE5;&#xE4;&#xF6;&quot;/utf8&gt;&gt; is a valid string&lt;&lt;&quot;abc..&#xE5;&#xE4;&#xF6;&quot;&gt;&gt; is NOT a valid string, but a binary with Latin-1-encoded codepoints[&lt;&lt;&quot;abc&quot;&gt;&gt;, &quot;..&#xE5;&#xE4;&#xF6;&quot;] is a valid string[atom] is NOT a valid string</pre></div> <p> This module operates on grapheme clusters. A <strong>grapheme cluster</strong> is a user-perceived character, which can be represented by several codepoints. </p> <div class=\"example example-none\"><pre>&quot;&#xE5;&quot; [229] or [97, 778]&quot;e&#x30A;&quot; [101, 778]</pre></div> <p> The string length of &quot;&#xDF;&#x2191;e&#x30A;&quot; is 3, even though it is represented by the codepoints <span class=\"code\">[223,8593,101,778]</span> or the UTF-8 binary <span class=\"code\">&lt;&lt;195,159,226,134,145,101,204,138&gt;&gt;</span>. </p> <p> Grapheme clusters for codepoints of class <span class=\"code\">prepend</span> and non-modern (or decomposed) Hangul is not handled for performance reasons in <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#find-3\"><span class=\"code\">find/3</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#replace-3\"><span class=\"code\">replace/3</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#split-2\"><span class=\"code\">split/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#lexemes-2\"><span class=\"code\">split/2</span></a></span> and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#trim-3\"><span class=\"code\">trim/3</span></a></span>. </p> <p> Splitting and appending strings is to be done on grapheme clusters borders. There is no verification that the results of appending strings are valid or normalized. </p> <p> Most of the functions expect all input to be normalized to one form, see for example <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#characters_to_nfc_list-1\"><span class=\"code\">unicode:characters_to_nfc_list/1</span></a></span>. </p> <p> Language or locale specific handling of input is not considered in any function. </p> <p> The functions can crash for non-valid input strings. For example, the functions expect UTF-8 binaries but not all functions verify that all binaries are encoded correctly. </p> <p> Unless otherwise specified the return value type is the same as the input type. That is, binary input returns binary output, list input returns a list output, and mixed input can return a mixed output.</p> <div class=\"example example-none\"><pre>1&gt; string:trim(&quot; sarah &quot;).&quot;sarah&quot;2&gt; string:trim(&lt;&lt;&quot; sarah &quot;&gt;&gt;).&lt;&lt;&quot;sarah&quot;&gt;&gt;3&gt; string:lexemes(&quot;foo bar&quot;, &quot; &quot;).[&quot;foo&quot;,&quot;bar&quot;]4&gt; string:lexemes(&lt;&lt;&quot;foo bar&quot;&gt;&gt;, &quot; &quot;).[&lt;&lt;&quot;foo&quot;&gt;&gt;,&lt;&lt;&quot;bar&quot;&gt;&gt;]</pre></div> <p>This module has been reworked in Erlang/OTP 20 to handle <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\"><span class=\"code\">unicode:chardata()</span></a></span> and operate on grapheme clusters. The <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#oldapi\"><span class=\"code\">old functions</span></a></span> that only work on Latin-1 lists as input are still available but should not be used, they will be deprecated in a future release. </p> <p></p>","funcs":" <a name=\"casefold-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-casefold-1-id357571\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L132\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>casefold(String :: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p> Converts <span class=\"code\">String</span> to a case-agnostic comparable string. Function <span class=\"code\">casefold/1</span> is preferred over <span class=\"code\">lowercase/1</span> when two strings are to be compared for equality. See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#equal-4\"><span class=\"code\">equal/4</span></a></span>. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:casefold(&quot;&#x3A9; and &#x1E9E; SHARP S&quot;).</span>&quot;&#x3C9; and ss sharp s&quot;</pre></div> <p></p></div> <a name=\"chomp-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-chomp-1-id350129\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L149\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>chomp(String :: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p> Returns a string where any trailing <span class=\"code\">\\n</span> or <span class=\"code\">\\r\\n</span> have been removed from <span class=\"code\">String</span>. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>182&gt; <span class=\"bold_code bc-12\">string:chomp(&lt;&lt;&quot;\\nHello\\n\\n&quot;&gt;&gt;).</span>&lt;&lt;&quot;\\nHello&quot;&gt;&gt;183&gt; <span class=\"bold_code bc-12\">string:chomp(&quot;\\nHello\\r\\r\\n&quot;).</span>&quot;\\nHello\\r&quot;</pre></div> <p></p></div> <a name=\"equal-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-equal-2-id350956\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L166\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>equal(A, B) -&gt; boolean()</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"equal-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-equal-3-id358989\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L166\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>equal(A, B, IgnoreCase) -&gt; boolean()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"equal-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-equal-4-id353097\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L166\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>equal(A, B, IgnoreCase, Norm) -&gt; boolean()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">A = B = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IgnoreCase = boolean()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Norm = none | nfc | nfd | nfkc | nfkd</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p> Returns <span class=\"code\">true</span> if <span class=\"code\">A</span> and <span class=\"code\">B</span> are equal, otherwise <span class=\"code\">false</span>. </p> <p> If <span class=\"code\">IgnoreCase</span> is <span class=\"code\">true</span> the function does <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#casefold-1\"><span class=\"code\">casefold</span>ing</a></span> on the fly before the equality test. </p> <p>If <span class=\"code\">Norm</span> is not <span class=\"code\">none</span> the function applies normalization on the fly before the equality test. There are four available normalization forms: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#characters_to_nfc_list-1\"><span class=\"code\">nfc</span></a></span>, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#characters_to_nfd_list-1\"><span class=\"code\">nfd</span></a></span>, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#characters_to_nfkc_list-1\"><span class=\"code\">nfkc</span></a></span>, and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#characters_to_nfkd_list-1\"><span class=\"code\">nfkd</span></a></span>. </p> <p>By default, <span class=\"code\">IgnoreCase</span> is <span class=\"code\">false</span> and <span class=\"code\">Norm</span> is <span class=\"code\">none</span>.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:equal(&quot;&#xE5;&#xE4;&#xF6;&quot;, &lt;&lt;&quot;&#xE5;&#xE4;&#xF6;&quot;/utf8&gt;&gt;).</span>true2&gt; <span class=\"bold_code bc-12\">string:equal(&quot;&#xE5;&#xE4;&#xF6;&quot;, unicode:characters_to_nfd_binary(&quot;&#xE5;&#xE4;&#xF6;&quot;)).</span>false3&gt; <span class=\"bold_code bc-12\">string:equal(&quot;&#xE5;&#xE4;&#xF6;&quot;, unicode:characters_to_nfd_binary(&quot;&#xC5;&#xC4;&#xD6;&quot;), true, nfc).</span>true</pre></div> <p></p></div> <a name=\"find-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-find-2-id359263\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L203\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>find(String, SearchPattern) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span> | nomatch</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"find-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-find-3-id359348\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L203\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>find(String, SearchPattern, Dir) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span> | nomatch</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">String = SearchPattern = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-direction\">direction()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p> Removes anything before <span class=\"code\">SearchPattern</span> in <span class=\"code\">String</span> and returns the remainder of the string or <span class=\"code\">nomatch</span> if <span class=\"code\">SearchPattern</span> is not found. <span class=\"code\">Dir</span>, which can be <span class=\"code\">leading</span> or <span class=\"code\">trailing</span>, indicates from which direction characters are to be searched. </p> <p> By default, <span class=\"code\">Dir</span> is <span class=\"code\">leading</span>. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:find(&quot;ab..cd..ef&quot;, &quot;.&quot;).</span>&quot;..cd..ef&quot;2&gt; <span class=\"bold_code bc-12\">string:find(&lt;&lt;&quot;ab..cd..ef&quot;&gt;&gt;, &quot;..&quot;, trailing).</span>&lt;&lt;&quot;..ef&quot;&gt;&gt;3&gt; <span class=\"bold_code bc-12\">string:find(&lt;&lt;&quot;ab..cd..ef&quot;&gt;&gt;, &quot;x&quot;, leading).</span>nomatch4&gt; <span class=\"bold_code bc-12\">string:find(&quot;ab..cd..ef&quot;, &quot;x&quot;, trailing).</span>nomatch</pre></div> <p></p></div> <a name=\"is_empty-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-is_empty-1-id359523\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L232\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>is_empty(String :: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>) -&gt; boolean()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if <span class=\"code\">String</span> is the empty string, otherwise <span class=\"code\">false</span>.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:is_empty(&quot;foo&quot;).</span>false2&gt; <span class=\"bold_code bc-12\">string:is_empty([&quot;&quot;,&lt;&lt;&gt;&gt;]).</span>true</pre></div> <p></p></div> <a name=\"length-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-length-1-id359630\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L247\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>length(String :: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>) -&gt; integer() &gt;= 0</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p> Returns the number of grapheme clusters in <span class=\"code\">String</span>. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:length(&quot;&#xDF;&#x2191;e&#x30A;&quot;).</span>32&gt; <span class=\"bold_code bc-12\">string:length(&lt;&lt;195,159,226,134,145,101,204,138&gt;&gt;).</span>3</pre></div> <p></p></div> <a name=\"lexemes-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-lexemes-2-id359728\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L263\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>lexemes(String :: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>,<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;SeparatorList :: [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-grapheme_cluster\">grapheme_cluster()</a></span>]) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>]</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p> Returns a list of lexemes in <span class=\"code\">String</span>, separated by the grapheme clusters in <span class=\"code\">SeparatorList</span>. </p> <p> Notice that, as shown in this example, two or more adjacent separator graphemes clusters in <span class=\"code\">String</span> are treated as one. That is, there are no empty strings in the resulting list of lexemes. See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#split-3\"><span class=\"code\">split/3</span></a></span> which returns empty strings. </p> <p>Notice that <span class=\"code\">[$\\r,$\\n]</span> is one grapheme cluster.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:lexemes(&quot;abc de&#x30A;fxxghix jkl\\r\\nfoo&quot;, &quot;x e&quot; ++ [[$\\r,$\\n]]).</span>[&quot;abc&quot;,&quot;de&#x30A;f&quot;,&quot;ghi&quot;,&quot;jkl&quot;,&quot;foo&quot;]2&gt; <span class=\"bold_code bc-12\">string:lexemes(&lt;&lt;&quot;abc de&#x30A;fxxghix jkl\\r\\nfoo&quot;/utf8&gt;&gt;, &quot;x e&quot; ++ [$\\r,$\\n]).</span>[&lt;&lt;&quot;abc&quot;&gt;&gt;,&lt;&lt;&quot;de&#x30A;f&quot;/utf8&gt;&gt;,&lt;&lt;&quot;ghi&quot;&gt;&gt;,&lt;&lt;&quot;jkl\\r\\nfoo&quot;&gt;&gt;]</pre></div> <p></p></div> <a name=\"lowercase-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-lowercase-1-id359773\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L289\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>lowercase(String :: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p> Converts <span class=\"code\">String</span> to lowercase. </p> <p> Notice that function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#casefold-1\"><span class=\"code\">casefold/1</span></a></span> should be used when converting a string to be tested for equality. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>2&gt; <span class=\"bold_code bc-12\">string:lowercase(string:uppercase(&quot;Micha&#x142;&quot;)).</span>&quot;micha&#x142;&quot;</pre></div> <p></p></div> <a name=\"next_codepoint-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-next_codepoint-1-id360019\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L308\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>next_codepoint(String :: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;maybe_improper_list(char(), <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>) |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p> Returns the first codepoint in <span class=\"code\">String</span> and the rest of <span class=\"code\">String</span> in the tail. Returns an empty list if <span class=\"code\">String</span> is empty or an <span class=\"code\">{error, String}</span> tuple if the next byte is invalid. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:next_codepoint(unicode:characters_to_binary(&quot;e&#x30A;fg&quot;)).</span>[101|&lt;&lt;&quot;&#x30A;fg&quot;/utf8&gt;&gt;]</pre></div> <p></p></div> <a name=\"next_grapheme-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-next_grapheme-1-id360009\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L325\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>next_grapheme(String :: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;maybe_improper_list(<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-grapheme_cluster\">grapheme_cluster()</a></span>,<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>) |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p> Returns the first grapheme cluster in <span class=\"code\">String</span> and the rest of <span class=\"code\">String</span> in the tail. Returns an empty list if <span class=\"code\">String</span> is empty or an <span class=\"code\">{error, String}</span> tuple if the next byte is invalid. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:next_grapheme(unicode:characters_to_binary(&quot;e&#x30A;fg&quot;)).</span>[&quot;e&#x30A;&quot;|&lt;&lt;&quot;fg&quot;&gt;&gt;]</pre></div> <p></p></div> <a name=\"nth_lexeme-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-nth_lexeme-3-id360207\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L342\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>nth_lexeme(String, N, SeparatorList) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">String = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SeparatorList = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-grapheme_cluster\">grapheme_cluster()</a></span>]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns lexeme number <span class=\"code\">N</span> in <span class=\"code\">String</span>, where lexemes are separated by the grapheme clusters in <span class=\"code\">SeparatorList</span>. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:nth_lexeme(&quot;abc.de&#x30A;f.ghiejkl&quot;, 3, &quot;.e&quot;).</span>&quot;ghi&quot;</pre></div> <p></p></div> <a name=\"pad-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pad-2-id360009\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L357\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pad(String, Length) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-charlist\">unicode:charlist()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"pad-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pad-3-id360507\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L357\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pad(String, Length, Dir) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-charlist\">unicode:charlist()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"pad-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pad-4-id360656\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L357\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pad(String, Length, Dir, Char) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-charlist\">unicode:charlist()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">String = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Length = integer()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-direction\">direction()</a></span> | both</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Char = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-grapheme_cluster\">grapheme_cluster()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p> Pads <span class=\"code\">String</span> to <span class=\"code\">Length</span> with grapheme cluster <span class=\"code\">Char</span>. <span class=\"code\">Dir</span>, which can be <span class=\"code\">leading</span>, <span class=\"code\">trailing</span>, or <span class=\"code\">both</span>, indicates where the padding should be added. </p> <p>By default, <span class=\"code\">Char</span> is <span class=\"code\">$\\s</span> and <span class=\"code\">Dir</span> is <span class=\"code\">trailing</span>. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:pad(&lt;&lt;&quot;He&#x30A;ll&#xF6;&quot;/utf8&gt;&gt;, 8).</span>[&lt;&lt;72,101,204,138,108,108,195,182&gt;&gt;,32,32,32]2&gt; <span class=\"bold_code bc-12\">io:format(&quot;&apos;~ts&apos;~n&quot;,[string:pad(&quot;He&#x30A;ll&#xF6;&quot;, 8, leading)]).</span>&apos; He&#x30A;ll&#xF6;&apos;3&gt; <span class=\"bold_code bc-12\">io:format(&quot;&apos;~ts&apos;~n&quot;,[string:pad(&quot;He&#x30A;ll&#xF6;&quot;, 8, both)]).</span>&apos; He&#x30A;ll&#xF6; &apos;</pre></div> <p></p></div> <a name=\"prefix-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-prefix-2-id360818\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L383\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>prefix(String :: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>, Prefix :: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;nomatch | <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p> If <span class=\"code\">Prefix</span> is the prefix of <span class=\"code\">String</span>, removes it and returns the remainder of <span class=\"code\">String</span>, otherwise returns <span class=\"code\">nomatch</span>. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:prefix(&lt;&lt;&quot;prefix of string&quot;&gt;&gt;, &quot;pre&quot;).</span>&lt;&lt;&quot;fix of string&quot;&gt;&gt;2&gt; <span class=\"bold_code bc-12\">string:prefix(&quot;pre&quot;, &quot;prefix&quot;).</span>nomatch</pre></div> <p></p></div> <a name=\"replace-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-replace-3-id360956\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L402\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>replace(String, SearchPattern, Replacement) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>]</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"replace-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-replace-4-id361076\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L402\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>replace(String, SearchPattern, Replacement, Where) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>]</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">String = SearchPattern = Replacement = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Where = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-direction\">direction()</a></span> | all</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p> Replaces <span class=\"code\">SearchPattern</span> in <span class=\"code\">String</span> with <span class=\"code\">Replacement</span>. <span class=\"code\">Where</span>, default <span class=\"code\">leading</span>, indicates whether the <span class=\"code\">leading</span>, the <span class=\"code\">trailing</span> or <span class=\"code\">all</span> encounters of <span class=\"code\">SearchPattern</span> are to be replaced. </p> <p>Can be implemented as:</p> <div class=\"example\"><pre>lists:join(Replacement, split(String, SearchPattern, Where)).</pre></div> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:replace(&lt;&lt;&quot;ab..cd..ef&quot;&gt;&gt;, &quot;..&quot;, &quot;*&quot;).</span>[&lt;&lt;&quot;ab&quot;&gt;&gt;,&quot;*&quot;,&lt;&lt;&quot;cd..ef&quot;&gt;&gt;]2&gt; <span class=\"bold_code bc-12\">string:replace(&lt;&lt;&quot;ab..cd..ef&quot;&gt;&gt;, &quot;..&quot;, &quot;*&quot;, all).</span>[&lt;&lt;&quot;ab&quot;&gt;&gt;,&quot;*&quot;,&lt;&lt;&quot;cd&quot;&gt;&gt;,&quot;*&quot;,&lt;&lt;&quot;ef&quot;&gt;&gt;]</pre></div> <p></p></div> <a name=\"reverse-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-reverse-1-id360973\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L425\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>reverse(String :: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>) -&gt; [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-grapheme_cluster\">grapheme_cluster()</a></span>]</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p> Returns the reverse list of the grapheme clusters in <span class=\"code\">String</span>. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; Reverse = <span class=\"bold_code bc-12\">string:reverse(unicode:characters_to_nfd_binary(&quot;&#xC5;&#xC4;&#xD6;&quot;)).</span>[[79,776],[65,776],[65,778]]2&gt; <span class=\"bold_code bc-12\">io:format(&quot;~ts~n&quot;,[Reverse]).</span>O&#x308;A&#x308;A&#x30A;</pre></div> <p></p></div> <a name=\"slice-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-slice-2-id361344\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L441\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>slice(String, Start) -&gt; Slice</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"slice-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-slice-3-id361378\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L441\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>slice(String, Start, Length) -&gt; Slice</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">String = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Start = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Length = infinity | integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Slice = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a substring of <span class=\"code\">String</span> of at most <span class=\"code\">Length</span> grapheme clusters, starting at position <span class=\"code\">Start</span>.</p> <p>By default, <span class=\"code\">Length</span> is <span class=\"code\">infinity</span>.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:slice(&lt;&lt;&quot;He&#x30A;ll&#xF6; W&#xF6;rld&quot;/utf8&gt;&gt;, 4).</span>&lt;&lt;&quot;&#xF6; W&#xF6;rld&quot;/utf8&gt;&gt;2&gt; <span class=\"bold_code bc-12\">string:slice([&quot;He&#x30A;ll&#xF6; &quot;, &lt;&lt;&quot;W&#xF6;rld&quot;/utf8&gt;&gt;], 4,4).</span>&quot;&#xF6; W&#xF6;&quot;3&gt; <span class=\"bold_code bc-12\">string:slice([&quot;He&#x30A;ll&#xF6; &quot;, &lt;&lt;&quot;W&#xF6;rld&quot;/utf8&gt;&gt;], 4,50).</span>&quot;&#xF6; W&#xF6;rld&quot;</pre></div> <p></p></div> <a name=\"split-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-split-2-id361345\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L461\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>split(String, SearchPattern) -&gt; [<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>]</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"split-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-split-3-id361596\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L461\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>split(String, SearchPattern, Where) -&gt; [<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>]</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">String = SearchPattern = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Where = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-direction\">direction()</a></span> | all</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p> Splits <span class=\"code\">String</span> where <span class=\"code\">SearchPattern</span> is encountered and return the remaining parts. <span class=\"code\">Where</span>, default <span class=\"code\">leading</span>, indicates whether the <span class=\"code\">leading</span>, the <span class=\"code\">trailing</span> or <span class=\"code\">all</span> encounters of <span class=\"code\">SearchPattern</span> will split <span class=\"code\">String</span>. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>0&gt; <span class=\"bold_code bc-12\">string:split(&quot;ab..bc..cd&quot;, &quot;..&quot;).</span>[&quot;ab&quot;,&quot;bc..cd&quot;]1&gt; <span class=\"bold_code bc-12\">string:split(&lt;&lt;&quot;ab..bc..cd&quot;&gt;&gt;, &quot;..&quot;, trailing).</span>[&lt;&lt;&quot;ab..bc&quot;&gt;&gt;,&lt;&lt;&quot;cd&quot;&gt;&gt;]2&gt; <span class=\"bold_code bc-12\">string:split(&lt;&lt;&quot;ab..bc....cd&quot;&gt;&gt;, &quot;..&quot;, all).</span>[&lt;&lt;&quot;ab&quot;&gt;&gt;,&lt;&lt;&quot;bc&quot;&gt;&gt;,&lt;&lt;&gt;&gt;,&lt;&lt;&quot;cd&quot;&gt;&gt;]</pre></div> <p></p></div> <a name=\"take-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-take-2-id361828\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L484\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>take(String, Characters) -&gt; {Leading, Trailing}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"take-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-take-3-id361880\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L484\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>take(String, Characters, Complement) -&gt; {Leading, Trailing}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"take-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-take-4-id361945\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L484\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>take(String, Characters, Complement, Dir) -&gt; {Leading, Trailing}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">String = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Characters = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-grapheme_cluster\">grapheme_cluster()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Complement = boolean()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-direction\">direction()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Leading = Trailing = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Takes characters from <span class=\"code\">String</span> as long as the characters are members of set <span class=\"code\">Characters</span> or the complement of set <span class=\"code\">Characters</span>. <span class=\"code\">Dir</span>, which can be <span class=\"code\">leading</span> or <span class=\"code\">trailing</span>, indicates from which direction characters are to be taken. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>5&gt; <span class=\"bold_code bc-12\">string:take(&quot;abc0z123&quot;, lists:seq($a,$z)).</span>{&quot;abc&quot;,&quot;0z123&quot;}6&gt; <span class=\"bold_code bc-12\">string:take(&lt;&lt;&quot;abc0z123&quot;&gt;&gt;, lists:seq($0,$9), true, leading).</span>{&lt;&lt;&quot;abc&quot;&gt;&gt;,&lt;&lt;&quot;0z123&quot;&gt;&gt;}7&gt; <span class=\"bold_code bc-12\">string:take(&quot;abc0z123&quot;, lists:seq($0,$9), false, trailing).</span>{&quot;abc0z&quot;,&quot;123&quot;}8&gt; <span class=\"bold_code bc-12\">string:take(&lt;&lt;&quot;abc0z123&quot;&gt;&gt;, lists:seq($a,$z), true, trailing).</span>{&lt;&lt;&quot;abc0z&quot;&gt;&gt;,&lt;&lt;&quot;123&quot;&gt;&gt;}</pre></div> <p></p></div> <a name=\"titlecase-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-titlecase-1-id361845\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L510\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>titlecase(String :: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p> Converts <span class=\"code\">String</span> to titlecase. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:titlecase(&quot;&#xDF; is a SHARP s&quot;).</span>&quot;Ss is a SHARP s&quot;</pre></div> <p></p></div> <a name=\"to_float-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-to_float-1-id361850\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L524\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>to_float(String) -&gt; {Float, Rest} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">String = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Float = float()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Rest = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = no_float | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Argument <span class=\"code\">String</span> is expected to start with a valid text represented float (the digits are ASCII values). Remaining characters in the string after the float are returned in <span class=\"code\">Rest</span>.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">{F1,Fs} = string:to_float(&quot;1.0-1.0e-1&quot;),</span>&gt; <span class=\"bold_code bc-12\">{F2,[]} = string:to_float(Fs),</span>&gt; <span class=\"bold_code bc-12\">F1+F2.</span>0.9&gt; <span class=\"bold_code bc-12\">string:to_float(&quot;3/2=1.5&quot;).</span>{error,no_float}&gt; <span class=\"bold_code bc-12\">string:to_float(&quot;-1.5eX&quot;).</span>{-1.5,&quot;eX&quot;}</pre></div> <p></p></div> <a name=\"to_integer-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-to_integer-1-id361842\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L546\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>to_integer(String) -&gt; {Int, Rest} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">String = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Int = integer()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Rest = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = no_integer | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Argument <span class=\"code\">String</span> is expected to start with a valid text represented integer (the digits are ASCII values). Remaining characters in the string after the integer are returned in <span class=\"code\">Rest</span>.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>&gt; <span class=\"bold_code bc-12\">{I1,Is} = string:to_integer(&quot;33+22&quot;),</span>&gt; <span class=\"bold_code bc-12\">{I2,[]} = string:to_integer(Is),</span>&gt; <span class=\"bold_code bc-12\">I1-I2.</span>11&gt; <span class=\"bold_code bc-12\">string:to_integer(&quot;0.5&quot;).</span>{0,&quot;.5&quot;}&gt; <span class=\"bold_code bc-12\">string:to_integer(&quot;x=2&quot;).</span>{error,no_integer}</pre></div> <p></p></div> <a name=\"to_graphemes-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-to_graphemes-1-id361843\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L568\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>to_graphemes(String :: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>) -&gt; [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-grapheme_cluster\">grapheme_cluster()</a></span>]</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p> Converts <span class=\"code\">String</span> to a list of grapheme clusters. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:to_graphemes(&quot;&#xDF;&#x2191;e&#x30A;&quot;).</span>[223,8593,[101,778]]2&gt; <span class=\"bold_code bc-12\">string:to_graphemes(&lt;&lt;&quot;&#xDF;&#x2191;e&#x30A;&quot;/utf8&gt;&gt;).</span>[223,8593,[101,778]]</pre></div> <p></p></div> <a name=\"trim-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-trim-1-id362689\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L584\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>trim(String) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"trim-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-trim-2-id362704\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L584\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>trim(String, Dir) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><a name=\"trim-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-trim-3-id362780\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L584\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>trim(String, Dir, Characters) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">String = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-direction\">direction()</a></span> | both</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Characters = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-grapheme_cluster\">grapheme_cluster()</a></span>]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p> Returns a string, where leading or trailing, or both, <span class=\"code\">Characters</span> have been removed. <span class=\"code\">Dir</span> which can be <span class=\"code\">leading</span>, <span class=\"code\">trailing</span>, or <span class=\"code\">both</span>, indicates from which direction characters are to be removed. </p> <p> Default <span class=\"code\">Characters</span> is the set of nonbreakable whitespace codepoints, defined as Pattern_White_Space in <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://unicode.org/reports/tr31/\">Unicode Standard Annex #31</a></span>. <span class=\"code\">By default, Dir</span> is <span class=\"code\">both</span>. </p> <p> Notice that <span class=\"code\">[$\\r,$\\n]</span> is one grapheme cluster according to the Unicode Standard. </p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:trim(&quot;\\t Hello \\n&quot;).</span>&quot;Hello&quot;2&gt; <span class=\"bold_code bc-12\">string:trim(&lt;&lt;&quot;\\t Hello \\n&quot;&gt;&gt;, leading).</span>&lt;&lt;&quot;Hello \\n&quot;&gt;&gt;3&gt; <span class=\"bold_code bc-12\">string:trim(&lt;&lt;&quot;.Hello.\\n&quot;&gt;&gt;, trailing, &quot;\\n.&quot;).</span>&lt;&lt;&quot;.Hello&quot;&gt;&gt;</pre></div> <p></p></div> <a name=\"uppercase-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-uppercase-1-id363028\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/string.xml#L618\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>uppercase(String :: <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 20.0</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p> Converts <span class=\"code\">String</span> to uppercase. </p> <p>See also <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#titlecase-1\"><span class=\"code\">titlecase/1</span></a></span>.</p> <p><strong>Example:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">string:uppercase(&quot;Micha&#x142;&quot;).</span>&quot;MICHA&#x141;&quot;</pre></div> <p></p></div> ","name":"string"}