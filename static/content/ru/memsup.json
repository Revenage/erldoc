{"summary":"A Memory Supervisor Process","description":"<p> </p><p><span class=\"code\">memsup</span> is a process which supervises the memory usage for the system and for individual processes. It is part of the OS_Mon application, see <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/os_mon_app\">os_mon(6)</a></span>. Available for Unix, Windows and VxWorks.</p> <p>Periodically performs a memory check:</p> <ul> <li> <p>If more than a certain amount of available system memory is allocated, as reported by the underlying operating system, the alarm <span class=\"code\">{system_memory_high_watermark, []}</span> is set.</p> </li> <li> <p>If any Erlang process <span class=\"code\">Pid</span> in the system has allocated more than a certain amount of total system memory, the alarm <span class=\"code\">{process_memory_high_watermark, Pid}</span> is set.</p> </li> </ul> <p>Alarms are reported to the SASL alarm handler, see <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/alarm_handler\">alarm_handler(3)</a></span>. To set an alarm, <span class=\"code\">alarm_handler:set_alarm(Alarm)</span> is called where <span class=\"code\">Alarm</span> is either of the alarms specified above.</p> <p>The alarms are cleared automatically when the alarm cause is no longer valid.</p> <p>The function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_memory_data-0\">get_memory_data()</a></span> can be used to retrieve the result of the latest periodic memory check.</p> <p>There is also a interface to system dependent memory data, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_system_memory_data-0\">get_system_memory_data()</a></span>. The result is highly dependent on the underlying operating system and the interface is targeted primarily for systems without virtual memory (e.g. VxWorks). The output on other systems is however still valid, although sparse.</p> <p>A call to <span class=\"code\">get_system_memory_data/0</span> is more costly than a call to <span class=\"code\">get_memory_data/0</span> as data is collected synchronously when this function is called.</p> <p>The total system memory reported under UNIX is the number of physical pages of memory times the page size, and the available memory is the number of available physical pages times the page size. This is a reasonable measure as swapping should be avoided anyway, but the task of defining total memory and available memory is difficult because of virtual memory and swapping.</p> <p></p>","funcs":" <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_memory_data-0-id68331\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/os_mon/doc/src/memsup.xml#L129\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"get_memory_data-0\" href=\"/erldoc/docs/#get_memory_data-0\">get_memory_data() -&gt; {Total,Allocated,Worst}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Total = Allocated = int()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Worst = {Pid, PidAllocated} | undefined</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Pid = pid()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;PidAllocated = int()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the result of the latest memory check, where <span class=\"code\">Total</span> is the total memory size and <span class=\"code\">Allocated</span> the allocated memory size, in bytes.</p> <p><span class=\"code\">Worst</span> is the pid and number of allocated bytes of the largest Erlang process on the node. If <span class=\"code\">memsup</span> should not collect process data, that is if the configuration parameter <span class=\"code\">memsup_system_only</span> was set to <span class=\"code\">true</span>, <span class=\"code\">Worst</span> is <span class=\"code\">undefined</span>.</p> <p>The function is normally asynchronous in the sense that it does not invoke a memory check, but returns the latest available value. The one exception if is the function is called before a first memory check is finished, in which case it does not return a value until the memory check is finished.</p> <p>Returns <span class=\"code\">{0,0,{pid(),0}}</span> or <span class=\"code\">{0,0,undefined}</span> if <span class=\"code\">memsup</span> is not available, or if all memory checks so far have timed out.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_system_memory_data-0-id68430\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/os_mon/doc/src/memsup.xml#L157\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"get_system_memory_data-0\" href=\"/erldoc/docs/#get_system_memory_data-0\">get_system_memory_data() -&gt; MemDataList</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">MemDataList = [{Tag, Size}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Tag = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">&#xA0;Size = int()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Invokes a memory check and returns the resulting, system dependent, data as a list of tagged tuples, where <span class=\"code\">Tag</span> can be one of the following:</p> <dl> <dt><strong><span class=\"code\">total_memory</span></strong></dt> <dd>The total amount of memory available to the Erlang emulator, allocated and free. May or may not be equal to the amount of memory configured in the system.</dd> <dt><strong><span class=\"code\">free_memory</span></strong></dt> <dd>The amount of free memory available to the Erlang emulator for allocation.</dd> <dt><strong><span class=\"code\">system_total_memory</span></strong></dt> <dd>The amount of memory available to the whole operating system. This may well be equal to <span class=\"code\">total_memory</span> but not necessarily.</dd> <dt><strong><span class=\"code\">largest_free</span></strong></dt> <dd>The size of the largest contiguous free memory block available to the Erlang emulator.</dd> <dt><strong><span class=\"code\">number_of_free</span></strong></dt> <dd>The number of free blocks available to the Erlang runtime system. This gives a fair indication of how fragmented the memory is.</dd> <dt><strong><span class=\"code\">buffered_memory</span></strong></dt> <dd> The amount of memory the system uses for temporary storing raw disk blocks. </dd> <dt><strong><span class=\"code\">cached_memory</span></strong></dt> <dd> The amount of memory the system uses for cached files read from disk. </dd> <dt><strong><span class=\"code\">total_swap</span></strong></dt> <dd> The amount of total amount of memory the system has available for disk swap. </dd> <dt><strong><span class=\"code\">free_swap</span></strong></dt> <dd> The amount of memory the system has available for disk swap. </dd> </dl> <p>All memory sizes are presented as number of <strong>bytes</strong>.</p> <p>The <span class=\"code\">largest_free</span> and <span class=\"code\">number_of_free</span> tags are currently only returned on a VxWorks system.</p> <p>Returns the empty list [] if <span class=\"code\">memsup</span> is not available, or if the memory check times out.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p></p><p> On linux the memory available to the emulator is <span class=\"code\">cached_memory</span> and <span class=\"code\">buffered_memory</span> in addition to <span class=\"code\">free_memory</span>.</p> <p></p></div></div> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_os_wordsize-0-id68610\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/os_mon/doc/src/memsup.xml#L218\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"get_os_wordsize-0\" href=\"/erldoc/docs/#get_os_wordsize-0\">get_os_wordsize() -&gt; Wordsize</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Wordsize = 32 | 64 | unsupported_os</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the wordsize of the current running operating system. </p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_check_interval-0-id68642\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/os_mon/doc/src/memsup.xml#L228\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"get_check_interval-0\" href=\"/erldoc/docs/#get_check_interval-0\">get_check_interval() -&gt; MS</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">MS = int()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the time interval, in milliseconds, for the periodic memory check.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-set_check_interval-1-id68674\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/os_mon/doc/src/memsup.xml#L239\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"set_check_interval-1\" href=\"/erldoc/docs/#set_check_interval-1\">set_check_interval(Minutes) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Minutes = int()&gt;0</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Changes the time interval, given in minutes, for the periodic memory check.</p> <p>The change will take effect after the next memory check and is non-persistent. That is, in case of a process restart, this value is forgotten and the default value will be used. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#config\">Configuration</a></span> above.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_procmem_high_watermark-0-id68717\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/os_mon/doc/src/memsup.xml#L254\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"get_procmem_high_watermark-0\" href=\"/erldoc/docs/#get_procmem_high_watermark-0\">get_procmem_high_watermark() -&gt; int()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>Returns the threshold, in percent, for process memory allocation.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-set_procmem_high_watermark-1-id68742\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/os_mon/doc/src/memsup.xml#L262\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"set_procmem_high_watermark-1\" href=\"/erldoc/docs/#set_procmem_high_watermark-1\">set_procmem_high_watermark(Float) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>Changes the threshold, given as a float, for process memory allocation.</p> <p>The change will take effect during the next periodic memory check and is non-persistent. That is, in case of a process restart, this value is forgotten and the default value will be used. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#config\">Configuration</a></span> above.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_sysmem_high_watermark-0-id68778\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/os_mon/doc/src/memsup.xml#L275\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"get_sysmem_high_watermark-0\" href=\"/erldoc/docs/#get_sysmem_high_watermark-0\">get_sysmem_high_watermark() -&gt; int()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>Returns the threshold, in percent, for system memory allocation.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-set_sysmem_high_watermark-1-id68802\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/os_mon/doc/src/memsup.xml#L283\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"set_sysmem_high_watermark-1\" href=\"/erldoc/docs/#set_sysmem_high_watermark-1\">set_sysmem_high_watermark(Float) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>Changes the threshold, given as a float, for system memory allocation.</p> <p>The change will take effect during the next periodic memory check and is non-persistent. That is, in case of a process restart, this value is forgotten and the default value will be used. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#config\">Configuration</a></span> above.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_helper_timeout-0-id68838\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/os_mon/doc/src/memsup.xml#L296\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"get_helper_timeout-0\" href=\"/erldoc/docs/#get_helper_timeout-0\">get_helper_timeout() -&gt; Seconds</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Seconds = int()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the timeout value, in seconds, for memory checks.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-set_helper_timeout-1-id68870\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/os_mon/doc/src/memsup.xml#L306\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"set_helper_timeout-1\" href=\"/erldoc/docs/#set_helper_timeout-1\">set_helper_timeout(Seconds) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Seconds = int() (&gt;= 1)</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Changes the timeout value, given in seconds, for memory checks.</p> <p>The change will take effect for the next memory check and is non-persistent. That is, in the case of a process restart, this value is forgotten and the default value will be used. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#config\">Configuration</a></span> above.</p> <p></p></div> ","name":"memsup"}