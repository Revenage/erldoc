{
	"erlref": {
		"header": {
			"copyright": {
				"year": [
					"1996",
					"2018"
				],
				"holder": "Ericsson AB. All Rights Reserved."
			},
			"legalnotice": "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.",
			"title": "proc_lib",
			"prepared": {},
			"docno": {},
			"date": {},
			"rev": {}
		},
		"module": {
			"since": "",
			"$t": "proc_lib"
		},
		"modulesummary": "Functions for asynchronous and synchronous start of processes adhering to the OTP design principles.",
		"description": {
			"p": [
				{
					"seealso": [
						{
							"marker": "doc/design_principles:des_princ",
							"$t": "OTP Design Principles"
						},
						{
							"marker": "doc/design_principles:spec_proc",
							"$t": "sys and proc_lib"
						}
					],
					"c": [
						"gen_server",
						"gen_statem"
					],
					"em": "special processes"
				},
				"Some useful information is initialized when a process starts. The registered names, or the process identifiers, of the parent process, and the parent ancestors, are stored together with information about the function initially called in the process.",
				{
					"c": [
						"normal",
						"proc_lib",
						"shutdown",
						"{shutdown,Term}",
						"shutdown"
					]
				},
				{
					"c": [
						"proc_lib",
						"normal",
						"shutdown",
						"{shutdown,Term}"
					],
					"em": "crash report",
					"seealso": {
						"marker": "sasl:error_logging",
						"$t": "SASL Error Logging"
					}
				},
				{
					"c": [
						"proc_lib",
						"logger"
					],
					"em": [
						"error reports",
						"exits"
					]
				},
				"The crash report contains the previously stored information, such as ancestors and initial function, the termination reason, and information about other processes that terminate as a result of this process terminating."
			]
		},
		"datatypes": {
			"datatype": [
				{
					"name": {
						"name": "spawn_option"
					},
					"desc": {
						"p": {
							"seealso": {
								"marker": "erts:erlang#spawn_opt/4",
								"c": "erlang:spawn_opt/2,3,4,5"
							}
						}
					}
				},
				{
					"name": {
						"name": "priority_level"
					}
				},
				{
					"name": {
						"name": "max_heap_size"
					},
					"desc": {
						"p": {
							"seealso": {
								"marker": "erts:erlang#process_flag_max_heap_size",
								"$t": "erlang:process_flag(max_heap_size, MaxHeapSize)"
							}
						}
					}
				},
				{
					"name": {
						"name": "dict_or_pid"
					}
				}
			]
		},
		"funcs": {
			"func": [
				{
					"name": {
						"name": "format",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Format a crash report.",
					"desc": {
						"p": {
							"seealso": {
								"marker": "#format/2",
								"c": {
									"anno": "CrashReport"
								}
							}
						}
					}
				},
				{
					"name": {
						"name": "format",
						"arity": "2",
						"since": "OTP R16B"
					},
					"fsummary": "Format a crash report.",
					"desc": {
						"note": {
							"p": {
								"c": [
									"error_logger",
									"error_logger",
									"report_cb"
								],
								"seealso": {
									"marker": "kernel:logger_chapter",
									"$t": "logging API"
								}
							}
						},
						"p": {
							"c": [
								"error_logger",
								{
									"anno": "CrashReport"
								},
								"GL",
								"Pid"
							],
							"seealso": {
								"marker": "kernel:logger",
								"c": "logger(3)"
							}
						}
					}
				},
				{
					"name": {
						"name": "format",
						"arity": "3",
						"since": "OTP 18.1"
					},
					"fsummary": "Format a crash report.",
					"desc": {
						"note": {
							"p": {
								"c": [
									"error_logger",
									"error_logger",
									"report_cb"
								],
								"seealso": {
									"marker": "kernel:logger_chapter",
									"$t": "logging API"
								}
							}
						},
						"p": {
							"c": [
								"error_logger",
								{
									"anno": "Depth"
								}
							],
							"anno": "Depth"
						}
					}
				},
				{
					"name": {
						"name": "hibernate",
						"arity": "3",
						"since": ""
					},
					"fsummary": "Hibernate a process until a message is sent to it.",
					"desc": {
						"p": [
							{
								"seealso": {
									"marker": "erts:erlang#hibernate/3",
									"c": "hibernate/3"
								}
							},
							{
								"c": "proc_lib"
							}
						]
					}
				},
				{
					"name": [
						{
							"name": "init_ack",
							"arity": "1",
							"since": ""
						},
						{
							"name": "init_ack",
							"arity": "2",
							"since": ""
						}
					],
					"fsummary": "Used by a process when it has started.",
					"desc": {
						"p": [
							{
								"seealso": {
									"marker": "#start/3",
									"c": "start[_link]/3,4,5"
								},
								"c": {
									"anno": "Parent"
								}
							},
							{
								"c": "init_ack/1"
							},
							"If this function is not called, the start function returns an error tuple (if a link and/or a time-out is used) or hang otherwise.",
							{
								"c": "proc_lib:start_link/3"
							}
						],
						"code": {
							"type": "none",
							"$t": "-module(my_proc).-export([start_link/0]).-export([init/1]).start_link() -> proc_lib:start_link(my_proc, init, [self()]).init(Parent) -> case do_initialization() of ok -> proc_lib:init_ack(Parent, {ok, self()}); {error, Reason} -> exit(Reason) end, loop()...."
						}
					}
				},
				{
					"name": {
						"name": "initial_call",
						"arity": "1",
						"since": ""
					},
					"fsummary": {
						"c": "proc_lib"
					},
					"desc": {
						"p": {
							"c": [
								{
									"anno": "Process"
								},
								"Pid",
								"erlang:process_info(Pid)"
							]
						},
						"note": {
							"p": [
								{
									"c": [
										{
											"anno": "Args"
										},
										"'Argument__1'",
										"'Argument__2'"
									]
								},
								{
									"c": [
										"initial_call/1",
										"{some_module,-work/3-fun-0-,0}",
										"some_module:work/3"
									]
								}
							]
						}
					}
				},
				{
					"name": [
						{
							"name": "spawn",
							"arity": "1",
							"since": ""
						},
						{
							"name": "spawn",
							"arity": "2",
							"since": ""
						},
						{
							"name": "spawn",
							"arity": "3",
							"since": ""
						},
						{
							"name": "spawn",
							"arity": "4",
							"since": ""
						}
					],
					"fsummary": "Spawn a new process.",
					"type": [
						{
							"variable": "Node"
						},
						{
							"variable": "Fun",
							"name_i": "1"
						},
						{
							"variable": "Module"
						},
						{
							"variable": "Function"
						},
						{
							"variable": "Args"
						}
					],
					"desc": {
						"p": {
							"seealso": {
								"marker": "erts:erlang#spawn/1",
								"c": "spawn"
							}
						}
					}
				},
				{
					"name": [
						{
							"name": "spawn_link",
							"arity": "1",
							"since": ""
						},
						{
							"name": "spawn_link",
							"arity": "2",
							"since": ""
						},
						{
							"name": "spawn_link",
							"arity": "3",
							"since": ""
						},
						{
							"name": "spawn_link",
							"arity": "4",
							"since": ""
						}
					],
					"fsummary": "Spawn and link to a new process.",
					"type": [
						{
							"variable": "Node"
						},
						{
							"variable": "Fun",
							"name_i": "1"
						},
						{
							"variable": "Module"
						},
						{
							"variable": "Function"
						},
						{
							"variable": "Args"
						}
					],
					"desc": {
						"p": {
							"seealso": {
								"marker": "erts:erlang#spawn_link/1",
								"c": "spawn_link"
							}
						}
					}
				},
				{
					"name": [
						{
							"name": "spawn_opt",
							"arity": "2",
							"since": ""
						},
						{
							"name": "spawn_opt",
							"arity": "3",
							"since": ""
						},
						{
							"name": "spawn_opt",
							"arity": "4",
							"since": ""
						},
						{
							"name": "spawn_opt",
							"arity": "5",
							"since": ""
						}
					],
					"fsummary": "Spawn a new process with specified options.",
					"type": [
						{
							"variable": "Node"
						},
						{
							"variable": "Fun",
							"name_i": "1"
						},
						{
							"variable": "Module"
						},
						{
							"variable": "Function"
						},
						{
							"variable": "Args"
						},
						{
							"variable": "SpawnOpts"
						}
					],
					"desc": {
						"p": {
							"seealso": {
								"marker": "erts:erlang#spawn_opt/2",
								"c": "spawn_opt"
							}
						},
						"note": {
							"p": {
								"c": [
									"monitor",
									"badarg"
								]
							}
						}
					}
				},
				{
					"name": [
						{
							"name": "start",
							"arity": "3",
							"since": ""
						},
						{
							"name": "start",
							"arity": "4",
							"since": ""
						},
						{
							"name": "start",
							"arity": "5",
							"since": ""
						},
						{
							"name": "start_link",
							"arity": "3",
							"since": ""
						},
						{
							"name": "start_link",
							"arity": "4",
							"since": ""
						},
						{
							"name": "start_link",
							"arity": "5",
							"since": ""
						}
					],
					"fsummary": "Start a new process synchronously.",
					"desc": {
						"p": [
							{
								"em": "must",
								"seealso": [
									{
										"marker": "#init_ack/2",
										"c": "init_ack(Parent, Ret)"
									},
									{
										"marker": "#init_ack/1",
										"c": "init_ack(Ret)"
									}
								],
								"c": [
									"Parent",
									"Ret"
								]
							},
							{
								"c": [
									"start_link/3,4,5",
									"init_ack/1,2",
									{
										"anno": "Reason"
									}
								]
							},
							{
								"c": [
									{
										"anno": "Time"
									},
									{
										"anno": "Time"
									},
									"init_ack",
									"{error, timeout}"
								]
							},
							{
								"c": {
									"anno": "SpawnOpts"
								},
								"seealso": {
									"marker": "erts:erlang#spawn_opt/2",
									"c": "spawn_opt/2,3,4,5"
								}
							}
						],
						"note": {
							"p": {
								"c": [
									"monitor",
									"badarg"
								]
							}
						}
					}
				},
				{
					"name": {
						"name": "stop",
						"arity": "1",
						"since": "OTP 18.0"
					},
					"fsummary": "Terminate a process synchronously.",
					"type": {
						"variable": "Process"
					},
					"desc": {
						"p": {
							"seealso": {
								"marker": "#stop/3",
								"c": "stop(Process, normal, infinity)"
							}
						}
					}
				},
				{
					"name": {
						"name": "stop",
						"arity": "3",
						"since": "OTP 18.0"
					},
					"fsummary": "Terminate a process synchronously.",
					"type": [
						{
							"variable": "Process"
						},
						{
							"variable": "Reason"
						},
						{
							"variable": "Timeout"
						}
					],
					"desc": {
						"p": [
							{
								"c": "Reason"
							},
							{
								"c": [
									"ok",
									"Reason",
									"Timeout"
								]
							},
							{
								"c": "timeout"
							},
							{
								"c": "noproc"
							},
							{
								"c": "terminate",
								"seealso": [
									{
										"marker": "sys",
										"c": "sys(3)"
									},
									{
										"marker": "doc/design_principles:spec_proc",
										"$t": "sys and proc_lib"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "translate_initial_call",
						"arity": "1",
						"since": ""
					},
					"fsummary": {
						"c": "proc_lib"
					},
					"desc": {
						"p": [
							{
								"seealso": [
									{
										"marker": "c#i/0",
										"c": "c:i/0"
									},
									{
										"marker": "c#regs/0",
										"c": "c:regs/0"
									}
								]
							},
							{
								"c": [
									{
										"anno": "Process"
									},
									"Pid",
									"erlang:process_info(Pid)"
								]
							},
							{
								"c": [
									"gen_server",
									"gen_event",
									"gen_server",
									{
										"anno": "Module"
									},
									{
										"anno": "Function"
									},
									"init"
								]
							},
							{
								"c": [
									"supervisor",
									"supervisor_bridge",
									"gen_server",
									{
										"anno": "Module"
									},
									"supervisor",
									{
										"anno": "Function"
									},
									{
										"anno": "Arity"
									},
									"1",
									"init/1"
								]
							},
							{
								"c": [
									"{proc_lib,init_p,5}",
									"proc_lib"
								]
							}
						]
					}
				}
			]
		},
		"section": {
			"title": "See Also",
			"p": [
				{
					"seealso": {
						"marker": "kernel:error_logger",
						"c": "error_logger(3)"
					}
				},
				{
					"seealso": {
						"marker": "kernel:logger",
						"c": "logger(3)"
					}
				}
			]
		}
	}
}