{"summary":" Standard OpenGL api.","description":"<p></p><p> Standard OpenGL api. See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">www.khronos.org</a></span></p> <p>Booleans are represented by integers 0 and 1.</p><p></p>","funcs":"<table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clearIndex-1-id495861\"></span><a class=\"title_link\" name=\"clearIndex-1\" href=\"/erldoc/docs/#clearIndex-1\">clearIndex(C) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">C = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clearIndex-1\"></a> </p><p>Specify the clear value for the color index buffers</p> <p><span class=\"code\">gl:clearIndex</span> specifies the index used by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#clear-1\">gl:clear/1</a></span> to clear the color index buffers. <span class=\"code\">C</span> is not clamped. Rather, <span class=\"code\">C</span> is converted to a fixed-point value with unspecified precision to the right of the binary point. The integer part of this value is then masked with 2 m-1, where m is the number of bits in a color index stored in the frame buffer.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glClearIndex.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clearColor-4-id495920\"></span><a class=\"title_link\" name=\"clearColor-4\" href=\"/erldoc/docs/#clearColor-4\">clearColor(Red, Green, Blue, Alpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Alpha = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clearColor-4\"></a> </p><p>Specify clear values for the color buffers</p> <p><span class=\"code\">gl:clearColor</span> specifies the red, green, blue, and alpha values used by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#clear-1\">gl:clear/1</a></span> to clear the color buffers. Values specified by <span class=\"code\">gl:clearColor</span> are clamped to the range [0 1].</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glClearColor.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clear-1-id496001\"></span><a class=\"title_link\" name=\"clear-1\" href=\"/erldoc/docs/#clear-1\">clear(Mask) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mask = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clear-1\"></a> </p><p>Clear buffers to preset values</p> <p><span class=\"code\">gl:clear</span> sets the bitplane area of the window to values previously selected by <span class=\"code\">gl:clearColor</span> , <span class=\"code\">gl:clearDepth</span>, and <span class=\"code\">gl:clearStencil</span>. Multiple color buffers can be cleared simultaneously by selecting more than one buffer at a time using <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawBuffer-1\">gl:drawBuffer/1</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glClear.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-indexMask-1-id496063\"></span><a class=\"title_link\" name=\"indexMask-1\" href=\"/erldoc/docs/#indexMask-1\">indexMask(Mask) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mask = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"indexMask-1\"></a> </p><p>Control the writing of individual bits in the color index buffers</p> <p><span class=\"code\">gl:indexMask</span> controls the writing of individual bits in the color index buffers. The least significant n bits of <span class=\"code\">Mask</span> , where n is the number of bits in a color index buffer, specify a mask. Where a 1 (one) appears in the mask, it&apos;s possible to write to the corresponding bit in the color index buffer (or buffers). Where a 0 (zero) appears, the corresponding bit is write-protected.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glIndexMask.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-colorMask-4-id496113\"></span><a class=\"title_link\" name=\"colorMask-4\" href=\"/erldoc/docs/#colorMask-4\">colorMask(Red, Green, Blue, Alpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Alpha = 0 | 1</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"colorMask-4\"></a> </p><p>Enable and disable writing of frame buffer color components</p> <p><span class=\"code\">gl:colorMask</span> and <span class=\"code\">gl:colorMaski</span> specify whether the individual color components in the frame buffer can or cannot be written. <span class=\"code\">gl:colorMaski</span> sets the mask for a specific draw buffer, whereas <span class=\"code\">gl:colorMask</span> sets the mask for all draw buffers. If <span class=\"code\">Red</span> is <span class=\"code\">?GL_FALSE</span>, for example, no change is made to the red component of any pixel in any of the color buffers, regardless of the drawing operation attempted.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glColorMask.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-alphaFunc-2-id496186\"></span><a class=\"title_link\" name=\"alphaFunc-2\" href=\"/erldoc/docs/#alphaFunc-2\">alphaFunc(Func, Ref) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Func = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ref = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"alphaFunc-2\"></a> </p><p>Specify the alpha test function</p> <p>The alpha test discards fragments depending on the outcome of a comparison between an incoming fragment&apos;s alpha value and a constant reference value. <span class=\"code\">gl:alphaFunc</span> specifies the reference value and the comparison function. The comparison is performed only if alpha testing is enabled. By default, it is not enabled. (See <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> of <span class=\"code\">?GL_ALPHA_TEST</span>.)</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glAlphaFunc.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-blendFunc-2-id496260\"></span><a class=\"title_link\" name=\"blendFunc-2\" href=\"/erldoc/docs/#blendFunc-2\">blendFunc(Sfactor, Dfactor) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sfactor = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Dfactor = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"blendFunc-2\"></a> </p><p>Specify pixel arithmetic</p> <p>Pixels can be drawn using a function that blends the incoming (source) RGBA values with the RGBA values that are already in the frame buffer (the destination values). Blending is initially disabled. Use <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> with argument <span class=\"code\">?GL_BLEND</span> to enable and disable blending.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBlendFunc.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-logicOp-1-id496331\"></span><a class=\"title_link\" name=\"logicOp-1\" href=\"/erldoc/docs/#logicOp-1\">logicOp(Opcode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Opcode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"logicOp-1\"></a> </p><p>Specify a logical pixel operation for rendering</p> <p><span class=\"code\">gl:logicOp</span> specifies a logical operation that, when enabled, is applied between the incoming RGBA color and the RGBA color at the corresponding location in the frame buffer. To enable or disable the logical operation, call <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> using the symbolic constant <span class=\"code\">?GL_COLOR_LOGIC_OP</span>. The initial value is disabled.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glLogicOp.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-cullFace-1-id496397\"></span><a class=\"title_link\" name=\"cullFace-1\" href=\"/erldoc/docs/#cullFace-1\">cullFace(Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"cullFace-1\"></a> </p><p>Specify whether front- or back-facing facets can be culled</p> <p><span class=\"code\">gl:cullFace</span> specifies whether front- or back-facing facets are culled (as specified by <span class=\"code\">mode</span>) when facet culling is enabled. Facet culling is initially disabled. To enable and disable facet culling, call the <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> commands with the argument <span class=\"code\">?GL_CULL_FACE</span>. Facets include triangles, quadrilaterals, polygons, and rectangles.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCullFace.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-frontFace-1-id496467\"></span><a class=\"title_link\" name=\"frontFace-1\" href=\"/erldoc/docs/#frontFace-1\">frontFace(Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"frontFace-1\"></a> </p><p>Define front- and back-facing polygons</p> <p>In a scene composed entirely of opaque closed surfaces, back-facing polygons are never visible. Eliminating these invisible polygons has the obvious benefit of speeding up the rendering of the image. To enable and disable elimination of back-facing polygons, call <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> with argument <span class=\"code\">?GL_CULL_FACE</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glFrontFace.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pointSize-1-id496531\"></span><a class=\"title_link\" name=\"pointSize-1\" href=\"/erldoc/docs/#pointSize-1\">pointSize(Size) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pointSize-1\"></a> </p><p>Specify the diameter of rasterized points</p> <p><span class=\"code\">gl:pointSize</span> specifies the rasterized diameter of points. If point size mode is disabled (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> with parameter <span class=\"code\">?GL_PROGRAM_POINT_SIZE</span>), this value will be used to rasterize points. Otherwise, the value written to the shading language built-in variable gl_PointSize will be used.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glPointSize.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-lineWidth-1-id496586\"></span><a class=\"title_link\" name=\"lineWidth-1\" href=\"/erldoc/docs/#lineWidth-1\">lineWidth(Width) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"lineWidth-1\"></a> </p><p>Specify the width of rasterized lines</p> <p><span class=\"code\">gl:lineWidth</span> specifies the rasterized width of both aliased and antialiased lines. Using a line width other than 1 has different effects, depending on whether line antialiasing is enabled. To enable and disable line antialiasing, call <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> with argument <span class=\"code\">?GL_LINE_SMOOTH</span>. Line antialiasing is initially disabled.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glLineWidth.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-lineStipple-2-id496647\"></span><a class=\"title_link\" name=\"lineStipple-2\" href=\"/erldoc/docs/#lineStipple-2\">lineStipple(Factor, Pattern) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Factor = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pattern = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"lineStipple-2\"></a> </p><p>Specify the line stipple pattern</p> <p>Line stippling masks out certain fragments produced by rasterization; those fragments will not be drawn. The masking is achieved by using three parameters: the 16-bit line stipple pattern <span class=\"code\">Pattern</span> , the repeat count <span class=\"code\">Factor</span> , and an integer stipple counter s.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glLineStipple.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-polygonMode-2-id496700\"></span><a class=\"title_link\" name=\"polygonMode-2\" href=\"/erldoc/docs/#polygonMode-2\">polygonMode(Face, Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Face = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"polygonMode-2\"></a> </p><p>Select a polygon rasterization mode</p> <p><span class=\"code\">gl:polygonMode</span> controls the interpretation of polygons for rasterization. <span class=\"code\">Face</span> describes which polygons <span class=\"code\">Mode</span> applies to: both front and back-facing polygons (<span class=\"code\">?GL_FRONT_AND_BACK</span> ). The polygon mode affects only the final rasterization of polygons. In particular, a polygon&apos;s vertices are lit and the polygon is clipped and possibly culled before these modes are applied.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glPolygonMode.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-polygonOffset-2-id496768\"></span><a class=\"title_link\" name=\"polygonOffset-2\" href=\"/erldoc/docs/#polygonOffset-2\">polygonOffset(Factor, Units) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Factor = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Units = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"polygonOffset-2\"></a> </p><p>Set the scale and units used to calculate depth values</p> <p>When <span class=\"code\">?GL_POLYGON_OFFSET_FILL</span>, <span class=\"code\">?GL_POLYGON_OFFSET_LINE</span>, or <span class=\"code\">?GL_POLYGON_OFFSET_POINT</span> is enabled, each fragment&apos;s <span class=\"code\">depth</span> value will be offset after it is interpolated from the <span class=\"code\">depth</span> values of the appropriate vertices. The value of the offset is factor&#xD7;DZ+r&#xD7;units, where DZ is a measurement of the change in depth relative to the screen area of the polygon, and r is the smallest value that is guaranteed to produce a resolvable offset for a given implementation. The offset is added before the depth test is performed and before the value is written into the depth buffer.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glPolygonOffset.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-polygonStipple-1-id496835\"></span><a class=\"title_link\" name=\"polygonStipple-1\" href=\"/erldoc/docs/#polygonStipple-1\">polygonStipple(Mask) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mask = binary()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"polygonStipple-1\"></a> </p><p>Set the polygon stippling pattern</p> <p>Polygon stippling, like line stippling (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#lineStipple-2\">gl:lineStipple/2</a></span> ), masks out certain fragments produced by rasterization, creating a pattern. Stippling is independent of polygon antialiasing.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glPolygonStipple.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getPolygonStipple-0-id496883\"></span><a class=\"title_link\" name=\"getPolygonStipple-0\" href=\"/erldoc/docs/#getPolygonStipple-0\">getPolygonStipple() -&gt; binary()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"getPolygonStipple-0\"></a> </p><p>Return the polygon stipple pattern</p> <p><span class=\"code\">gl:getPolygonStipple</span> returns to <span class=\"code\">Pattern</span> a 32&#xD7;32 polygon stipple pattern. The pattern is packed into memory as if <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#readPixels-7\">gl:readPixels/7</a></span> with both <span class=\"code\">height</span> and <span class=\"code\">width</span> of 32, <span class=\"code\">type</span> of <span class=\"code\">?GL_BITMAP</span>, and <span class=\"code\">format</span> of <span class=\"code\">?GL_COLOR_INDEX</span> were called, and the stipple pattern were stored in an internal 32&#xD7;32 color index buffer. Unlike <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#readPixels-7\">gl:readPixels/7</a></span> , however, pixel transfer operations (shift, offset, pixel map) are not applied to the returned stipple image.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetPolygonStipple.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-edgeFlag-1-id496961\"></span><a class=\"title_link\" name=\"edgeFlag-1\" href=\"/erldoc/docs/#edgeFlag-1\">edgeFlag(Flag) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Flag = 0 | 1</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"edgeFlag-1\"></a> </p><p>Flag edges as either boundary or nonboundary</p> <p>Each vertex of a polygon, separate triangle, or separate quadrilateral specified between a <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#begin-1\">gl:&apos;begin&apos;/1</a></span> / <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#begin-1\">gl:&apos;begin&apos;/1</a></span> pair is marked as the start of either a boundary or nonboundary edge. If the current edge flag is true when the vertex is specified, the vertex is marked as the start of a boundary edge. Otherwise, the vertex is marked as the start of a nonboundary edge. <span class=\"code\">gl:edgeFlag</span> sets the edge flag bit to <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">Flag</span> is <span class=\"code\">?GL_TRUE</span> and to <span class=\"code\">?GL_FALSE</span> otherwise.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glEdgeFlag.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-edgeFlagv-1-id497036\"></span><a class=\"title_link\" name=\"edgeFlagv-1\" href=\"/erldoc/docs/#edgeFlagv-1\">edgeFlagv(Flag) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Flag = {Flag::0 | 1}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"edgeFlagv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#edgeFlag-1\">edgeFlag(Flag)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-scissor-4-id497069\"></span><a class=\"title_link\" name=\"scissor-4\" href=\"/erldoc/docs/#scissor-4\">scissor(X, Y, Width, Height) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"scissor-4\"></a> </p><p>Define the scissor box</p> <p><span class=\"code\">gl:scissor</span> defines a rectangle, called the scissor box, in window coordinates. The first two arguments, <span class=\"code\">X</span> and <span class=\"code\">Y</span> , specify the lower left corner of the box. <span class=\"code\">Width</span> and <span class=\"code\">Height</span> specify the width and height of the box.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glScissor.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clipPlane-2-id497135\"></span><a class=\"title_link\" name=\"clipPlane-2\" href=\"/erldoc/docs/#clipPlane-2\">clipPlane(Plane, Equation) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Plane = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Equation = {float(), float(), float(), float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clipPlane-2\"></a> </p><p>Specify a plane against which all geometry is clipped</p> <p>Geometry is always clipped against the boundaries of a six-plane frustum in <span class=\"code\">x</span>, <span class=\"code\">y</span> , and <span class=\"code\">z</span>. <span class=\"code\">gl:clipPlane</span> allows the specification of additional planes, not necessarily perpendicular to the <span class=\"code\">x</span>, <span class=\"code\">y</span>, or <span class=\"code\">z</span> axis, against which all geometry is clipped. To determine the maximum number of additional clipping planes, call <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getBooleanv-1\">gl:getBooleanv/1</a></span> with argument <span class=\"code\">?GL_MAX_CLIP_PLANES</span>. All implementations support at least six such clipping planes. Because the resulting clipping region is the intersection of the defined half-spaces, it is always convex.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glClipPlane.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getClipPlane-1-id497223\"></span><a class=\"title_link\" name=\"getClipPlane-1\" href=\"/erldoc/docs/#getClipPlane-1\">getClipPlane(Plane) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Plane = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getClipPlane-1\"></a> </p><p>Return the coefficients of the specified clipping plane</p> <p><span class=\"code\">gl:getClipPlane</span> returns in <span class=\"code\">Equation</span> the four coefficients of the plane equation for <span class=\"code\">Plane</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetClipPlane.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawBuffer-1-id497280\"></span><a class=\"title_link\" name=\"drawBuffer-1\" href=\"/erldoc/docs/#drawBuffer-1\">drawBuffer(Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawBuffer-1\"></a> </p><p>Specify which color buffers are to be drawn into</p> <p>When colors are written to the frame buffer, they are written into the color buffers specified by <span class=\"code\">gl:drawBuffer</span>. The specifications are as follows:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawBuffer.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-readBuffer-1-id497330\"></span><a class=\"title_link\" name=\"readBuffer-1\" href=\"/erldoc/docs/#readBuffer-1\">readBuffer(Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"readBuffer-1\"></a> </p><p>Select a color buffer source for pixels</p> <p><span class=\"code\">gl:readBuffer</span> specifies a color buffer as the source for subsequent <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#readPixels-7\">gl:readPixels/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexImage1D-7\">gl:copyTexImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexImage2D-8\">gl:copyTexImage2D/8</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage1D-6\">gl:copyTexSubImage1D/6</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage2D-8\">gl:copyTexSubImage2D/8</a></span> , and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage3D-9\">gl:copyTexSubImage3D/9</a></span> commands. <span class=\"code\">Mode</span> accepts one of twelve or more predefined values. In a fully configured system, <span class=\"code\">?GL_FRONT</span>, <span class=\"code\">?GL_LEFT</span>, and <span class=\"code\">?GL_FRONT_LEFT</span> all name the front left buffer, <span class=\"code\">?GL_FRONT_RIGHT</span> and <span class=\"code\">?GL_RIGHT</span> name the front right buffer, and <span class=\"code\">?GL_BACK_LEFT</span> and <span class=\"code\">?GL_BACK</span> name the back left buffer. Further more, the constants <span class=\"code\">?GL_COLOR_ATTACHMENT</span><span class=\"code\">i</span> may be used to indicate the <span class=\"code\">i</span>th color attachment where <span class=\"code\">i</span> ranges from zero to the value of <span class=\"code\">?GL_MAX_COLOR_ATTACHMENTS</span> minus one.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glReadBuffer.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-enable-1-id497464\"></span><a class=\"title_link\" name=\"enable-1\" href=\"/erldoc/docs/#enable-1\">enable(Cap) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Cap = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"enable-1\"></a> </p><p>Enable or disable server-side GL capabilities</p> <p><span class=\"code\">gl:enable</span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> enable and disable various capabilities. Use <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#isEnabled-1\">gl:isEnabled/1</a></span> or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getBooleanv-1\">gl:getBooleanv/1</a></span> to determine the current setting of any capability. The initial value for each capability with the exception of <span class=\"code\">?GL_DITHER</span> and <span class=\"code\">?GL_MULTISAMPLE</span> is <span class=\"code\">?GL_FALSE</span>. The initial value for <span class=\"code\">?GL_DITHER</span> and <span class=\"code\">?GL_MULTISAMPLE</span> is <span class=\"code\">?GL_TRUE</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glEnable.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-disable-1-id497554\"></span><a class=\"title_link\" name=\"disable-1\" href=\"/erldoc/docs/#disable-1\">disable(Cap) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Cap = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"disable-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#enable-1\">enable/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isEnabled-1-id497590\"></span><a class=\"title_link\" name=\"isEnabled-1\" href=\"/erldoc/docs/#isEnabled-1\">isEnabled(Cap) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Cap = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isEnabled-1\"></a> </p><p>Test whether a capability is enabled</p> <p><span class=\"code\">gl:isEnabled</span> returns <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">Cap</span> is an enabled capability and returns <span class=\"code\">?GL_FALSE</span> otherwise. Boolean states that are indexed may be tested with <span class=\"code\">gl:isEnabledi</span> . For <span class=\"code\">gl:isEnabledi</span>, <span class=\"code\">Index</span> specifies the index of the capability to test. <span class=\"code\">Index</span> must be between zero and the count of indexed capabilities for <span class=\"code\">Cap</span> . Initially all capabilities except <span class=\"code\">?GL_DITHER</span> are disabled; <span class=\"code\">?GL_DITHER</span> is initially enabled.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glIsEnabled.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-enableClientState-1-id497677\"></span><a class=\"title_link\" name=\"enableClientState-1\" href=\"/erldoc/docs/#enableClientState-1\">enableClientState(Cap) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Cap = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"enableClientState-1\"></a> </p><p>Enable or disable client-side capability</p> <p><span class=\"code\">gl:enableClientState</span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enableClientState-1\">gl:enableClientState/1</a></span> enable or disable individual client-side capabilities. By default, all client-side capabilities are disabled. Both <span class=\"code\">gl:enableClientState</span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enableClientState-1\">gl:enableClientState/1</a></span> take a single argument, <span class=\"code\">Cap</span> , which can assume one of the following values:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glEnableClientState.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-disableClientState-1-id497746\"></span><a class=\"title_link\" name=\"disableClientState-1\" href=\"/erldoc/docs/#disableClientState-1\">disableClientState(Cap) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Cap = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"disableClientState-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#enableClientState-1\">enableClientState/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getBooleanv-1-id497783\"></span><a class=\"title_link\" name=\"getBooleanv-1\" href=\"/erldoc/docs/#getBooleanv-1\">getBooleanv(Pname) -&gt; [0 | 1]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getBooleanv-1\"></a> </p><p>Return the value or values of a selected parameter</p> <p>These four commands return values for simple state variables in GL. <span class=\"code\">Pname</span> is a symbolic constant indicating the state variable to be returned, and <span class=\"code\">Params</span> is a pointer to an array of the indicated type in which to place the returned data.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGet.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getDoublev-1-id497838\"></span><a class=\"title_link\" name=\"getDoublev-1\" href=\"/erldoc/docs/#getDoublev-1\">getDoublev(Pname) -&gt; [float()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getDoublev-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getBooleanv-1\">getBooleanv/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getFloatv-1-id497874\"></span><a class=\"title_link\" name=\"getFloatv-1\" href=\"/erldoc/docs/#getFloatv-1\">getFloatv(Pname) -&gt; [float()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getFloatv-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getBooleanv-1\">getBooleanv/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getIntegerv-1-id497910\"></span><a class=\"title_link\" name=\"getIntegerv-1\" href=\"/erldoc/docs/#getIntegerv-1\">getIntegerv(Pname) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getIntegerv-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getBooleanv-1\">getBooleanv/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pushAttrib-1-id497947\"></span><a class=\"title_link\" name=\"pushAttrib-1\" href=\"/erldoc/docs/#pushAttrib-1\">pushAttrib(Mask) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mask = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pushAttrib-1\"></a> </p><p>Push and pop the server attribute stack</p> <p><span class=\"code\">gl:pushAttrib</span> takes one argument, a mask that indicates which groups of state variables to save on the attribute stack. Symbolic constants are used to set bits in the mask. <span class=\"code\">Mask</span> is typically constructed by specifying the bitwise-or of several of these constants together. The special mask <span class=\"code\">?GL_ALL_ATTRIB_BITS</span> can be used to save all stackable states.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glPushAttrib.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-popAttrib-0-id498000\"></span><a class=\"title_link\" name=\"popAttrib-0\" href=\"/erldoc/docs/#popAttrib-0\">popAttrib() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"popAttrib-0\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pushAttrib-1\">pushAttrib/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pushClientAttrib-1-id498025\"></span><a class=\"title_link\" name=\"pushClientAttrib-1\" href=\"/erldoc/docs/#pushClientAttrib-1\">pushClientAttrib(Mask) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mask = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pushClientAttrib-1\"></a> </p><p>Push and pop the client attribute stack</p> <p><span class=\"code\">gl:pushClientAttrib</span> takes one argument, a mask that indicates which groups of client-state variables to save on the client attribute stack. Symbolic constants are used to set bits in the mask. <span class=\"code\">Mask</span> is typically constructed by specifying the bitwise-or of several of these constants together. The special mask <span class=\"code\">?GL_CLIENT_ALL_ATTRIB_BITS</span> can be used to save all stackable client state.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glPushClientAttrib.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-popClientAttrib-0-id498079\"></span><a class=\"title_link\" name=\"popClientAttrib-0\" href=\"/erldoc/docs/#popClientAttrib-0\">popClientAttrib() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"popClientAttrib-0\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pushClientAttrib-1\">pushClientAttrib/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-renderMode-1-id498104\"></span><a class=\"title_link\" name=\"renderMode-1\" href=\"/erldoc/docs/#renderMode-1\">renderMode(Mode) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"renderMode-1\"></a> </p><p>Set rasterization mode</p> <p><span class=\"code\">gl:renderMode</span> sets the rasterization mode. It takes one argument, <span class=\"code\">Mode</span> , which can assume one of three predefined values:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glRenderMode.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getError-0-id498157\"></span><a class=\"title_link\" name=\"getError-0\" href=\"/erldoc/docs/#getError-0\">getError() -&gt; enum()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"getError-0\"></a> </p><p>Return error information</p> <p><span class=\"code\">gl:getError</span> returns the value of the error flag. Each detectable error is assigned a numeric code and symbolic name. When an error occurs, the error flag is set to the appropriate error code value. No other errors are recorded until <span class=\"code\">gl:getError</span> is called, the error code is returned, and the flag is reset to <span class=\"code\">?GL_NO_ERROR</span>. If a call to <span class=\"code\">gl:getError</span> returns <span class=\"code\">?GL_NO_ERROR</span>, there has been no detectable error since the last call to <span class=\"code\">gl:getError</span> , or since the GL was initialized.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetError.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getString-1-id498220\"></span><a class=\"title_link\" name=\"getString-1\" href=\"/erldoc/docs/#getString-1\">getString(Name) -&gt; string()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getString-1\"></a> </p><p>Return a string describing the current GL connection</p> <p><span class=\"code\">gl:getString</span> returns a pointer to a static string describing some aspect of the current GL connection. <span class=\"code\">Name</span> can be one of the following:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetString.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-finish-0-id498273\"></span><a class=\"title_link\" name=\"finish-0\" href=\"/erldoc/docs/#finish-0\">finish() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"finish-0\"></a> </p><p>Block until all GL execution is complete</p> <p><span class=\"code\">gl:finish</span> does not return until the effects of all previously called GL commands are complete. Such effects include all changes to GL state, all changes to connection state, and all changes to the frame buffer contents.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glFinish.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-flush-0-id498312\"></span><a class=\"title_link\" name=\"flush-0\" href=\"/erldoc/docs/#flush-0\">flush() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"flush-0\"></a> </p><p>Force execution of GL commands in finite time</p> <p>Different GL implementations buffer commands in several different locations, including network buffers and the graphics accelerator itself. <span class=\"code\">gl:flush</span> empties all of these buffers, causing all issued commands to be executed as quickly as they are accepted by the actual rendering engine. Though this execution may not be completed in any particular time period, it does complete in finite time.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glFlush.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-hint-2-id498354\"></span><a class=\"title_link\" name=\"hint-2\" href=\"/erldoc/docs/#hint-2\">hint(Target, Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"hint-2\"></a> </p><p>Specify implementation-specific hints</p> <p>Certain aspects of GL behavior, when there is room for interpretation, can be controlled with hints. A hint is specified with two arguments. <span class=\"code\">Target</span> is a symbolic constant indicating the behavior to be controlled, and <span class=\"code\">Mode</span> is another symbolic constant indicating the desired behavior. The initial value for each <span class=\"code\">Target</span> is <span class=\"code\">?GL_DONT_CARE</span> . <span class=\"code\">Mode</span> can be one of the following:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glHint.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clearDepth-1-id498428\"></span><a class=\"title_link\" name=\"clearDepth-1\" href=\"/erldoc/docs/#clearDepth-1\">clearDepth(Depth) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Depth = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clearDepth-1\"></a> </p><p>Specify the clear value for the depth buffer</p> <p><span class=\"code\">gl:clearDepth</span> specifies the depth value used by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#clear-1\">gl:clear/1</a></span> to clear the depth buffer. Values specified by <span class=\"code\">gl:clearDepth</span> are clamped to the range [0 1].</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glClearDepth.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-depthFunc-1-id498487\"></span><a class=\"title_link\" name=\"depthFunc-1\" href=\"/erldoc/docs/#depthFunc-1\">depthFunc(Func) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Func = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"depthFunc-1\"></a> </p><p>Specify the value used for depth buffer comparisons</p> <p><span class=\"code\">gl:depthFunc</span> specifies the function used to compare each incoming pixel depth value with the depth value present in the depth buffer. The comparison is performed only if depth testing is enabled. (See <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> of <span class=\"code\">?GL_DEPTH_TEST</span> .)</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDepthFunc.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-depthMask-1-id498552\"></span><a class=\"title_link\" name=\"depthMask-1\" href=\"/erldoc/docs/#depthMask-1\">depthMask(Flag) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Flag = 0 | 1</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"depthMask-1\"></a> </p><p>Enable or disable writing into the depth buffer</p> <p><span class=\"code\">gl:depthMask</span> specifies whether the depth buffer is enabled for writing. If <span class=\"code\">Flag</span> is <span class=\"code\">?GL_FALSE</span>, depth buffer writing is disabled. Otherwise, it is enabled. Initially, depth buffer writing is enabled.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDepthMask.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-depthRange-2-id498605\"></span><a class=\"title_link\" name=\"depthRange-2\" href=\"/erldoc/docs/#depthRange-2\">depthRange(Near_val, Far_val) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Near_val = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Far_val = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"depthRange-2\"></a> </p><p>Specify mapping of depth values from normalized device coordinates to window coordinates</p> <p>After clipping and division by <span class=\"code\">w</span>, depth coordinates range from -1 to 1, corresponding to the near and far clipping planes. <span class=\"code\">gl:depthRange</span> specifies a linear mapping of the normalized depth coordinates in this range to window depth coordinates. Regardless of the actual depth buffer implementation, window coordinate depth values are treated as though they range from 0 through 1 (like color components). Thus, the values accepted by <span class=\"code\">gl:depthRange</span> are both clamped to this range before they are accepted.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDepthRange.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clearAccum-4-id498674\"></span><a class=\"title_link\" name=\"clearAccum-4\" href=\"/erldoc/docs/#clearAccum-4\">clearAccum(Red, Green, Blue, Alpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Alpha = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clearAccum-4\"></a> </p><p>Specify clear values for the accumulation buffer</p> <p><span class=\"code\">gl:clearAccum</span> specifies the red, green, blue, and alpha values used by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#clear-1\">gl:clear/1</a></span> to clear the accumulation buffer.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glClearAccum.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-accum-2-id498731\"></span><a class=\"title_link\" name=\"accum-2\" href=\"/erldoc/docs/#accum-2\">accum(Op, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Op = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"accum-2\"></a> </p><p>Operate on the accumulation buffer</p> <p>The accumulation buffer is an extended-range color buffer. Images are not rendered into it. Rather, images rendered into one of the color buffers are added to the contents of the accumulation buffer after rendering. Effects such as antialiasing (of points, lines, and polygons), motion blur, and depth of field can be created by accumulating images generated with different transformation matrices.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glAccum.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-matrixMode-1-id498783\"></span><a class=\"title_link\" name=\"matrixMode-1\" href=\"/erldoc/docs/#matrixMode-1\">matrixMode(Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"matrixMode-1\"></a> </p><p>Specify which matrix is the current matrix</p> <p><span class=\"code\">gl:matrixMode</span> sets the current matrix mode. <span class=\"code\">Mode</span> can assume one of four values:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glMatrixMode.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-ortho-6-id498835\"></span><a class=\"title_link\" name=\"ortho-6\" href=\"/erldoc/docs/#ortho-6\">ortho(Left, Right, Bottom, Top, Near_val, Far_val) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Left = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Right = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bottom = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Top = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Near_val = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Far_val = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"ortho-6\"></a> </p><p>Multiply the current matrix with an orthographic matrix</p> <p><span class=\"code\">gl:ortho</span> describes a transformation that produces a parallel projection. The current matrix (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#matrixMode-1\">gl:matrixMode/1</a></span> ) is multiplied by this matrix and the result replaces the current matrix, as if <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#multMatrixd-1\">gl:multMatrixd/1</a></span> were called with the following matrix as its argument:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glOrtho.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-frustum-6-id498905\"></span><a class=\"title_link\" name=\"frustum-6\" href=\"/erldoc/docs/#frustum-6\">frustum(Left, Right, Bottom, Top, Near_val, Far_val) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Left = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Right = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bottom = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Top = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Near_val = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Far_val = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"frustum-6\"></a> </p><p>Multiply the current matrix by a perspective matrix</p> <p><span class=\"code\">gl:frustum</span> describes a perspective matrix that produces a perspective projection. The current matrix (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#matrixMode-1\">gl:matrixMode/1</a></span> ) is multiplied by this matrix and the result replaces the current matrix, as if <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#multMatrixd-1\">gl:multMatrixd/1</a></span> were called with the following matrix as its argument:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glFrustum.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-viewport-4-id498975\"></span><a class=\"title_link\" name=\"viewport-4\" href=\"/erldoc/docs/#viewport-4\">viewport(X, Y, Width, Height) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"viewport-4\"></a> </p><p>Set the viewport</p> <p><span class=\"code\">gl:viewport</span> specifies the affine transformation of x and y from normalized device coordinates to window coordinates. Let (x nd y nd) be normalized device coordinates. Then the window coordinates (x w y w) are computed as follows:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glViewport.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pushMatrix-0-id499027\"></span><a class=\"title_link\" name=\"pushMatrix-0\" href=\"/erldoc/docs/#pushMatrix-0\">pushMatrix() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"pushMatrix-0\"></a> </p><p>Push and pop the current matrix stack</p> <p>There is a stack of matrices for each of the matrix modes. In <span class=\"code\">?GL_MODELVIEW</span> mode, the stack depth is at least 32. In the other modes, <span class=\"code\">?GL_COLOR</span>, <span class=\"code\">?GL_PROJECTION</span> , and <span class=\"code\">?GL_TEXTURE</span>, the depth is at least 2. The current matrix in any mode is the matrix on the top of the stack for that mode.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glPushMatrix.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-popMatrix-0-id499078\"></span><a class=\"title_link\" name=\"popMatrix-0\" href=\"/erldoc/docs/#popMatrix-0\">popMatrix() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"popMatrix-0\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pushMatrix-0\">pushMatrix/0</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-loadIdentity-0-id499104\"></span><a class=\"title_link\" name=\"loadIdentity-0\" href=\"/erldoc/docs/#loadIdentity-0\">loadIdentity() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"loadIdentity-0\"></a> </p><p>Replace the current matrix with the identity matrix</p> <p><span class=\"code\">gl:loadIdentity</span> replaces the current matrix with the identity matrix. It is semantically equivalent to calling <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#loadMatrixd-1\">gl:loadMatrixd/1</a></span> with the identity matrix</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glLoadIdentity.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-loadMatrixd-1-id499148\"></span><a class=\"title_link\" name=\"loadMatrixd-1\" href=\"/erldoc/docs/#loadMatrixd-1\">loadMatrixd(M) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">M = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-matrix\">matrix()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"loadMatrixd-1\"></a> </p><p>Replace the current matrix with the specified matrix</p> <p><span class=\"code\">gl:loadMatrix</span> replaces the current matrix with the one whose elements are specified by <span class=\"code\">M</span> . The current matrix is the projection matrix, modelview matrix, or texture matrix, depending on the current matrix mode (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#matrixMode-1\">gl:matrixMode/1</a></span> ).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glLoadMatrix.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-loadMatrixf-1-id499208\"></span><a class=\"title_link\" name=\"loadMatrixf-1\" href=\"/erldoc/docs/#loadMatrixf-1\">loadMatrixf(M) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">M = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-matrix\">matrix()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"loadMatrixf-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#loadMatrixd-1\">loadMatrixd/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multMatrixd-1-id499244\"></span><a class=\"title_link\" name=\"multMatrixd-1\" href=\"/erldoc/docs/#multMatrixd-1\">multMatrixd(M) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">M = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-matrix\">matrix()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multMatrixd-1\"></a> </p><p>Multiply the current matrix with the specified matrix</p> <p><span class=\"code\">gl:multMatrix</span> multiplies the current matrix with the one specified using <span class=\"code\">M</span> , and replaces the current matrix with the product.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glMultMatrix.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multMatrixf-1-id499297\"></span><a class=\"title_link\" name=\"multMatrixf-1\" href=\"/erldoc/docs/#multMatrixf-1\">multMatrixf(M) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">M = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-matrix\">matrix()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multMatrixf-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multMatrixd-1\">multMatrixd/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rotated-4-id499333\"></span><a class=\"title_link\" name=\"rotated-4\" href=\"/erldoc/docs/#rotated-4\">rotated(Angle, X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Angle = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rotated-4\"></a> </p><p>Multiply the current matrix by a rotation matrix</p> <p><span class=\"code\">gl:rotate</span> produces a rotation of <span class=\"code\">Angle</span> degrees around the vector (x y z). The current matrix (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#matrixMode-1\">gl:matrixMode/1</a></span> ) is multiplied by a rotation matrix with the product replacing the current matrix, as if <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#multMatrixd-1\">gl:multMatrixd/1</a></span> were called with the following matrix as its argument:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glRotate.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rotatef-4-id499401\"></span><a class=\"title_link\" name=\"rotatef-4\" href=\"/erldoc/docs/#rotatef-4\">rotatef(Angle, X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Angle = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rotatef-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rotated-4\">rotated/4</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-scaled-3-id499440\"></span><a class=\"title_link\" name=\"scaled-3\" href=\"/erldoc/docs/#scaled-3\">scaled(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"scaled-3\"></a> </p><p>Multiply the current matrix by a general scaling matrix</p> <p><span class=\"code\">gl:scale</span> produces a nonuniform scaling along the <span class=\"code\">x</span>, <span class=\"code\">y</span>, and <span class=\"code\">z</span> axes. The three parameters indicate the desired scale factor along each of the three axes.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glScale.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-scalef-3-id499501\"></span><a class=\"title_link\" name=\"scalef-3\" href=\"/erldoc/docs/#scalef-3\">scalef(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"scalef-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#scaled-3\">scaled/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-translated-3-id499537\"></span><a class=\"title_link\" name=\"translated-3\" href=\"/erldoc/docs/#translated-3\">translated(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"translated-3\"></a> </p><p>Multiply the current matrix by a translation matrix</p> <p><span class=\"code\">gl:translate</span> produces a translation by (x y z). The current matrix (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#matrixMode-1\">gl:matrixMode/1</a></span> ) is multiplied by this translation matrix, with the product replacing the current matrix, as if <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#multMatrixd-1\">gl:multMatrixd/1</a></span> were called with the following matrix for its argument:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glTranslate.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-translatef-3-id499599\"></span><a class=\"title_link\" name=\"translatef-3\" href=\"/erldoc/docs/#translatef-3\">translatef(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"translatef-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#translated-3\">translated/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isList-1-id499636\"></span><a class=\"title_link\" name=\"isList-1\" href=\"/erldoc/docs/#isList-1\">isList(List) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">List = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isList-1\"></a> </p><p>Determine if a name corresponds to a display list</p> <p><span class=\"code\">gl:isList</span> returns <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">List</span> is the name of a display list and returns <span class=\"code\">?GL_FALSE</span> if it is not, or if an error occurs.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glIsList.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteLists-2-id499691\"></span><a class=\"title_link\" name=\"deleteLists-2\" href=\"/erldoc/docs/#deleteLists-2\">deleteLists(List, Range) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">List = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Range = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteLists-2\"></a> </p><p>Delete a contiguous group of display lists</p> <p><span class=\"code\">gl:deleteLists</span> causes a contiguous group of display lists to be deleted. <span class=\"code\">List</span> is the name of the first display list to be deleted, and <span class=\"code\">Range</span> is the number of display lists to delete. All display lists d with list&lt;= d&lt;= list+range-1 are deleted.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glDeleteLists.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-genLists-1-id499746\"></span><a class=\"title_link\" name=\"genLists-1\" href=\"/erldoc/docs/#genLists-1\">genLists(Range) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Range = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"genLists-1\"></a> </p><p>Generate a contiguous set of empty display lists</p> <p><span class=\"code\">gl:genLists</span> has one argument, <span class=\"code\">Range</span> . It returns an integer <span class=\"code\">n</span> such that <span class=\"code\">Range</span> contiguous empty display lists, named n, n+1, ..., n+range-1, are created. If <span class=\"code\">Range</span> is 0, if there is no group of <span class=\"code\">Range</span> contiguous names available, or if any error is generated, no display lists are generated, and 0 is returned.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGenLists.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-newList-2-id499810\"></span><a class=\"title_link\" name=\"newList-2\" href=\"/erldoc/docs/#newList-2\">newList(List, Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">List = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"newList-2\"></a> </p><p>Create or replace a display list</p> <p>Display lists are groups of GL commands that have been stored for subsequent execution. Display lists are created with <span class=\"code\">gl:newList</span>. All subsequent commands are placed in the display list, in the order issued, until <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#endList-0\">gl:endList/0</a></span> is called.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glNewList.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-endList-0-id499870\"></span><a class=\"title_link\" name=\"endList-0\" href=\"/erldoc/docs/#endList-0\">endList() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"endList-0\"></a> </p><p>glBeginList</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-callList-1-id499901\"></span><a class=\"title_link\" name=\"callList-1\" href=\"/erldoc/docs/#callList-1\">callList(List) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">List = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"callList-1\"></a> </p><p>Execute a display list</p> <p><span class=\"code\">gl:callList</span> causes the named display list to be executed. The commands saved in the display list are executed in order, just as if they were called without using a display list. If <span class=\"code\">List</span> has not been defined as a display list, <span class=\"code\">gl:callList</span> is ignored.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glCallList.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-callLists-1-id499953\"></span><a class=\"title_link\" name=\"callLists-1\" href=\"/erldoc/docs/#callLists-1\">callLists(Lists) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Lists = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"callLists-1\"></a> </p><p>Execute a list of display lists</p> <p><span class=\"code\">gl:callLists</span> causes each display list in the list of names passed as <span class=\"code\">Lists</span> to be executed. As a result, the commands saved in each display list are executed in order, just as if they were called without using a display list. Names of display lists that have not been defined are ignored.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glCallLists.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-listBase-1-id500002\"></span><a class=\"title_link\" name=\"listBase-1\" href=\"/erldoc/docs/#listBase-1\">listBase(Base) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Base = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"listBase-1\"></a> </p><p>set the display-list base for</p> <p><span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#callLists-1\">gl:callLists/1</a></span></p> <p><span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#callLists-1\">gl:callLists/1</a></span> specifies an array of offsets. Display-list names are generated by adding <span class=\"code\">Base</span> to each offset. Names that reference valid display lists are executed; the others are ignored.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glListBase.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-begin-1-id500060\"></span><a class=\"title_link\" name=\"begin-1\" href=\"/erldoc/docs/#begin-1\">begin(Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"begin-1\"></a> </p><p>Delimit the vertices of a primitive or a group of like primitives</p> <p><span class=\"code\">gl:&apos;begin</span>&apos; and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#begin-1\">gl:&apos;begin&apos;/1</a></span> delimit the vertices that define a primitive or a group of like primitives. <span class=\"code\">gl:&apos;begin</span>&apos; accepts a single argument that specifies in which of ten ways the vertices are interpreted. Taking n as an integer count starting at one, and N as the total number of vertices specified, the interpretations are as follows:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glBegin.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-end-0-id500121\"></span><a class=\"title_link\" name=\"end-0\" href=\"/erldoc/docs/#end-0\">end() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"end-0\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#begin-1\">&apos;begin&apos;/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex2d-2-id500146\"></span><a class=\"title_link\" name=\"vertex2d-2\" href=\"/erldoc/docs/#vertex2d-2\">vertex2d(X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex2d-2\"></a> </p><p>Specify a vertex</p> <p><span class=\"code\">gl:vertex</span> commands are used within <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#begin-1\">gl:&apos;begin&apos;/1</a></span> / <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#begin-1\">gl:&apos;begin&apos;/1</a></span> pairs to specify point, line, and polygon vertices. The current color, normal, texture coordinates, and fog coordinate are associated with the vertex when <span class=\"code\">gl:vertex</span> is called.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glVertex.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex2f-2-id500209\"></span><a class=\"title_link\" name=\"vertex2f-2\" href=\"/erldoc/docs/#vertex2f-2\">vertex2f(X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex2f-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2d-2\">vertex2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex2i-2-id500243\"></span><a class=\"title_link\" name=\"vertex2i-2\" href=\"/erldoc/docs/#vertex2i-2\">vertex2i(X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex2i-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2d-2\">vertex2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex2s-2-id500277\"></span><a class=\"title_link\" name=\"vertex2s-2\" href=\"/erldoc/docs/#vertex2s-2\">vertex2s(X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex2s-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2d-2\">vertex2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex3d-3-id500310\"></span><a class=\"title_link\" name=\"vertex3d-3\" href=\"/erldoc/docs/#vertex3d-3\">vertex3d(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex3d-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2d-2\">vertex2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex3f-3-id500347\"></span><a class=\"title_link\" name=\"vertex3f-3\" href=\"/erldoc/docs/#vertex3f-3\">vertex3f(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex3f-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2d-2\">vertex2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex3i-3-id500383\"></span><a class=\"title_link\" name=\"vertex3i-3\" href=\"/erldoc/docs/#vertex3i-3\">vertex3i(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex3i-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2d-2\">vertex2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex3s-3-id500419\"></span><a class=\"title_link\" name=\"vertex3s-3\" href=\"/erldoc/docs/#vertex3s-3\">vertex3s(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex3s-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2d-2\">vertex2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex4d-4-id500456\"></span><a class=\"title_link\" name=\"vertex4d-4\" href=\"/erldoc/docs/#vertex4d-4\">vertex4d(X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex4d-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2d-2\">vertex2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex4f-4-id500494\"></span><a class=\"title_link\" name=\"vertex4f-4\" href=\"/erldoc/docs/#vertex4f-4\">vertex4f(X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex4f-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2d-2\">vertex2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex4i-4-id500533\"></span><a class=\"title_link\" name=\"vertex4i-4\" href=\"/erldoc/docs/#vertex4i-4\">vertex4i(X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex4i-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2d-2\">vertex2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex4s-4-id500572\"></span><a class=\"title_link\" name=\"vertex4s-4\" href=\"/erldoc/docs/#vertex4s-4\">vertex4s(X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex4s-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2d-2\">vertex2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex2dv-1-id500611\"></span><a class=\"title_link\" name=\"vertex2dv-1\" href=\"/erldoc/docs/#vertex2dv-1\">vertex2dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex2dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2d-2\">vertex2d(X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex2fv-1-id500644\"></span><a class=\"title_link\" name=\"vertex2fv-1\" href=\"/erldoc/docs/#vertex2fv-1\">vertex2fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex2fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2f-2\">vertex2f(X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex2iv-1-id500677\"></span><a class=\"title_link\" name=\"vertex2iv-1\" href=\"/erldoc/docs/#vertex2iv-1\">vertex2iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex2iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2i-2\">vertex2i(X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex2sv-1-id500710\"></span><a class=\"title_link\" name=\"vertex2sv-1\" href=\"/erldoc/docs/#vertex2sv-1\">vertex2sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex2sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex2s-2\">vertex2s(X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex3dv-1-id500743\"></span><a class=\"title_link\" name=\"vertex3dv-1\" href=\"/erldoc/docs/#vertex3dv-1\">vertex3dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex3dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex3d-3\">vertex3d(X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex3fv-1-id500776\"></span><a class=\"title_link\" name=\"vertex3fv-1\" href=\"/erldoc/docs/#vertex3fv-1\">vertex3fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex3fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex3f-3\">vertex3f(X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex3iv-1-id500809\"></span><a class=\"title_link\" name=\"vertex3iv-1\" href=\"/erldoc/docs/#vertex3iv-1\">vertex3iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex3iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex3i-3\">vertex3i(X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex3sv-1-id500843\"></span><a class=\"title_link\" name=\"vertex3sv-1\" href=\"/erldoc/docs/#vertex3sv-1\">vertex3sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex3sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex3s-3\">vertex3s(X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex4dv-1-id500876\"></span><a class=\"title_link\" name=\"vertex4dv-1\" href=\"/erldoc/docs/#vertex4dv-1\">vertex4dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float(), W::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex4dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex4d-4\">vertex4d(X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex4fv-1-id500909\"></span><a class=\"title_link\" name=\"vertex4fv-1\" href=\"/erldoc/docs/#vertex4fv-1\">vertex4fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float(), W::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex4fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex4f-4\">vertex4f(X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex4iv-1-id500942\"></span><a class=\"title_link\" name=\"vertex4iv-1\" href=\"/erldoc/docs/#vertex4iv-1\">vertex4iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer(), W::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex4iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex4i-4\">vertex4i(X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertex4sv-1-id500976\"></span><a class=\"title_link\" name=\"vertex4sv-1\" href=\"/erldoc/docs/#vertex4sv-1\">vertex4sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer(), W::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertex4sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertex4s-4\">vertex4s(X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-normal3b-3-id501009\"></span><a class=\"title_link\" name=\"normal3b-3\" href=\"/erldoc/docs/#normal3b-3\">normal3b(Nx, Ny, Nz) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Nx = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ny = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Nz = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"normal3b-3\"></a> </p><p>Set the current normal vector</p> <p>The current normal is set to the given coordinates whenever <span class=\"code\">gl:normal</span> is issued. Byte, short, or integer arguments are converted to floating-point format with a linear mapping that maps the most positive representable integer value to 1.0 and the most negative representable integer value to -1.0.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glNormal.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-normal3d-3-id501061\"></span><a class=\"title_link\" name=\"normal3d-3\" href=\"/erldoc/docs/#normal3d-3\">normal3d(Nx, Ny, Nz) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Nx = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ny = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Nz = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"normal3d-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#normal3b-3\">normal3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-normal3f-3-id501097\"></span><a class=\"title_link\" name=\"normal3f-3\" href=\"/erldoc/docs/#normal3f-3\">normal3f(Nx, Ny, Nz) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Nx = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ny = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Nz = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"normal3f-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#normal3b-3\">normal3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-normal3i-3-id501134\"></span><a class=\"title_link\" name=\"normal3i-3\" href=\"/erldoc/docs/#normal3i-3\">normal3i(Nx, Ny, Nz) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Nx = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ny = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Nz = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"normal3i-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#normal3b-3\">normal3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-normal3s-3-id501170\"></span><a class=\"title_link\" name=\"normal3s-3\" href=\"/erldoc/docs/#normal3s-3\">normal3s(Nx, Ny, Nz) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Nx = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ny = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Nz = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"normal3s-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#normal3b-3\">normal3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-normal3bv-1-id501206\"></span><a class=\"title_link\" name=\"normal3bv-1\" href=\"/erldoc/docs/#normal3bv-1\">normal3bv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Nx::integer(), Ny::integer(), Nz::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"normal3bv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#normal3b-3\">normal3b(Nx, Ny, Nz)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-normal3dv-1-id501240\"></span><a class=\"title_link\" name=\"normal3dv-1\" href=\"/erldoc/docs/#normal3dv-1\">normal3dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Nx::float(), Ny::float(), Nz::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"normal3dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#normal3d-3\">normal3d(Nx, Ny, Nz)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-normal3fv-1-id501273\"></span><a class=\"title_link\" name=\"normal3fv-1\" href=\"/erldoc/docs/#normal3fv-1\">normal3fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Nx::float(), Ny::float(), Nz::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"normal3fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#normal3f-3\">normal3f(Nx, Ny, Nz)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-normal3iv-1-id501306\"></span><a class=\"title_link\" name=\"normal3iv-1\" href=\"/erldoc/docs/#normal3iv-1\">normal3iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Nx::integer(), Ny::integer(), Nz::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"normal3iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#normal3i-3\">normal3i(Nx, Ny, Nz)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-normal3sv-1-id501339\"></span><a class=\"title_link\" name=\"normal3sv-1\" href=\"/erldoc/docs/#normal3sv-1\">normal3sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Nx::integer(), Ny::integer(), Nz::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"normal3sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#normal3s-3\">normal3s(Nx, Ny, Nz)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-indexd-1-id501372\"></span><a class=\"title_link\" name=\"indexd-1\" href=\"/erldoc/docs/#indexd-1\">indexd(C) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">C = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"indexd-1\"></a> </p><p>Set the current color index</p> <p><span class=\"code\">gl:index</span> updates the current (single-valued) color index. It takes one argument, the new value for the current color index.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glIndex.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-indexf-1-id501417\"></span><a class=\"title_link\" name=\"indexf-1\" href=\"/erldoc/docs/#indexf-1\">indexf(C) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">C = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"indexf-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#indexd-1\">indexd/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-indexi-1-id501448\"></span><a class=\"title_link\" name=\"indexi-1\" href=\"/erldoc/docs/#indexi-1\">indexi(C) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">C = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"indexi-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#indexd-1\">indexd/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-indexs-1-id501480\"></span><a class=\"title_link\" name=\"indexs-1\" href=\"/erldoc/docs/#indexs-1\">indexs(C) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">C = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"indexs-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#indexd-1\">indexd/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-indexub-1-id501511\"></span><a class=\"title_link\" name=\"indexub-1\" href=\"/erldoc/docs/#indexub-1\">indexub(C) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">C = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"indexub-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#indexd-1\">indexd/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-indexdv-1-id501543\"></span><a class=\"title_link\" name=\"indexdv-1\" href=\"/erldoc/docs/#indexdv-1\">indexdv(C) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">C = {C::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"indexdv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#indexd-1\">indexd(C)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-indexfv-1-id501576\"></span><a class=\"title_link\" name=\"indexfv-1\" href=\"/erldoc/docs/#indexfv-1\">indexfv(C) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">C = {C::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"indexfv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#indexf-1\">indexf(C)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-indexiv-1-id501608\"></span><a class=\"title_link\" name=\"indexiv-1\" href=\"/erldoc/docs/#indexiv-1\">indexiv(C) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">C = {C::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"indexiv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#indexi-1\">indexi(C)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-indexsv-1-id501641\"></span><a class=\"title_link\" name=\"indexsv-1\" href=\"/erldoc/docs/#indexsv-1\">indexsv(C) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">C = {C::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"indexsv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#indexs-1\">indexs(C)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-indexubv-1-id501674\"></span><a class=\"title_link\" name=\"indexubv-1\" href=\"/erldoc/docs/#indexubv-1\">indexubv(C) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">C = {C::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"indexubv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#indexub-1\">indexub(C)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3b-3-id501707\"></span><a class=\"title_link\" name=\"color3b-3\" href=\"/erldoc/docs/#color3b-3\">color3b(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3b-3\"></a> </p><p>Set the current color</p> <p>The GL stores both a current single-valued color index and a current four-valued RGBA color. <span class=\"code\">gl:color</span> sets a new four-valued RGBA color. <span class=\"code\">gl:color</span> has two major variants: <span class=\"code\">gl:color3</span> and <span class=\"code\">gl:color4</span>. <span class=\"code\">gl:color3</span> variants specify new red, green, and blue values explicitly and set the current alpha value to 1.0 (full intensity) implicitly. <span class=\"code\">gl:color4</span> variants specify all four color components explicitly.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glColor.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3d-3-id501778\"></span><a class=\"title_link\" name=\"color3d-3\" href=\"/erldoc/docs/#color3d-3\">color3d(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3d-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3f-3-id501814\"></span><a class=\"title_link\" name=\"color3f-3\" href=\"/erldoc/docs/#color3f-3\">color3f(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3f-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3i-3-id501850\"></span><a class=\"title_link\" name=\"color3i-3\" href=\"/erldoc/docs/#color3i-3\">color3i(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3i-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3s-3-id501887\"></span><a class=\"title_link\" name=\"color3s-3\" href=\"/erldoc/docs/#color3s-3\">color3s(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3s-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3ub-3-id501923\"></span><a class=\"title_link\" name=\"color3ub-3\" href=\"/erldoc/docs/#color3ub-3\">color3ub(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3ub-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3ui-3-id501960\"></span><a class=\"title_link\" name=\"color3ui-3\" href=\"/erldoc/docs/#color3ui-3\">color3ui(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3ui-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3us-3-id501996\"></span><a class=\"title_link\" name=\"color3us-3\" href=\"/erldoc/docs/#color3us-3\">color3us(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3us-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4b-4-id502032\"></span><a class=\"title_link\" name=\"color4b-4\" href=\"/erldoc/docs/#color4b-4\">color4b(Red, Green, Blue, Alpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Alpha = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4b-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4d-4-id502071\"></span><a class=\"title_link\" name=\"color4d-4\" href=\"/erldoc/docs/#color4d-4\">color4d(Red, Green, Blue, Alpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Alpha = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4d-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4f-4-id502110\"></span><a class=\"title_link\" name=\"color4f-4\" href=\"/erldoc/docs/#color4f-4\">color4f(Red, Green, Blue, Alpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Alpha = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4f-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4i-4-id502149\"></span><a class=\"title_link\" name=\"color4i-4\" href=\"/erldoc/docs/#color4i-4\">color4i(Red, Green, Blue, Alpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Alpha = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4i-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4s-4-id502188\"></span><a class=\"title_link\" name=\"color4s-4\" href=\"/erldoc/docs/#color4s-4\">color4s(Red, Green, Blue, Alpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Alpha = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4s-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4ub-4-id502226\"></span><a class=\"title_link\" name=\"color4ub-4\" href=\"/erldoc/docs/#color4ub-4\">color4ub(Red, Green, Blue, Alpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Alpha = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4ub-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4ui-4-id502265\"></span><a class=\"title_link\" name=\"color4ui-4\" href=\"/erldoc/docs/#color4ui-4\">color4ui(Red, Green, Blue, Alpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Alpha = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4ui-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4us-4-id502304\"></span><a class=\"title_link\" name=\"color4us-4\" href=\"/erldoc/docs/#color4us-4\">color4us(Red, Green, Blue, Alpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Alpha = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4us-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3bv-1-id502343\"></span><a class=\"title_link\" name=\"color3bv-1\" href=\"/erldoc/docs/#color3bv-1\">color3bv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3bv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3b-3\">color3b(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3dv-1-id502376\"></span><a class=\"title_link\" name=\"color3dv-1\" href=\"/erldoc/docs/#color3dv-1\">color3dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::float(), Green::float(), Blue::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3d-3\">color3d(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3fv-1-id502410\"></span><a class=\"title_link\" name=\"color3fv-1\" href=\"/erldoc/docs/#color3fv-1\">color3fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::float(), Green::float(), Blue::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3f-3\">color3f(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3iv-1-id502443\"></span><a class=\"title_link\" name=\"color3iv-1\" href=\"/erldoc/docs/#color3iv-1\">color3iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3i-3\">color3i(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3sv-1-id502477\"></span><a class=\"title_link\" name=\"color3sv-1\" href=\"/erldoc/docs/#color3sv-1\">color3sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3s-3\">color3s(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3ubv-1-id502510\"></span><a class=\"title_link\" name=\"color3ubv-1\" href=\"/erldoc/docs/#color3ubv-1\">color3ubv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3ubv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3ub-3\">color3ub(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3uiv-1-id502544\"></span><a class=\"title_link\" name=\"color3uiv-1\" href=\"/erldoc/docs/#color3uiv-1\">color3uiv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3uiv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3ui-3\">color3ui(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color3usv-1-id502577\"></span><a class=\"title_link\" name=\"color3usv-1\" href=\"/erldoc/docs/#color3usv-1\">color3usv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color3usv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color3us-3\">color3us(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4bv-1-id502610\"></span><a class=\"title_link\" name=\"color4bv-1\" href=\"/erldoc/docs/#color4bv-1\">color4bv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer(), Alpha::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4bv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color4b-4\">color4b(Red, Green, Blue, Alpha)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4dv-1-id502644\"></span><a class=\"title_link\" name=\"color4dv-1\" href=\"/erldoc/docs/#color4dv-1\">color4dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::float(), Green::float(), Blue::float(), Alpha::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color4d-4\">color4d(Red, Green, Blue, Alpha)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4fv-1-id502678\"></span><a class=\"title_link\" name=\"color4fv-1\" href=\"/erldoc/docs/#color4fv-1\">color4fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::float(), Green::float(), Blue::float(), Alpha::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color4f-4\">color4f(Red, Green, Blue, Alpha)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4iv-1-id502711\"></span><a class=\"title_link\" name=\"color4iv-1\" href=\"/erldoc/docs/#color4iv-1\">color4iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer(), Alpha::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color4i-4\">color4i(Red, Green, Blue, Alpha)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4sv-1-id502745\"></span><a class=\"title_link\" name=\"color4sv-1\" href=\"/erldoc/docs/#color4sv-1\">color4sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer(), Alpha::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color4s-4\">color4s(Red, Green, Blue, Alpha)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4ubv-1-id502779\"></span><a class=\"title_link\" name=\"color4ubv-1\" href=\"/erldoc/docs/#color4ubv-1\">color4ubv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer(), Alpha::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4ubv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color4ub-4\">color4ub(Red, Green, Blue, Alpha)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4uiv-1-id502813\"></span><a class=\"title_link\" name=\"color4uiv-1\" href=\"/erldoc/docs/#color4uiv-1\">color4uiv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer(), Alpha::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4uiv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color4ui-4\">color4ui(Red, Green, Blue, Alpha)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-color4usv-1-id502846\"></span><a class=\"title_link\" name=\"color4usv-1\" href=\"/erldoc/docs/#color4usv-1\">color4usv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer(), Alpha::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"color4usv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#color4us-4\">color4us(Red, Green, Blue, Alpha)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord1d-1-id502880\"></span><a class=\"title_link\" name=\"texCoord1d-1\" href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d(S) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord1d-1\"></a> </p><p>Set the current texture coordinates</p> <p><span class=\"code\">gl:texCoord</span> specifies texture coordinates in one, two, three, or four dimensions. <span class=\"code\">gl:texCoord1</span> sets the current texture coordinates to (s 0 0 1); a call to <span class=\"code\">gl:texCoord2</span> sets them to (s t 0 1). Similarly, <span class=\"code\">gl:texCoord3</span> specifies the texture coordinates as (s t r 1), and <span class=\"code\">gl:texCoord4</span> defines all four components explicitly as (s t r q).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glTexCoord.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord1f-1-id502940\"></span><a class=\"title_link\" name=\"texCoord1f-1\" href=\"/erldoc/docs/#texCoord1f-1\">texCoord1f(S) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord1f-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord1i-1-id502972\"></span><a class=\"title_link\" name=\"texCoord1i-1\" href=\"/erldoc/docs/#texCoord1i-1\">texCoord1i(S) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord1i-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord1s-1-id503003\"></span><a class=\"title_link\" name=\"texCoord1s-1\" href=\"/erldoc/docs/#texCoord1s-1\">texCoord1s(S) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord1s-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord2d-2-id503035\"></span><a class=\"title_link\" name=\"texCoord2d-2\" href=\"/erldoc/docs/#texCoord2d-2\">texCoord2d(S, T) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord2d-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord2f-2-id503068\"></span><a class=\"title_link\" name=\"texCoord2f-2\" href=\"/erldoc/docs/#texCoord2f-2\">texCoord2f(S, T) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord2f-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord2i-2-id503102\"></span><a class=\"title_link\" name=\"texCoord2i-2\" href=\"/erldoc/docs/#texCoord2i-2\">texCoord2i(S, T) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord2i-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord2s-2-id503136\"></span><a class=\"title_link\" name=\"texCoord2s-2\" href=\"/erldoc/docs/#texCoord2s-2\">texCoord2s(S, T) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord2s-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord3d-3-id503170\"></span><a class=\"title_link\" name=\"texCoord3d-3\" href=\"/erldoc/docs/#texCoord3d-3\">texCoord3d(S, T, R) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord3d-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord3f-3-id503206\"></span><a class=\"title_link\" name=\"texCoord3f-3\" href=\"/erldoc/docs/#texCoord3f-3\">texCoord3f(S, T, R) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord3f-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord3i-3-id503243\"></span><a class=\"title_link\" name=\"texCoord3i-3\" href=\"/erldoc/docs/#texCoord3i-3\">texCoord3i(S, T, R) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord3i-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord3s-3-id503279\"></span><a class=\"title_link\" name=\"texCoord3s-3\" href=\"/erldoc/docs/#texCoord3s-3\">texCoord3s(S, T, R) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord3s-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord4d-4-id503316\"></span><a class=\"title_link\" name=\"texCoord4d-4\" href=\"/erldoc/docs/#texCoord4d-4\">texCoord4d(S, T, R, Q) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Q = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord4d-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord4f-4-id503354\"></span><a class=\"title_link\" name=\"texCoord4f-4\" href=\"/erldoc/docs/#texCoord4f-4\">texCoord4f(S, T, R, Q) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Q = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord4f-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord4i-4-id503393\"></span><a class=\"title_link\" name=\"texCoord4i-4\" href=\"/erldoc/docs/#texCoord4i-4\">texCoord4i(S, T, R, Q) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Q = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord4i-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord4s-4-id503432\"></span><a class=\"title_link\" name=\"texCoord4s-4\" href=\"/erldoc/docs/#texCoord4s-4\">texCoord4s(S, T, R, Q) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Q = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord4s-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord1dv-1-id503471\"></span><a class=\"title_link\" name=\"texCoord1dv-1\" href=\"/erldoc/docs/#texCoord1dv-1\">texCoord1dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord1dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1d-1\">texCoord1d(S)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord1fv-1-id503504\"></span><a class=\"title_link\" name=\"texCoord1fv-1\" href=\"/erldoc/docs/#texCoord1fv-1\">texCoord1fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord1fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1f-1\">texCoord1f(S)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord1iv-1-id503537\"></span><a class=\"title_link\" name=\"texCoord1iv-1\" href=\"/erldoc/docs/#texCoord1iv-1\">texCoord1iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord1iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1i-1\">texCoord1i(S)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord1sv-1-id503570\"></span><a class=\"title_link\" name=\"texCoord1sv-1\" href=\"/erldoc/docs/#texCoord1sv-1\">texCoord1sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord1sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord1s-1\">texCoord1s(S)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord2dv-1-id503603\"></span><a class=\"title_link\" name=\"texCoord2dv-1\" href=\"/erldoc/docs/#texCoord2dv-1\">texCoord2dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float(), T::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord2dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord2d-2\">texCoord2d(S, T)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord2fv-1-id503636\"></span><a class=\"title_link\" name=\"texCoord2fv-1\" href=\"/erldoc/docs/#texCoord2fv-1\">texCoord2fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float(), T::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord2fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord2f-2\">texCoord2f(S, T)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord2iv-1-id503669\"></span><a class=\"title_link\" name=\"texCoord2iv-1\" href=\"/erldoc/docs/#texCoord2iv-1\">texCoord2iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer(), T::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord2iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord2i-2\">texCoord2i(S, T)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord2sv-1-id503702\"></span><a class=\"title_link\" name=\"texCoord2sv-1\" href=\"/erldoc/docs/#texCoord2sv-1\">texCoord2sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer(), T::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord2sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord2s-2\">texCoord2s(S, T)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord3dv-1-id503735\"></span><a class=\"title_link\" name=\"texCoord3dv-1\" href=\"/erldoc/docs/#texCoord3dv-1\">texCoord3dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float(), T::float(), R::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord3dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord3d-3\">texCoord3d(S, T, R)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord3fv-1-id503768\"></span><a class=\"title_link\" name=\"texCoord3fv-1\" href=\"/erldoc/docs/#texCoord3fv-1\">texCoord3fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float(), T::float(), R::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord3fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord3f-3\">texCoord3f(S, T, R)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord3iv-1-id503801\"></span><a class=\"title_link\" name=\"texCoord3iv-1\" href=\"/erldoc/docs/#texCoord3iv-1\">texCoord3iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer(), T::integer(), R::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord3iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord3i-3\">texCoord3i(S, T, R)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord3sv-1-id503834\"></span><a class=\"title_link\" name=\"texCoord3sv-1\" href=\"/erldoc/docs/#texCoord3sv-1\">texCoord3sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer(), T::integer(), R::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord3sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord3s-3\">texCoord3s(S, T, R)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord4dv-1-id503868\"></span><a class=\"title_link\" name=\"texCoord4dv-1\" href=\"/erldoc/docs/#texCoord4dv-1\">texCoord4dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float(), T::float(), R::float(), Q::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord4dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord4d-4\">texCoord4d(S, T, R, Q)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord4fv-1-id503901\"></span><a class=\"title_link\" name=\"texCoord4fv-1\" href=\"/erldoc/docs/#texCoord4fv-1\">texCoord4fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float(), T::float(), R::float(), Q::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord4fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord4f-4\">texCoord4f(S, T, R, Q)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord4iv-1-id503934\"></span><a class=\"title_link\" name=\"texCoord4iv-1\" href=\"/erldoc/docs/#texCoord4iv-1\">texCoord4iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer(), T::integer(), R::integer(), Q::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord4iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord4i-4\">texCoord4i(S, T, R, Q)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoord4sv-1-id503967\"></span><a class=\"title_link\" name=\"texCoord4sv-1\" href=\"/erldoc/docs/#texCoord4sv-1\">texCoord4sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer(), T::integer(), R::integer(), Q::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoord4sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texCoord4s-4\">texCoord4s(S, T, R, Q)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos2d-2-id504001\"></span><a class=\"title_link\" name=\"rasterPos2d-2\" href=\"/erldoc/docs/#rasterPos2d-2\">rasterPos2d(X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos2d-2\"></a> </p><p>Specify the raster position for pixel operations</p> <p>The GL maintains a 3D position in window coordinates. This position, called the raster position, is used to position pixel and bitmap write operations. It is maintained with subpixel accuracy. See <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#bitmap-7\">gl:bitmap/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawPixels-5\">gl:drawPixels/5</a></span> , and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyPixels-5\">gl:copyPixels/5</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glRasterPos.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos2f-2-id504064\"></span><a class=\"title_link\" name=\"rasterPos2f-2\" href=\"/erldoc/docs/#rasterPos2f-2\">rasterPos2f(X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos2f-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2d-2\">rasterPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos2i-2-id504098\"></span><a class=\"title_link\" name=\"rasterPos2i-2\" href=\"/erldoc/docs/#rasterPos2i-2\">rasterPos2i(X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos2i-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2d-2\">rasterPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos2s-2-id504132\"></span><a class=\"title_link\" name=\"rasterPos2s-2\" href=\"/erldoc/docs/#rasterPos2s-2\">rasterPos2s(X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos2s-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2d-2\">rasterPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos3d-3-id504166\"></span><a class=\"title_link\" name=\"rasterPos3d-3\" href=\"/erldoc/docs/#rasterPos3d-3\">rasterPos3d(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos3d-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2d-2\">rasterPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos3f-3-id504202\"></span><a class=\"title_link\" name=\"rasterPos3f-3\" href=\"/erldoc/docs/#rasterPos3f-3\">rasterPos3f(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos3f-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2d-2\">rasterPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos3i-3-id504238\"></span><a class=\"title_link\" name=\"rasterPos3i-3\" href=\"/erldoc/docs/#rasterPos3i-3\">rasterPos3i(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos3i-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2d-2\">rasterPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos3s-3-id504275\"></span><a class=\"title_link\" name=\"rasterPos3s-3\" href=\"/erldoc/docs/#rasterPos3s-3\">rasterPos3s(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos3s-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2d-2\">rasterPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos4d-4-id504311\"></span><a class=\"title_link\" name=\"rasterPos4d-4\" href=\"/erldoc/docs/#rasterPos4d-4\">rasterPos4d(X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos4d-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2d-2\">rasterPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos4f-4-id504350\"></span><a class=\"title_link\" name=\"rasterPos4f-4\" href=\"/erldoc/docs/#rasterPos4f-4\">rasterPos4f(X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos4f-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2d-2\">rasterPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos4i-4-id504389\"></span><a class=\"title_link\" name=\"rasterPos4i-4\" href=\"/erldoc/docs/#rasterPos4i-4\">rasterPos4i(X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos4i-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2d-2\">rasterPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos4s-4-id504428\"></span><a class=\"title_link\" name=\"rasterPos4s-4\" href=\"/erldoc/docs/#rasterPos4s-4\">rasterPos4s(X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos4s-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2d-2\">rasterPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos2dv-1-id504466\"></span><a class=\"title_link\" name=\"rasterPos2dv-1\" href=\"/erldoc/docs/#rasterPos2dv-1\">rasterPos2dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos2dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2d-2\">rasterPos2d(X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos2fv-1-id504500\"></span><a class=\"title_link\" name=\"rasterPos2fv-1\" href=\"/erldoc/docs/#rasterPos2fv-1\">rasterPos2fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos2fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2f-2\">rasterPos2f(X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos2iv-1-id504533\"></span><a class=\"title_link\" name=\"rasterPos2iv-1\" href=\"/erldoc/docs/#rasterPos2iv-1\">rasterPos2iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos2iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2i-2\">rasterPos2i(X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos2sv-1-id504566\"></span><a class=\"title_link\" name=\"rasterPos2sv-1\" href=\"/erldoc/docs/#rasterPos2sv-1\">rasterPos2sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos2sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos2s-2\">rasterPos2s(X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos3dv-1-id504599\"></span><a class=\"title_link\" name=\"rasterPos3dv-1\" href=\"/erldoc/docs/#rasterPos3dv-1\">rasterPos3dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos3dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos3d-3\">rasterPos3d(X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos3fv-1-id504632\"></span><a class=\"title_link\" name=\"rasterPos3fv-1\" href=\"/erldoc/docs/#rasterPos3fv-1\">rasterPos3fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos3fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos3f-3\">rasterPos3f(X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos3iv-1-id504665\"></span><a class=\"title_link\" name=\"rasterPos3iv-1\" href=\"/erldoc/docs/#rasterPos3iv-1\">rasterPos3iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos3iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos3i-3\">rasterPos3i(X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos3sv-1-id504698\"></span><a class=\"title_link\" name=\"rasterPos3sv-1\" href=\"/erldoc/docs/#rasterPos3sv-1\">rasterPos3sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos3sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos3s-3\">rasterPos3s(X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos4dv-1-id504732\"></span><a class=\"title_link\" name=\"rasterPos4dv-1\" href=\"/erldoc/docs/#rasterPos4dv-1\">rasterPos4dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float(), W::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos4dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos4d-4\">rasterPos4d(X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos4fv-1-id504765\"></span><a class=\"title_link\" name=\"rasterPos4fv-1\" href=\"/erldoc/docs/#rasterPos4fv-1\">rasterPos4fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float(), W::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos4fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos4f-4\">rasterPos4f(X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos4iv-1-id504798\"></span><a class=\"title_link\" name=\"rasterPos4iv-1\" href=\"/erldoc/docs/#rasterPos4iv-1\">rasterPos4iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer(), W::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos4iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos4i-4\">rasterPos4i(X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rasterPos4sv-1-id504831\"></span><a class=\"title_link\" name=\"rasterPos4sv-1\" href=\"/erldoc/docs/#rasterPos4sv-1\">rasterPos4sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer(), W::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rasterPos4sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rasterPos4s-4\">rasterPos4s(X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rectd-4-id504865\"></span><a class=\"title_link\" name=\"rectd-4\" href=\"/erldoc/docs/#rectd-4\">rectd(X1, Y1, X2, Y2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X2 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y2 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rectd-4\"></a> </p><p>Draw a rectangle</p> <p><span class=\"code\">gl:rect</span> supports efficient specification of rectangles as two corner points. Each rectangle command takes four arguments, organized either as two consecutive pairs of (x y) coordinates or as two pointers to arrays, each containing an (x y) pair. The resulting rectangle is defined in the z=0 plane.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glRect.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rectf-4-id504917\"></span><a class=\"title_link\" name=\"rectf-4\" href=\"/erldoc/docs/#rectf-4\">rectf(X1, Y1, X2, Y2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X2 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y2 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rectf-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rectd-4\">rectd/4</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-recti-4-id504956\"></span><a class=\"title_link\" name=\"recti-4\" href=\"/erldoc/docs/#recti-4\">recti(X1, Y1, X2, Y2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X2 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y2 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"recti-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rectd-4\">rectd/4</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rects-4-id504995\"></span><a class=\"title_link\" name=\"rects-4\" href=\"/erldoc/docs/#rects-4\">rects(X1, Y1, X2, Y2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X2 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y2 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rects-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rectd-4\">rectd/4</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rectdv-2-id505034\"></span><a class=\"title_link\" name=\"rectdv-2\" href=\"/erldoc/docs/#rectdv-2\">rectdv(V1, V2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = {float(), float()}</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = {float(), float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rectdv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rectd-4\">rectd/4</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rectfv-2-id505068\"></span><a class=\"title_link\" name=\"rectfv-2\" href=\"/erldoc/docs/#rectfv-2\">rectfv(V1, V2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = {float(), float()}</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = {float(), float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rectfv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rectd-4\">rectd/4</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rectiv-2-id505102\"></span><a class=\"title_link\" name=\"rectiv-2\" href=\"/erldoc/docs/#rectiv-2\">rectiv(V1, V2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = {integer(), integer()}</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = {integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rectiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rectd-4\">rectd/4</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-rectsv-2-id505136\"></span><a class=\"title_link\" name=\"rectsv-2\" href=\"/erldoc/docs/#rectsv-2\">rectsv(V1, V2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = {integer(), integer()}</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = {integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"rectsv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#rectd-4\">rectd/4</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexPointer-4-id505170\"></span><a class=\"title_link\" name=\"vertexPointer-4\" href=\"/erldoc/docs/#vertexPointer-4\">vertexPointer(Size, Type, Stride, Ptr) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ptr = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexPointer-4\"></a> </p><p>Define an array of vertex data</p> <p><span class=\"code\">gl:vertexPointer</span> specifies the location and data format of an array of vertex coordinates to use when rendering. <span class=\"code\">Size</span> specifies the number of coordinates per vertex, and must be 2, 3, or 4. <span class=\"code\">Type</span> specifies the data type of each coordinate, and <span class=\"code\">Stride</span> specifies the byte stride from one vertex to the next, allowing vertices and attributes to be packed into a single array or stored in separate arrays. (Single-array storage may be more efficient on some implementations; see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#interleavedArrays-3\">gl:interleavedArrays/3</a></span> .)</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glVertexPointer.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-normalPointer-3-id505257\"></span><a class=\"title_link\" name=\"normalPointer-3\" href=\"/erldoc/docs/#normalPointer-3\">normalPointer(Type, Stride, Ptr) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ptr = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"normalPointer-3\"></a> </p><p>Define an array of normals</p> <p><span class=\"code\">gl:normalPointer</span> specifies the location and data format of an array of normals to use when rendering. <span class=\"code\">Type</span> specifies the data type of each normal coordinate, and <span class=\"code\">Stride</span> specifies the byte stride from one normal to the next, allowing vertices and attributes to be packed into a single array or stored in separate arrays. (Single-array storage may be more efficient on some implementations; see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#interleavedArrays-3\">gl:interleavedArrays/3</a></span> .)</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glNormalPointer.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-colorPointer-4-id505337\"></span><a class=\"title_link\" name=\"colorPointer-4\" href=\"/erldoc/docs/#colorPointer-4\">colorPointer(Size, Type, Stride, Ptr) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ptr = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"colorPointer-4\"></a> </p><p>Define an array of colors</p> <p><span class=\"code\">gl:colorPointer</span> specifies the location and data format of an array of color components to use when rendering. <span class=\"code\">Size</span> specifies the number of components per color, and must be 3 or 4. <span class=\"code\">Type</span> specifies the data type of each color component, and <span class=\"code\">Stride</span> specifies the byte stride from one color to the next, allowing vertices and attributes to be packed into a single array or stored in separate arrays. (Single-array storage may be more efficient on some implementations; see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#interleavedArrays-3\">gl:interleavedArrays/3</a></span> .)</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glColorPointer.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-indexPointer-3-id505423\"></span><a class=\"title_link\" name=\"indexPointer-3\" href=\"/erldoc/docs/#indexPointer-3\">indexPointer(Type, Stride, Ptr) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ptr = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"indexPointer-3\"></a> </p><p>Define an array of color indexes</p> <p><span class=\"code\">gl:indexPointer</span> specifies the location and data format of an array of color indexes to use when rendering. <span class=\"code\">Type</span> specifies the data type of each color index and <span class=\"code\">Stride</span> specifies the byte stride from one color index to the next, allowing vertices and attributes to be packed into a single array or stored in separate arrays.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glIndexPointer.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texCoordPointer-4-id505497\"></span><a class=\"title_link\" name=\"texCoordPointer-4\" href=\"/erldoc/docs/#texCoordPointer-4\">texCoordPointer(Size, Type, Stride, Ptr) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ptr = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texCoordPointer-4\"></a> </p><p>Define an array of texture coordinates</p> <p><span class=\"code\">gl:texCoordPointer</span> specifies the location and data format of an array of texture coordinates to use when rendering. <span class=\"code\">Size</span> specifies the number of coordinates per texture coordinate set, and must be 1, 2, 3, or 4. <span class=\"code\">Type</span> specifies the data type of each texture coordinate, and <span class=\"code\">Stride</span> specifies the byte stride from one texture coordinate set to the next, allowing vertices and attributes to be packed into a single array or stored in separate arrays. (Single-array storage may be more efficient on some implementations; see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#interleavedArrays-3\">gl:interleavedArrays/3</a></span> .)</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glTexCoordPointer.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-edgeFlagPointer-2-id505584\"></span><a class=\"title_link\" name=\"edgeFlagPointer-2\" href=\"/erldoc/docs/#edgeFlagPointer-2\">edgeFlagPointer(Stride, Ptr) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ptr = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"edgeFlagPointer-2\"></a> </p><p>Define an array of edge flags</p> <p><span class=\"code\">gl:edgeFlagPointer</span> specifies the location and data format of an array of boolean edge flags to use when rendering. <span class=\"code\">Stride</span> specifies the byte stride from one edge flag to the next, allowing vertices and attributes to be packed into a single array or stored in separate arrays.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glEdgeFlagPointer.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-arrayElement-1-id505646\"></span><a class=\"title_link\" name=\"arrayElement-1\" href=\"/erldoc/docs/#arrayElement-1\">arrayElement(I) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">I = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"arrayElement-1\"></a> </p><p>Render a vertex using the specified vertex array element</p> <p><span class=\"code\">gl:arrayElement</span> commands are used within <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#begin-1\">gl:&apos;begin&apos;/1</a></span> / <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#begin-1\">gl:&apos;begin&apos;/1</a></span> pairs to specify vertex and attribute data for point, line, and polygon primitives. If <span class=\"code\">?GL_VERTEX_ARRAY</span> is enabled when <span class=\"code\">gl:arrayElement</span> is called, a single vertex is drawn, using vertex and attribute data taken from location <span class=\"code\">I</span> of the enabled arrays. If <span class=\"code\">?GL_VERTEX_ARRAY</span> is not enabled, no drawing occurs but the attributes corresponding to the enabled arrays are modified.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glArrayElement.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawArrays-3-id505720\"></span><a class=\"title_link\" name=\"drawArrays-3\" href=\"/erldoc/docs/#drawArrays-3\">drawArrays(Mode, First, Count) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">First = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawArrays-3\"></a> </p><p>Render primitives from array data</p> <p><span class=\"code\">gl:drawArrays</span> specifies multiple geometric primitives with very few subroutine calls. Instead of calling a GL procedure to pass each individual vertex, normal, texture coordinate, edge flag, or color, you can prespecify separate arrays of vertices, normals, and colors and use them to construct a sequence of primitives with a single call to <span class=\"code\">gl:drawArrays</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawArrays.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawElements-4-id505779\"></span><a class=\"title_link\" name=\"drawElements-4\" href=\"/erldoc/docs/#drawElements-4\">drawElements(Mode, Count, Type, Indices) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Indices = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawElements-4\"></a> </p><p>Render primitives from array data</p> <p><span class=\"code\">gl:drawElements</span> specifies multiple geometric primitives with very few subroutine calls. Instead of calling a GL function to pass each individual vertex, normal, texture coordinate, edge flag, or color, you can prespecify separate arrays of vertices, normals, and so on, and use them to construct a sequence of primitives with a single call to <span class=\"code\">gl:drawElements</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawElements.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-interleavedArrays-3-id505856\"></span><a class=\"title_link\" name=\"interleavedArrays-3\" href=\"/erldoc/docs/#interleavedArrays-3\">interleavedArrays(Format, Stride, Pointer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pointer = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"interleavedArrays-3\"></a> </p><p>Simultaneously specify and enable several interleaved arrays</p> <p><span class=\"code\">gl:interleavedArrays</span> lets you specify and enable individual color, normal, texture and vertex arrays whose elements are part of a larger aggregate array element. For some implementations, this is more efficient than specifying the arrays separately.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glInterleavedArrays.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-shadeModel-1-id505923\"></span><a class=\"title_link\" name=\"shadeModel-1\" href=\"/erldoc/docs/#shadeModel-1\">shadeModel(Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"shadeModel-1\"></a> </p><p>Select flat or smooth shading</p> <p>GL primitives can have either flat or smooth shading. Smooth shading, the default, causes the computed colors of vertices to be interpolated as the primitive is rasterized, typically assigning different colors to each resulting pixel fragment. Flat shading selects the computed color of just one vertex and assigns it to all the pixel fragments generated by rasterizing a single primitive. In either case, the computed color of a vertex is the result of lighting if lighting is enabled, or it is the current color at the time the vertex was specified if lighting is disabled.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glShadeModel.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-lightf-3-id505973\"></span><a class=\"title_link\" name=\"lightf-3\" href=\"/erldoc/docs/#lightf-3\">lightf(Light, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Light = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"lightf-3\"></a> </p><p>Set light source parameters</p> <p><span class=\"code\">gl:light</span> sets the values of individual light source parameters. <span class=\"code\">Light</span> names the light and is a symbolic name of the form <span class=\"code\">?GL_LIGHT</span> i, where i ranges from 0 to the value of <span class=\"code\">?GL_MAX_LIGHTS</span> - 1. <span class=\"code\">Pname</span> specifies one of ten light source parameters, again by symbolic name. <span class=\"code\">Params</span> is either a single value or a pointer to an array that contains the new values.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glLight.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-lighti-3-id506052\"></span><a class=\"title_link\" name=\"lighti-3\" href=\"/erldoc/docs/#lighti-3\">lighti(Light, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Light = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"lighti-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#lightf-3\">lightf/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-lightfv-3-id506097\"></span><a class=\"title_link\" name=\"lightfv-3\" href=\"/erldoc/docs/#lightfv-3\">lightfv(Light, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Light = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"lightfv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#lightf-3\">lightf/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-lightiv-3-id506143\"></span><a class=\"title_link\" name=\"lightiv-3\" href=\"/erldoc/docs/#lightiv-3\">lightiv(Light, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Light = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"lightiv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#lightf-3\">lightf/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getLightfv-2-id506189\"></span><a class=\"title_link\" name=\"getLightfv-2\" href=\"/erldoc/docs/#getLightfv-2\">getLightfv(Light, Pname) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Light = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getLightfv-2\"></a> </p><p>Return light source parameter values</p> <p><span class=\"code\">gl:getLight</span> returns in <span class=\"code\">Params</span> the value or values of a light source parameter. <span class=\"code\">Light</span> names the light and is a symbolic name of the form <span class=\"code\">?GL_LIGHT</span> i where i ranges from 0 to the value of <span class=\"code\">?GL_MAX_LIGHTS</span> - 1. <span class=\"code\">?GL_MAX_LIGHTS</span> is an implementation dependent constant that is greater than or equal to eight. <span class=\"code\">Pname</span> specifies one of ten light source parameters, again by symbolic name.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetLight.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getLightiv-2-id506269\"></span><a class=\"title_link\" name=\"getLightiv-2\" href=\"/erldoc/docs/#getLightiv-2\">getLightiv(Light, Pname) -&gt; {integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Light = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getLightiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getLightfv-2\">getLightfv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-lightModelf-2-id506312\"></span><a class=\"title_link\" name=\"lightModelf-2\" href=\"/erldoc/docs/#lightModelf-2\">lightModelf(Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"lightModelf-2\"></a> </p><p>Set the lighting model parameters</p> <p><span class=\"code\">gl:lightModel</span> sets the lighting model parameter. <span class=\"code\">Pname</span> names a parameter and <span class=\"code\">Params</span> gives the new value. There are three lighting model parameters:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glLightModel.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-lightModeli-2-id506371\"></span><a class=\"title_link\" name=\"lightModeli-2\" href=\"/erldoc/docs/#lightModeli-2\">lightModeli(Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"lightModeli-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#lightModelf-2\">lightModelf/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-lightModelfv-2-id506410\"></span><a class=\"title_link\" name=\"lightModelfv-2\" href=\"/erldoc/docs/#lightModelfv-2\">lightModelfv(Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"lightModelfv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#lightModelf-2\">lightModelf/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-lightModeliv-2-id506448\"></span><a class=\"title_link\" name=\"lightModeliv-2\" href=\"/erldoc/docs/#lightModeliv-2\">lightModeliv(Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"lightModeliv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#lightModelf-2\">lightModelf/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-materialf-3-id506487\"></span><a class=\"title_link\" name=\"materialf-3\" href=\"/erldoc/docs/#materialf-3\">materialf(Face, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Face = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"materialf-3\"></a> </p><p>Specify material parameters for the lighting model</p> <p><span class=\"code\">gl:material</span> assigns values to material parameters. There are two matched sets of material parameters. One, the <span class=\"code\">front-facing</span> set, is used to shade points, lines, bitmaps, and all polygons (when two-sided lighting is disabled), or just front-facing polygons (when two-sided lighting is enabled). The other set, <span class=\"code\">back-facing</span>, is used to shade back-facing polygons only when two-sided lighting is enabled. Refer to the <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#lightModelf-2\">gl:lightModelf/2</a></span> reference page for details concerning one- and two-sided lighting calculations.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glMaterial.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-materiali-3-id506562\"></span><a class=\"title_link\" name=\"materiali-3\" href=\"/erldoc/docs/#materiali-3\">materiali(Face, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Face = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"materiali-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#materialf-3\">materialf/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-materialfv-3-id506608\"></span><a class=\"title_link\" name=\"materialfv-3\" href=\"/erldoc/docs/#materialfv-3\">materialfv(Face, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Face = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"materialfv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#materialf-3\">materialf/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-materialiv-3-id506653\"></span><a class=\"title_link\" name=\"materialiv-3\" href=\"/erldoc/docs/#materialiv-3\">materialiv(Face, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Face = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"materialiv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#materialf-3\">materialf/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getMaterialfv-2-id506699\"></span><a class=\"title_link\" name=\"getMaterialfv-2\" href=\"/erldoc/docs/#getMaterialfv-2\">getMaterialfv(Face, Pname) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Face = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getMaterialfv-2\"></a> </p><p>Return material parameters</p> <p><span class=\"code\">gl:getMaterial</span> returns in <span class=\"code\">Params</span> the value or values of parameter <span class=\"code\">Pname</span> of material <span class=\"code\">Face</span> . Six parameters are defined:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetMaterial.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getMaterialiv-2-id506766\"></span><a class=\"title_link\" name=\"getMaterialiv-2\" href=\"/erldoc/docs/#getMaterialiv-2\">getMaterialiv(Face, Pname) -&gt; {integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Face = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getMaterialiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getMaterialfv-2\">getMaterialfv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-colorMaterial-2-id506810\"></span><a class=\"title_link\" name=\"colorMaterial-2\" href=\"/erldoc/docs/#colorMaterial-2\">colorMaterial(Face, Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Face = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"colorMaterial-2\"></a> </p><p>Cause a material color to track the current color</p> <p><span class=\"code\">gl:colorMaterial</span> specifies which material parameters track the current color. When <span class=\"code\">?GL_COLOR_MATERIAL</span> is enabled, the material parameter or parameters specified by <span class=\"code\">Mode</span> , of the material or materials specified by <span class=\"code\">Face</span> , track the current color at all times.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glColorMaterial.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pixelZoom-2-id506878\"></span><a class=\"title_link\" name=\"pixelZoom-2\" href=\"/erldoc/docs/#pixelZoom-2\">pixelZoom(Xfactor, Yfactor) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Xfactor = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Yfactor = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pixelZoom-2\"></a> </p><p>Specify the pixel zoom factors</p> <p><span class=\"code\">gl:pixelZoom</span> specifies values for the x and y zoom factors. During the execution of <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawPixels-5\">gl:drawPixels/5</a></span> or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyPixels-5\">gl:copyPixels/5</a></span> , if ( xr, yr) is the current raster position, and a given element is in the mth row and nth column of the pixel rectangle, then pixels whose centers are in the rectangle with corners at</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glPixelZoom.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pixelStoref-2-id506938\"></span><a class=\"title_link\" name=\"pixelStoref-2\" href=\"/erldoc/docs/#pixelStoref-2\">pixelStoref(Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pixelStoref-2\"></a> </p><p>Set pixel storage modes</p> <p><span class=\"code\">gl:pixelStore</span> sets pixel storage modes that affect the operation of subsequent <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#readPixels-7\">gl:readPixels/7</a></span> as well as the unpacking of texture patterns (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage1D-8\">gl:texImage1D/8</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage2D-9\">gl:texImage2D/9</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage3D-10\">gl:texImage3D/10</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> ), <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#compressedTexImage1D-7\">gl:compressedTexImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#compressedTexImage2D-8\">gl:compressedTexImage2D/8</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#compressedTexImage3D-9\">gl:compressedTexImage3D/9</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#compressedTexSubImage1D-7\">gl:compressedTexSubImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#compressedTexSubImage2D-9\">gl:compressedTexSubImage2D/9</a></span> or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#compressedTexSubImage1D-7\">gl:compressedTexSubImage1D/7</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glPixelStore.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pixelStorei-2-id507069\"></span><a class=\"title_link\" name=\"pixelStorei-2\" href=\"/erldoc/docs/#pixelStorei-2\">pixelStorei(Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pixelStorei-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pixelStoref-2\">pixelStoref/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pixelTransferf-2-id507108\"></span><a class=\"title_link\" name=\"pixelTransferf-2\" href=\"/erldoc/docs/#pixelTransferf-2\">pixelTransferf(Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pixelTransferf-2\"></a> </p><p>Set pixel transfer modes</p> <p><span class=\"code\">gl:pixelTransfer</span> sets pixel transfer modes that affect the operation of subsequent <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyPixels-5\">gl:copyPixels/5</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexImage1D-7\">gl:copyTexImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexImage2D-8\">gl:copyTexImage2D/8</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage1D-6\">gl:copyTexSubImage1D/6</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage2D-8\">gl:copyTexSubImage2D/8</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage3D-9\">gl:copyTexSubImage3D/9</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawPixels-5\">gl:drawPixels/5</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#readPixels-7\">gl:readPixels/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage1D-8\">gl:texImage1D/8</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage2D-9\">gl:texImage2D/9</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage3D-10\">gl:texImage3D/10</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> , and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> commands. Additionally, if the ARB_imaging subset is supported, the routines <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#colorTable-6\">gl:colorTable/6</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#colorSubTable-6\">gl:colorSubTable/6</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#convolutionFilter1D-6\">gl:convolutionFilter1D/6</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#convolutionFilter2D-7\">gl:convolutionFilter2D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#histogram-4\">gl:histogram/4</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#minmax-3\">gl:minmax/3</a></span> , and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#separableFilter2D-8\">gl:separableFilter2D/8</a></span> are also affected. The algorithms that are specified by pixel transfer modes operate on pixels after they are read from the frame buffer ( <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyPixels-5\">gl:copyPixels/5</a></span> <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexImage1D-7\">gl:copyTexImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexImage2D-8\">gl:copyTexImage2D/8</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage1D-6\">gl:copyTexSubImage1D/6</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage2D-8\">gl:copyTexSubImage2D/8</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage3D-9\">gl:copyTexSubImage3D/9</a></span> , and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#readPixels-7\">gl:readPixels/7</a></span> ), or unpacked from client memory ( <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawPixels-5\">gl:drawPixels/5</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage1D-8\">gl:texImage1D/8</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage2D-9\">gl:texImage2D/9</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage3D-10\">gl:texImage3D/10</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> , and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> ). Pixel transfer operations happen in the same order, and in the same manner, regardless of the command that resulted in the pixel operation. Pixel storage modes (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#pixelStoref-2\">gl:pixelStoref/2</a></span> ) control the unpacking of pixels being read from client memory and the packing of pixels being written back into client memory.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glPixelTransfer.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pixelTransferi-2-id507379\"></span><a class=\"title_link\" name=\"pixelTransferi-2\" href=\"/erldoc/docs/#pixelTransferi-2\">pixelTransferi(Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pixelTransferi-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pixelTransferf-2\">pixelTransferf/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pixelMapfv-3-id507418\"></span><a class=\"title_link\" name=\"pixelMapfv-3\" href=\"/erldoc/docs/#pixelMapfv-3\">pixelMapfv(Map, Mapsize, Values) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Map = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mapsize = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Values = binary()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pixelMapfv-3\"></a> </p><p>Set up pixel transfer maps</p> <p><span class=\"code\">gl:pixelMap</span> sets up translation tables, or <span class=\"code\">maps</span>, used by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyPixels-5\">gl:copyPixels/5</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexImage1D-7\">gl:copyTexImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexImage2D-8\">gl:copyTexImage2D/8</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage1D-6\">gl:copyTexSubImage1D/6</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage2D-8\">gl:copyTexSubImage2D/8</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage3D-9\">gl:copyTexSubImage3D/9</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawPixels-5\">gl:drawPixels/5</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#readPixels-7\">gl:readPixels/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage1D-8\">gl:texImage1D/8</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage2D-9\">gl:texImage2D/9</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage3D-10\">gl:texImage3D/10</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> , and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> . Additionally, if the ARB_imaging subset is supported, the routines <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#colorTable-6\">gl:colorTable/6</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#colorSubTable-6\">gl:colorSubTable/6</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#convolutionFilter1D-6\">gl:convolutionFilter1D/6</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#convolutionFilter2D-7\">gl:convolutionFilter2D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#histogram-4\">gl:histogram/4</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#minmax-3\">gl:minmax/3</a></span> , and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#separableFilter2D-8\">gl:separableFilter2D/8</a></span> . Use of these maps is described completely in the <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#pixelTransferf-2\">gl:pixelTransferf/2</a></span> reference page, and partly in the reference pages for the pixel and texture image commands. Only the specification of the maps is described in this reference page.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glPixelMap.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pixelMapuiv-3-id507609\"></span><a class=\"title_link\" name=\"pixelMapuiv-3\" href=\"/erldoc/docs/#pixelMapuiv-3\">pixelMapuiv(Map, Mapsize, Values) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Map = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mapsize = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Values = binary()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pixelMapuiv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pixelMapfv-3\">pixelMapfv/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pixelMapusv-3-id507650\"></span><a class=\"title_link\" name=\"pixelMapusv-3\" href=\"/erldoc/docs/#pixelMapusv-3\">pixelMapusv(Map, Mapsize, Values) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Map = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mapsize = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Values = binary()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pixelMapusv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pixelMapfv-3\">pixelMapfv/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getPixelMapfv-2-id507692\"></span><a class=\"title_link\" name=\"getPixelMapfv-2\" href=\"/erldoc/docs/#getPixelMapfv-2\">getPixelMapfv(Map, Values) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Map = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Values = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getPixelMapfv-2\"></a> </p><p>Return the specified pixel map</p> <p>See the <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#pixelMapfv-3\">gl:pixelMapfv/3</a></span> reference page for a description of the acceptable values for the <span class=\"code\">Map</span> parameter. <span class=\"code\">gl:getPixelMap</span> returns in <span class=\"code\">Data</span> the contents of the pixel map specified in <span class=\"code\">Map</span> . Pixel maps are used during the execution of <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#readPixels-7\">gl:readPixels/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawPixels-5\">gl:drawPixels/5</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyPixels-5\">gl:copyPixels/5</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage1D-8\">gl:texImage1D/8</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage2D-9\">gl:texImage2D/9</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage3D-10\">gl:texImage3D/10</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexImage1D-7\">gl:copyTexImage1D/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexImage2D-8\">gl:copyTexImage2D/8</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage1D-6\">gl:copyTexSubImage1D/6</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage2D-8\">gl:copyTexSubImage2D/8</a></span> , and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyTexSubImage3D-9\">gl:copyTexSubImage3D/9</a></span> . to map color indices, stencil indices, color components, and depth components to other values.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetPixelMap.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getPixelMapuiv-2-id507851\"></span><a class=\"title_link\" name=\"getPixelMapuiv-2\" href=\"/erldoc/docs/#getPixelMapuiv-2\">getPixelMapuiv(Map, Values) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Map = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Values = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getPixelMapuiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getPixelMapfv-2\">getPixelMapfv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getPixelMapusv-2-id507894\"></span><a class=\"title_link\" name=\"getPixelMapusv-2\" href=\"/erldoc/docs/#getPixelMapusv-2\">getPixelMapusv(Map, Values) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Map = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Values = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getPixelMapusv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getPixelMapfv-2\">getPixelMapfv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bitmap-7-id507938\"></span><a class=\"title_link\" name=\"bitmap-7\" href=\"/erldoc/docs/#bitmap-7\">bitmap(Width, Height, Xorig, Yorig, Xmove, Ymove, Bitmap) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Xorig = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Yorig = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Xmove = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ymove = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bitmap = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bitmap-7\"></a> </p><p>Draw a bitmap</p> <p>A bitmap is a binary image. When drawn, the bitmap is positioned relative to the current raster position, and frame buffer pixels corresponding to 1&apos;s in the bitmap are written using the current raster color or index. Frame buffer pixels corresponding to 0&apos;s in the bitmap are not modified.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glBitmap.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-readPixels-7-id508006\"></span><a class=\"title_link\" name=\"readPixels-7\" href=\"/erldoc/docs/#readPixels-7\">readPixels(X, Y, Width, Height, Format, Type, Pixels) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pixels = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"readPixels-7\"></a> </p><p>Read a block of pixels from the frame buffer</p> <p><span class=\"code\">gl:readPixels</span> returns pixel data from the frame buffer, starting with the pixel whose lower left corner is at location ( <span class=\"code\">X</span> , <span class=\"code\">Y</span> ), into client memory starting at location <span class=\"code\">Data</span> . Several parameters control the processing of the pixel data before it is placed into client memory. These parameters are set with <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#pixelStoref-2\">gl:pixelStoref/2</a></span> . This reference page describes the effects on <span class=\"code\">gl:readPixels</span> of most, but not all of the parameters specified by these three commands.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glReadPixels.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawPixels-5-id508103\"></span><a class=\"title_link\" name=\"drawPixels-5\" href=\"/erldoc/docs/#drawPixels-5\">drawPixels(Width, Height, Format, Type, Pixels) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pixels = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawPixels-5\"></a> </p><p>Write a block of pixels to the frame buffer</p> <p><span class=\"code\">gl:drawPixels</span> reads pixel data from memory and writes it into the frame buffer relative to the current raster position, provided that the raster position is valid. Use <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#rasterPos2d-2\">gl:rasterPos2d/2</a></span> or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#windowPos2d-2\">gl:windowPos2d/2</a></span> to set the current raster position; use <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getBooleanv-1\">gl:getBooleanv/1</a></span> with argument <span class=\"code\">?GL_CURRENT_RASTER_POSITION_VALID</span> to determine if the specified raster position is valid, and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getBooleanv-1\">gl:getBooleanv/1</a></span> with argument <span class=\"code\">?GL_CURRENT_RASTER_POSITION</span> to query the raster position.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glDrawPixels.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-copyPixels-5-id508210\"></span><a class=\"title_link\" name=\"copyPixels-5\" href=\"/erldoc/docs/#copyPixels-5\">copyPixels(X, Y, Width, Height, Type) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"copyPixels-5\"></a> </p><p>Copy pixels in the frame buffer</p> <p><span class=\"code\">gl:copyPixels</span> copies a screen-aligned rectangle of pixels from the specified frame buffer location to a region relative to the current raster position. Its operation is well defined only if the entire pixel source region is within the exposed portion of the window. Results of copies from outside the window, or from regions of the window that are not exposed, are hardware dependent and undefined.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glCopyPixels.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-stencilFunc-3-id508271\"></span><a class=\"title_link\" name=\"stencilFunc-3\" href=\"/erldoc/docs/#stencilFunc-3\">stencilFunc(Func, Ref, Mask) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Func = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ref = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mask = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"stencilFunc-3\"></a> </p><p>Set front and back function and reference value for stencil testing</p> <p>Stenciling, like depth-buffering, enables and disables drawing on a per-pixel basis. Stencil planes are first drawn into using GL drawing primitives, then geometry and images are rendered using the stencil planes to mask out portions of the screen. Stenciling is typically used in multipass rendering algorithms to achieve special effects, such as decals, outlining, and constructive solid geometry rendering.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glStencilFunc.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-stencilMask-1-id508326\"></span><a class=\"title_link\" name=\"stencilMask-1\" href=\"/erldoc/docs/#stencilMask-1\">stencilMask(Mask) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mask = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"stencilMask-1\"></a> </p><p>Control the front and back writing of individual bits in the stencil planes</p> <p><span class=\"code\">gl:stencilMask</span> controls the writing of individual bits in the stencil planes. The least significant n bits of <span class=\"code\">Mask</span> , where n is the number of bits in the stencil buffer, specify a mask. Where a 1 appears in the mask, it&apos;s possible to write to the corresponding bit in the stencil buffer. Where a 0 appears, the corresponding bit is write-protected. Initially, all bits are enabled for writing.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glStencilMask.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-stencilOp-3-id508377\"></span><a class=\"title_link\" name=\"stencilOp-3\" href=\"/erldoc/docs/#stencilOp-3\">stencilOp(Fail, Zfail, Zpass) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Fail = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Zfail = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Zpass = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"stencilOp-3\"></a> </p><p>Set front and back stencil test actions</p> <p>Stenciling, like depth-buffering, enables and disables drawing on a per-pixel basis. You draw into the stencil planes using GL drawing primitives, then render geometry and images, using the stencil planes to mask out portions of the screen. Stenciling is typically used in multipass rendering algorithms to achieve special effects, such as decals, outlining, and constructive solid geometry rendering.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glStencilOp.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clearStencil-1-id508440\"></span><a class=\"title_link\" name=\"clearStencil-1\" href=\"/erldoc/docs/#clearStencil-1\">clearStencil(S) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clearStencil-1\"></a> </p><p>Specify the clear value for the stencil buffer</p> <p><span class=\"code\">gl:clearStencil</span> specifies the index used by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#clear-1\">gl:clear/1</a></span> to clear the stencil buffer. <span class=\"code\">S</span> is masked with 2 m-1, where m is the number of bits in the stencil buffer.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glClearStencil.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texGend-3-id508494\"></span><a class=\"title_link\" name=\"texGend-3\" href=\"/erldoc/docs/#texGend-3\">texGend(Coord, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Coord = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texGend-3\"></a> </p><p>Control the generation of texture coordinates</p> <p><span class=\"code\">gl:texGen</span> selects a texture-coordinate generation function or supplies coefficients for one of the functions. <span class=\"code\">Coord</span> names one of the (<span class=\"code\">s</span>, <span class=\"code\">t</span>, <span class=\"code\">r</span>, <span class=\"code\">q</span> ) texture coordinates; it must be one of the symbols <span class=\"code\">?GL_S</span>, <span class=\"code\">?GL_T</span>, <span class=\"code\">?GL_R</span> , or <span class=\"code\">?GL_Q</span>. <span class=\"code\">Pname</span> must be one of three symbolic constants: <span class=\"code\">?GL_TEXTURE_GEN_MODE</span> , <span class=\"code\">?GL_OBJECT_PLANE</span>, or <span class=\"code\">?GL_EYE_PLANE</span>. If <span class=\"code\">Pname</span> is <span class=\"code\">?GL_TEXTURE_GEN_MODE</span> , then <span class=\"code\">Params</span> chooses a mode, one of <span class=\"code\">?GL_OBJECT_LINEAR</span>, <span class=\"code\">?GL_EYE_LINEAR</span> , <span class=\"code\">?GL_SPHERE_MAP</span>, <span class=\"code\">?GL_NORMAL_MAP</span>, or <span class=\"code\">?GL_REFLECTION_MAP</span>. If <span class=\"code\">Pname</span> is either <span class=\"code\">?GL_OBJECT_PLANE</span> or <span class=\"code\">?GL_EYE_PLANE</span>, <span class=\"code\">Params</span> contains coefficients for the corresponding texture generation function.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glTexGen.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texGenf-3-id508648\"></span><a class=\"title_link\" name=\"texGenf-3\" href=\"/erldoc/docs/#texGenf-3\">texGenf(Coord, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Coord = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texGenf-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texGend-3\">texGend/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texGeni-3-id508694\"></span><a class=\"title_link\" name=\"texGeni-3\" href=\"/erldoc/docs/#texGeni-3\">texGeni(Coord, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Coord = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texGeni-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texGend-3\">texGend/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texGendv-3-id508739\"></span><a class=\"title_link\" name=\"texGendv-3\" href=\"/erldoc/docs/#texGendv-3\">texGendv(Coord, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Coord = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texGendv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texGend-3\">texGend/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texGenfv-3-id508785\"></span><a class=\"title_link\" name=\"texGenfv-3\" href=\"/erldoc/docs/#texGenfv-3\">texGenfv(Coord, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Coord = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texGenfv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texGend-3\">texGend/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texGeniv-3-id508831\"></span><a class=\"title_link\" name=\"texGeniv-3\" href=\"/erldoc/docs/#texGeniv-3\">texGeniv(Coord, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Coord = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texGeniv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texGend-3\">texGend/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getTexGendv-2-id508877\"></span><a class=\"title_link\" name=\"getTexGendv-2\" href=\"/erldoc/docs/#getTexGendv-2\">getTexGendv(Coord, Pname) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Coord = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getTexGendv-2\"></a> </p><p>Return texture coordinate generation parameters</p> <p><span class=\"code\">gl:getTexGen</span> returns in <span class=\"code\">Params</span> selected parameters of a texture coordinate generation function that was specified using <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texGend-3\">gl:texGend/3</a></span> . <span class=\"code\">Coord</span> names one of the (<span class=\"code\">s</span>, <span class=\"code\">t</span>, <span class=\"code\">r</span>, <span class=\"code\">q</span>) texture coordinates, using the symbolic constant <span class=\"code\">?GL_S</span>, <span class=\"code\">?GL_T</span>, <span class=\"code\">?GL_R</span>, or <span class=\"code\">?GL_Q</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetTexGen.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getTexGenfv-2-id508977\"></span><a class=\"title_link\" name=\"getTexGenfv-2\" href=\"/erldoc/docs/#getTexGenfv-2\">getTexGenfv(Coord, Pname) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Coord = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getTexGenfv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getTexGendv-2\">getTexGendv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getTexGeniv-2-id509020\"></span><a class=\"title_link\" name=\"getTexGeniv-2\" href=\"/erldoc/docs/#getTexGeniv-2\">getTexGeniv(Coord, Pname) -&gt; {integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Coord = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getTexGeniv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getTexGendv-2\">getTexGendv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texEnvf-3-id509064\"></span><a class=\"title_link\" name=\"texEnvf-3\" href=\"/erldoc/docs/#texEnvf-3\">texEnvf(Target, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texEnvf-3\"></a> </p><p>glTexEnvf</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texEnvi-3-id509115\"></span><a class=\"title_link\" name=\"texEnvi-3\" href=\"/erldoc/docs/#texEnvi-3\">texEnvi(Target, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texEnvi-3\"></a> </p><p>glTexEnvi</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texEnvfv-3-id509166\"></span><a class=\"title_link\" name=\"texEnvfv-3\" href=\"/erldoc/docs/#texEnvfv-3\">texEnvfv(Target, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texEnvfv-3\"></a> </p><p>Set texture environment parameters</p> <p>A texture environment specifies how texture values are interpreted when a fragment is textured. When <span class=\"code\">Target</span> is <span class=\"code\">?GL_TEXTURE_FILTER_CONTROL</span>, <span class=\"code\">Pname</span> must be <span class=\"code\">?GL_TEXTURE_LOD_BIAS</span> . When <span class=\"code\">Target</span> is <span class=\"code\">?GL_TEXTURE_ENV</span>, <span class=\"code\">Pname</span> can be <span class=\"code\">?GL_TEXTURE_ENV_MODE</span> , <span class=\"code\">?GL_TEXTURE_ENV_COLOR</span>, <span class=\"code\">?GL_COMBINE_RGB</span>, <span class=\"code\">?GL_COMBINE_ALPHA</span>, <span class=\"code\">?GL_RGB_SCALE</span> , <span class=\"code\">?GL_ALPHA_SCALE</span>, <span class=\"code\">?GL_SRC0_RGB</span>, <span class=\"code\">?GL_SRC1_RGB</span>, <span class=\"code\">?GL_SRC2_RGB</span>, <span class=\"code\">?GL_SRC0_ALPHA</span> , <span class=\"code\">?GL_SRC1_ALPHA</span>, or <span class=\"code\">?GL_SRC2_ALPHA</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glTexEnv.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texEnviv-3-id509293\"></span><a class=\"title_link\" name=\"texEnviv-3\" href=\"/erldoc/docs/#texEnviv-3\">texEnviv(Target, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texEnviv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texEnvfv-3\">texEnvfv/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getTexEnvfv-2-id509339\"></span><a class=\"title_link\" name=\"getTexEnvfv-2\" href=\"/erldoc/docs/#getTexEnvfv-2\">getTexEnvfv(Target, Pname) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getTexEnvfv-2\"></a> </p><p>Return texture environment parameters</p> <p><span class=\"code\">gl:getTexEnv</span> returns in <span class=\"code\">Params</span> selected values of a texture environment that was specified with <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texEnvfv-3\">gl:texEnvfv/3</a></span> . <span class=\"code\">Target</span> specifies a texture environment.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetTexEnv.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getTexEnviv-2-id509409\"></span><a class=\"title_link\" name=\"getTexEnviv-2\" href=\"/erldoc/docs/#getTexEnviv-2\">getTexEnviv(Target, Pname) -&gt; {integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getTexEnviv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getTexEnvfv-2\">getTexEnvfv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texParameterf-3-id509452\"></span><a class=\"title_link\" name=\"texParameterf-3\" href=\"/erldoc/docs/#texParameterf-3\">texParameterf(Target, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texParameterf-3\"></a> </p><p>Set texture parameters</p> <p><span class=\"code\">gl:texParameter</span> assigns the value or values in <span class=\"code\">Params</span> to the texture parameter specified as <span class=\"code\">Pname</span> . <span class=\"code\">Target</span> defines the target texture, either <span class=\"code\">?GL_TEXTURE_1D</span> , <span class=\"code\">?GL_TEXTURE_2D</span>, <span class=\"code\">?GL_TEXTURE_1D_ARRAY</span>, <span class=\"code\">?GL_TEXTURE_2D_ARRAY</span>, <span class=\"code\">?GL_TEXTURE_RECTANGLE</span> , or <span class=\"code\">?GL_TEXTURE_3D</span>. The following symbols are accepted in <span class=\"code\">Pname</span> :</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glTexParameter.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texParameteri-3-id509548\"></span><a class=\"title_link\" name=\"texParameteri-3\" href=\"/erldoc/docs/#texParameteri-3\">texParameteri(Target, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texParameteri-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texParameterf-3\">texParameterf/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texParameterfv-3-id509594\"></span><a class=\"title_link\" name=\"texParameterfv-3\" href=\"/erldoc/docs/#texParameterfv-3\">texParameterfv(Target, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texParameterfv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texParameterf-3\">texParameterf/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texParameteriv-3-id509640\"></span><a class=\"title_link\" name=\"texParameteriv-3\" href=\"/erldoc/docs/#texParameteriv-3\">texParameteriv(Target, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texParameteriv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texParameterf-3\">texParameterf/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getTexParameterfv-2-id509686\"></span><a class=\"title_link\" name=\"getTexParameterfv-2\" href=\"/erldoc/docs/#getTexParameterfv-2\">getTexParameterfv(Target, Pname) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getTexParameterfv-2\"></a> </p><p>Return texture parameter values</p> <p><span class=\"code\">gl:getTexParameter</span> returns in <span class=\"code\">Params</span> the value or values of the texture parameter specified as <span class=\"code\">Pname</span> . <span class=\"code\">Target</span> defines the target texture. <span class=\"code\">?GL_TEXTURE_1D</span>, <span class=\"code\">?GL_TEXTURE_2D</span>, <span class=\"code\">?GL_TEXTURE_3D</span>, <span class=\"code\">?GL_TEXTURE_1D_ARRAY</span>, <span class=\"code\">?GL_TEXTURE_2D_ARRAY</span> , <span class=\"code\">?GL_TEXTURE_RECTANGLE</span>, <span class=\"code\">?GL_TEXTURE_CUBE_MAP</span>, <span class=\"code\">?GL_TEXTURE_CUBE_MAP_ARRAY</span> specify one-, two-, or three-dimensional, one-dimensional array, two-dimensional array, rectangle, cube-mapped or cube-mapped array texturing, respectively. <span class=\"code\">Pname</span> accepts the same symbols as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texParameterf-3\">gl:texParameterf/3</a></span> , with the same interpretations:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetTexParameter.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getTexParameteriv-2-id509794\"></span><a class=\"title_link\" name=\"getTexParameteriv-2\" href=\"/erldoc/docs/#getTexParameteriv-2\">getTexParameteriv(Target, Pname) -&gt; {integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getTexParameteriv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getTexParameterfv-2\">getTexParameterfv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getTexLevelParameterfv-3-id509838\"></span><a class=\"title_link\" name=\"getTexLevelParameterfv-3\" href=\"/erldoc/docs/#getTexLevelParameterfv-3\">getTexLevelParameterfv(Target, Level, Pname) -&gt; {float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getTexLevelParameterfv-3\"></a> </p><p>Return texture parameter values for a specific level of detail</p> <p><span class=\"code\">gl:getTexLevelParameter</span> returns in <span class=\"code\">Params</span> texture parameter values for a specific level-of-detail value, specified as <span class=\"code\">Level</span> . <span class=\"code\">Target</span> defines the target texture, either <span class=\"code\">?GL_TEXTURE_1D</span>, <span class=\"code\">?GL_TEXTURE_2D</span>, <span class=\"code\">?GL_TEXTURE_3D</span>, <span class=\"code\">?GL_PROXY_TEXTURE_1D</span> , <span class=\"code\">?GL_PROXY_TEXTURE_2D</span>, <span class=\"code\">?GL_PROXY_TEXTURE_3D</span>, <span class=\"code\">?GL_TEXTURE_CUBE_MAP_POSITIVE_X</span> , <span class=\"code\">?GL_TEXTURE_CUBE_MAP_NEGATIVE_X</span>, <span class=\"code\">?GL_TEXTURE_CUBE_MAP_POSITIVE_Y</span>, <span class=\"code\">?GL_TEXTURE_CUBE_MAP_NEGATIVE_Y</span> , <span class=\"code\">?GL_TEXTURE_CUBE_MAP_POSITIVE_Z</span>, <span class=\"code\">?GL_TEXTURE_CUBE_MAP_NEGATIVE_Z</span>, or <span class=\"code\">?GL_PROXY_TEXTURE_CUBE_MAP</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetTexLevelParameter.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getTexLevelParameteriv-3-id509958\"></span><a class=\"title_link\" name=\"getTexLevelParameteriv-3\" href=\"/erldoc/docs/#getTexLevelParameteriv-3\">getTexLevelParameteriv(Target, Level, Pname) -&gt; {integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getTexLevelParameteriv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getTexLevelParameterfv-3\">getTexLevelParameterfv/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texImage1D-8-id510005\"></span><a class=\"title_link\" name=\"texImage1D-8\" href=\"/erldoc/docs/#texImage1D-8\">texImage1D(Target, Level, InternalFormat, Width, Border, Format, Type, Pixels) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">InternalFormat = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Border = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pixels = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texImage1D-8\"></a> </p><p>Specify a one-dimensional texture image</p> <p>Texturing maps a portion of a specified texture image onto each graphical primitive for which texturing is enabled. To enable and disable one-dimensional texturing, call <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> with argument <span class=\"code\">?GL_TEXTURE_1D</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glTexImage1D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texImage2D-9-id510105\"></span><a class=\"title_link\" name=\"texImage2D-9\" href=\"/erldoc/docs/#texImage2D-9\">texImage2D(Target, Level, InternalFormat, Width, Height, Border, Format, Type, Pixels) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">InternalFormat = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Border = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pixels = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texImage2D-9\"></a> </p><p>Specify a two-dimensional texture image</p> <p>Texturing allows elements of an image array to be read by shaders.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glTexImage2D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getTexImage-5-id510192\"></span><a class=\"title_link\" name=\"getTexImage-5\" href=\"/erldoc/docs/#getTexImage-5\">getTexImage(Target, Level, Format, Type, Pixels) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pixels = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getTexImage-5\"></a> </p><p>Return a texture image</p> <p><span class=\"code\">gl:getTexImage</span> returns a texture image into <span class=\"code\">Img</span> . <span class=\"code\">Target</span> specifies whether the desired texture image is one specified by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage1D-8\">gl:texImage1D/8</a></span> (<span class=\"code\">?GL_TEXTURE_1D</span> ), <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage2D-9\">gl:texImage2D/9</a></span> (<span class=\"code\">?GL_TEXTURE_1D_ARRAY</span>, <span class=\"code\">?GL_TEXTURE_RECTANGLE</span>, <span class=\"code\">?GL_TEXTURE_2D</span> or any of <span class=\"code\">?GL_TEXTURE_CUBE_MAP_*</span>), or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage3D-10\">gl:texImage3D/10</a></span> (<span class=\"code\">?GL_TEXTURE_2D_ARRAY</span> , <span class=\"code\">?GL_TEXTURE_3D</span>). <span class=\"code\">Level</span> specifies the level-of-detail number of the desired image. <span class=\"code\">Format</span> and <span class=\"code\">Type</span> specify the format and type of the desired image array. See the reference page for <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage1D-8\">gl:texImage1D/8</a></span> for a description of the acceptable values for the <span class=\"code\">Format</span> and <span class=\"code\">Type</span> parameters, respectively.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetTexImage.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-genTextures-1-id510342\"></span><a class=\"title_link\" name=\"genTextures-1\" href=\"/erldoc/docs/#genTextures-1\">genTextures(N) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">N = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"genTextures-1\"></a> </p><p>Generate texture names</p> <p><span class=\"code\">gl:genTextures</span> returns <span class=\"code\">N</span> texture names in <span class=\"code\">Textures</span> . There is no guarantee that the names form a contiguous set of integers; however, it is guaranteed that none of the returned names was in use immediately before the call to <span class=\"code\">gl:genTextures</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGenTextures.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteTextures-1-id510398\"></span><a class=\"title_link\" name=\"deleteTextures-1\" href=\"/erldoc/docs/#deleteTextures-1\">deleteTextures(Textures) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Textures = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteTextures-1\"></a> </p><p>Delete named textures</p> <p><span class=\"code\">gl:deleteTextures</span> deletes <span class=\"code\">N</span> textures named by the elements of the array <span class=\"code\">Textures</span> . After a texture is deleted, it has no contents or dimensionality, and its name is free for reuse (for example by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genTextures-1\">gl:genTextures/1</a></span> ). If a texture that is currently bound is deleted, the binding reverts to 0 (the default texture).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDeleteTextures.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindTexture-2-id510456\"></span><a class=\"title_link\" name=\"bindTexture-2\" href=\"/erldoc/docs/#bindTexture-2\">bindTexture(Target, Texture) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Texture = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindTexture-2\"></a> </p><p>Bind a named texture to a texturing target</p> <p><span class=\"code\">gl:bindTexture</span> lets you create or use a named texture. Calling <span class=\"code\">gl:bindTexture</span> with <span class=\"code\">Target</span> set to <span class=\"code\">?GL_TEXTURE_1D</span>, <span class=\"code\">?GL_TEXTURE_2D</span>, <span class=\"code\">?GL_TEXTURE_3D</span> , or <span class=\"code\">?GL_TEXTURE_1D_ARRAY</span>, <span class=\"code\">?GL_TEXTURE_2D_ARRAY</span>, <span class=\"code\">?GL_TEXTURE_RECTANGLE</span> , <span class=\"code\">?GL_TEXTURE_CUBE_MAP</span>, <span class=\"code\">?GL_TEXTURE_2D_MULTISAMPLE</span> or <span class=\"code\">?GL_TEXTURE_2D_MULTISAMPLE_ARRAY</span> and <span class=\"code\">Texture</span> set to the name of the new texture binds the texture name to the target. When a texture is bound to a target, the previous binding for that target is automatically broken.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindTexture.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-prioritizeTextures-2-id510554\"></span><a class=\"title_link\" name=\"prioritizeTextures-2\" href=\"/erldoc/docs/#prioritizeTextures-2\">prioritizeTextures(Textures, Priorities) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Textures = [integer()]</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Priorities = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span>]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"prioritizeTextures-2\"></a> </p><p>Set texture residence priority</p> <p><span class=\"code\">gl:prioritizeTextures</span> assigns the <span class=\"code\">N</span> texture priorities given in <span class=\"code\">Priorities</span> to the <span class=\"code\">N</span> textures named in <span class=\"code\">Textures</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glPrioritizeTextures.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-areTexturesResident-1-id510621\"></span><a class=\"title_link\" name=\"areTexturesResident-1\" href=\"/erldoc/docs/#areTexturesResident-1\">areTexturesResident(Textures) -&gt; {0 | 1, Residences::[0 | 1]}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Textures = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"areTexturesResident-1\"></a> </p><p>Determine if textures are loaded in texture memory</p> <p>GL establishes a <span class=\"code\">working set</span> of textures that are resident in texture memory. These textures can be bound to a texture target much more efficiently than textures that are not resident.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glAreTexturesResident.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isTexture-1-id510668\"></span><a class=\"title_link\" name=\"isTexture-1\" href=\"/erldoc/docs/#isTexture-1\">isTexture(Texture) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Texture = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isTexture-1\"></a> </p><p>Determine if a name corresponds to a texture</p> <p><span class=\"code\">gl:isTexture</span> returns <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">Texture</span> is currently the name of a texture. If <span class=\"code\">Texture</span> is zero, or is a non-zero value that is not currently the name of a texture, or if an error occurs, <span class=\"code\">gl:isTexture</span> returns <span class=\"code\">?GL_FALSE</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glIsTexture.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texSubImage1D-7-id510731\"></span><a class=\"title_link\" name=\"texSubImage1D-7\" href=\"/erldoc/docs/#texSubImage1D-7\">texSubImage1D(Target, Level, Xoffset, Width, Format, Type, Pixels) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Xoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pixels = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texSubImage1D-7\"></a> </p><p>glTexSubImage</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texSubImage2D-9-id510808\"></span><a class=\"title_link\" name=\"texSubImage2D-9\" href=\"/erldoc/docs/#texSubImage2D-9\">texSubImage2D(Target, Level, Xoffset, Yoffset, Width, Height, Format, Type, Pixels) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Xoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Yoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pixels = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texSubImage2D-9\"></a> </p><p>glTexSubImage</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-copyTexImage1D-7-id510889\"></span><a class=\"title_link\" name=\"copyTexImage1D-7\" href=\"/erldoc/docs/#copyTexImage1D-7\">copyTexImage1D(Target, Level, Internalformat, X, Y, Width, Border) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Border = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"copyTexImage1D-7\"></a> </p><p>Copy pixels into a 1D texture image</p> <p><span class=\"code\">gl:copyTexImage1D</span> defines a one-dimensional texture image with pixels from the current <span class=\"code\">?GL_READ_BUFFER</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCopyTexImage1D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-copyTexImage2D-8-id510961\"></span><a class=\"title_link\" name=\"copyTexImage2D-8\" href=\"/erldoc/docs/#copyTexImage2D-8\">copyTexImage2D(Target, Level, Internalformat, X, Y, Width, Height, Border) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Border = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"copyTexImage2D-8\"></a> </p><p>Copy pixels into a 2D texture image</p> <p><span class=\"code\">gl:copyTexImage2D</span> defines a two-dimensional texture image, or cube-map texture image with pixels from the current <span class=\"code\">?GL_READ_BUFFER</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCopyTexImage2D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-copyTexSubImage1D-6-id511036\"></span><a class=\"title_link\" name=\"copyTexSubImage1D-6\" href=\"/erldoc/docs/#copyTexSubImage1D-6\">copyTexSubImage1D(Target, Level, Xoffset, X, Y, Width) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Xoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"copyTexSubImage1D-6\"></a> </p><p>Copy a one-dimensional texture subimage</p> <p><span class=\"code\">gl:copyTexSubImage1D</span> replaces a portion of a one-dimensional texture image with pixels from the current <span class=\"code\">?GL_READ_BUFFER</span> (rather than from main memory, as is the case for <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> ).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCopyTexSubImage1D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-copyTexSubImage2D-8-id511107\"></span><a class=\"title_link\" name=\"copyTexSubImage2D-8\" href=\"/erldoc/docs/#copyTexSubImage2D-8\">copyTexSubImage2D(Target, Level, Xoffset, Yoffset, X, Y, Width, Height) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Xoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Yoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"copyTexSubImage2D-8\"></a> </p><p>Copy a two-dimensional texture subimage</p> <p><span class=\"code\">gl:copyTexSubImage2D</span> replaces a rectangular portion of a two-dimensional texture image or cube-map texture image with pixels from the current <span class=\"code\">?GL_READ_BUFFER</span> (rather than from main memory, as is the case for <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> ).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCopyTexSubImage2D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-map1d-6-id511183\"></span><a class=\"title_link\" name=\"map1d-6\" href=\"/erldoc/docs/#map1d-6\">map1d(Target, U1, U2, Stride, Order, Points) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U2 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Order = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Points = binary()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"map1d-6\"></a> </p><p>glMap</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-map1f-6-id511237\"></span><a class=\"title_link\" name=\"map1f-6\" href=\"/erldoc/docs/#map1f-6\">map1f(Target, U1, U2, Stride, Order, Points) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U2 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Order = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Points = binary()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"map1f-6\"></a> </p><p>glMap</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-map2d-10-id511291\"></span><a class=\"title_link\" name=\"map2d-10\" href=\"/erldoc/docs/#map2d-10\">map2d(Target, U1, U2, Ustride, Uorder, V1, V2, Vstride, Vorder, Points) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U2 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ustride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Uorder = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Vstride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Vorder = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Points = binary()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"map2d-10\"></a> </p><p>glMap</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-map2f-10-id511354\"></span><a class=\"title_link\" name=\"map2f-10\" href=\"/erldoc/docs/#map2f-10\">map2f(Target, U1, U2, Ustride, Uorder, V1, V2, Vstride, Vorder, Points) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U2 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ustride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Uorder = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Vstride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Vorder = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Points = binary()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"map2f-10\"></a> </p><p>glMap</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getMapdv-3-id511418\"></span><a class=\"title_link\" name=\"getMapdv-3\" href=\"/erldoc/docs/#getMapdv-3\">getMapdv(Target, Query, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Query = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getMapdv-3\"></a> </p><p>Return evaluator parameters</p> <p><span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#map1d-6\">gl:map1d/6</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#map1d-6\">gl:map1d/6</a></span> define evaluators. <span class=\"code\">gl:getMap</span> returns evaluator parameters. <span class=\"code\">Target</span> chooses a map, <span class=\"code\">Query</span> selects a specific parameter, and <span class=\"code\">V</span> points to storage where the values will be returned.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetMap.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getMapfv-3-id511504\"></span><a class=\"title_link\" name=\"getMapfv-3\" href=\"/erldoc/docs/#getMapfv-3\">getMapfv(Target, Query, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Query = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getMapfv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getMapdv-3\">getMapdv/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getMapiv-3-id511555\"></span><a class=\"title_link\" name=\"getMapiv-3\" href=\"/erldoc/docs/#getMapiv-3\">getMapiv(Target, Query, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Query = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getMapiv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getMapdv-3\">getMapdv/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-evalCoord1d-1-id511605\"></span><a class=\"title_link\" name=\"evalCoord1d-1\" href=\"/erldoc/docs/#evalCoord1d-1\">evalCoord1d(U) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"evalCoord1d-1\"></a> </p><p>Evaluate enabled one- and two-dimensional maps</p> <p><span class=\"code\">gl:evalCoord1</span> evaluates enabled one-dimensional maps at argument <span class=\"code\">U</span> . <span class=\"code\">gl:evalCoord2</span> does the same for two-dimensional maps using two domain values, <span class=\"code\">U</span> and <span class=\"code\">V</span> . To define a map, call <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#map1d-6\">gl:map1d/6</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#map1d-6\">gl:map1d/6</a></span> ; to enable and disable it, call <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glEvalCoord.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-evalCoord1f-1-id511689\"></span><a class=\"title_link\" name=\"evalCoord1f-1\" href=\"/erldoc/docs/#evalCoord1f-1\">evalCoord1f(U) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"evalCoord1f-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#evalCoord1d-1\">evalCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-evalCoord1dv-1-id511720\"></span><a class=\"title_link\" name=\"evalCoord1dv-1\" href=\"/erldoc/docs/#evalCoord1dv-1\">evalCoord1dv(U) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U = {U::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"evalCoord1dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#evalCoord1d-1\">evalCoord1d(U)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-evalCoord1fv-1-id511753\"></span><a class=\"title_link\" name=\"evalCoord1fv-1\" href=\"/erldoc/docs/#evalCoord1fv-1\">evalCoord1fv(U) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U = {U::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"evalCoord1fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#evalCoord1f-1\">evalCoord1f(U)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-evalCoord2d-2-id511786\"></span><a class=\"title_link\" name=\"evalCoord2d-2\" href=\"/erldoc/docs/#evalCoord2d-2\">evalCoord2d(U, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"evalCoord2d-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#evalCoord1d-1\">evalCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-evalCoord2f-2-id511820\"></span><a class=\"title_link\" name=\"evalCoord2f-2\" href=\"/erldoc/docs/#evalCoord2f-2\">evalCoord2f(U, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"evalCoord2f-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#evalCoord1d-1\">evalCoord1d/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-evalCoord2dv-1-id511854\"></span><a class=\"title_link\" name=\"evalCoord2dv-1\" href=\"/erldoc/docs/#evalCoord2dv-1\">evalCoord2dv(U) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U = {U::float(), V::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"evalCoord2dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#evalCoord2d-2\">evalCoord2d(U, V)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-evalCoord2fv-1-id511887\"></span><a class=\"title_link\" name=\"evalCoord2fv-1\" href=\"/erldoc/docs/#evalCoord2fv-1\">evalCoord2fv(U) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U = {U::float(), V::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"evalCoord2fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#evalCoord2f-2\">evalCoord2f(U, V)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-mapGrid1d-3-id511920\"></span><a class=\"title_link\" name=\"mapGrid1d-3\" href=\"/erldoc/docs/#mapGrid1d-3\">mapGrid1d(Un, U1, U2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Un = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U2 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"mapGrid1d-3\"></a> </p><p>Define a one- or two-dimensional mesh</p> <p><span class=\"code\">gl:mapGrid</span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#evalMesh1-3\">gl:evalMesh1/3</a></span> are used together to efficiently generate and evaluate a series of evenly-spaced map domain values. <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#evalMesh1-3\">gl:evalMesh1/3</a></span> steps through the integer domain of a one- or two-dimensional grid, whose range is the domain of the evaluation maps specified by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#map1d-6\">gl:map1d/6</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#map1d-6\">gl:map1d/6</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glMapGrid.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-mapGrid1f-3-id511994\"></span><a class=\"title_link\" name=\"mapGrid1f-3\" href=\"/erldoc/docs/#mapGrid1f-3\">mapGrid1f(Un, U1, U2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Un = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U2 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"mapGrid1f-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mapGrid1d-3\">mapGrid1d/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-mapGrid2d-6-id512030\"></span><a class=\"title_link\" name=\"mapGrid2d-6\" href=\"/erldoc/docs/#mapGrid2d-6\">mapGrid2d(Un, U1, U2, Vn, V1, V2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Un = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U2 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Vn = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"mapGrid2d-6\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mapGrid1d-3\">mapGrid1d/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-mapGrid2f-6-id512074\"></span><a class=\"title_link\" name=\"mapGrid2f-6\" href=\"/erldoc/docs/#mapGrid2f-6\">mapGrid2f(Un, U1, U2, Vn, V1, V2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Un = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">U2 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Vn = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"mapGrid2f-6\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mapGrid1d-3\">mapGrid1d/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-evalPoint1-1-id512118\"></span><a class=\"title_link\" name=\"evalPoint1-1\" href=\"/erldoc/docs/#evalPoint1-1\">evalPoint1(I) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">I = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"evalPoint1-1\"></a> </p><p>Generate and evaluate a single point in a mesh</p> <p><span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#mapGrid1d-3\">gl:mapGrid1d/3</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#evalMesh1-3\">gl:evalMesh1/3</a></span> are used in tandem to efficiently generate and evaluate a series of evenly spaced map domain values. <span class=\"code\">gl:evalPoint</span> can be used to evaluate a single grid point in the same gridspace that is traversed by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#evalMesh1-3\">gl:evalMesh1/3</a></span> . Calling <span class=\"code\">gl:evalPoint1</span> is equivalent to calling glEvalCoord1( i.&amp;Delta; u+u 1 ); where &amp;Delta; u=(u 2-u 1)/n</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glEvalPoint.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-evalPoint2-2-id512185\"></span><a class=\"title_link\" name=\"evalPoint2-2\" href=\"/erldoc/docs/#evalPoint2-2\">evalPoint2(I, J) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">I = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">J = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"evalPoint2-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#evalPoint1-1\">evalPoint1/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-evalMesh1-3-id512219\"></span><a class=\"title_link\" name=\"evalMesh1-3\" href=\"/erldoc/docs/#evalMesh1-3\">evalMesh1(Mode, I1, I2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">I1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">I2 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"evalMesh1-3\"></a> </p><p>Compute a one- or two-dimensional grid of points or lines</p> <p><span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#mapGrid1d-3\">gl:mapGrid1d/3</a></span> and <span class=\"code\">gl:evalMesh</span> are used in tandem to efficiently generate and evaluate a series of evenly-spaced map domain values. <span class=\"code\">gl:evalMesh</span> steps through the integer domain of a one- or two-dimensional grid, whose range is the domain of the evaluation maps specified by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#map1d-6\">gl:map1d/6</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#map1d-6\">gl:map1d/6</a></span> . <span class=\"code\">Mode</span> determines whether the resulting vertices are connected as points, lines, or filled polygons.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glEvalMesh.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-evalMesh2-5-id512301\"></span><a class=\"title_link\" name=\"evalMesh2-5\" href=\"/erldoc/docs/#evalMesh2-5\">evalMesh2(Mode, I1, I2, J1, J2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">I1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">I2 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">J1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">J2 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"evalMesh2-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#evalMesh1-3\">evalMesh1/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-fogf-2-id512347\"></span><a class=\"title_link\" name=\"fogf-2\" href=\"/erldoc/docs/#fogf-2\">fogf(Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"fogf-2\"></a> </p><p>Specify fog parameters</p> <p>Fog is initially disabled. While enabled, fog affects rasterized geometry, bitmaps, and pixel blocks, but not buffer clear operations. To enable and disable fog, call <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> with argument <span class=\"code\">?GL_FOG</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glFog.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-fogi-2-id512412\"></span><a class=\"title_link\" name=\"fogi-2\" href=\"/erldoc/docs/#fogi-2\">fogi(Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"fogi-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#fogf-2\">fogf/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-fogfv-2-id512450\"></span><a class=\"title_link\" name=\"fogfv-2\" href=\"/erldoc/docs/#fogfv-2\">fogfv(Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"fogfv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#fogf-2\">fogf/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-fogiv-2-id512489\"></span><a class=\"title_link\" name=\"fogiv-2\" href=\"/erldoc/docs/#fogiv-2\">fogiv(Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"fogiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#fogf-2\">fogf/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-feedbackBuffer-3-id512528\"></span><a class=\"title_link\" name=\"feedbackBuffer-3\" href=\"/erldoc/docs/#feedbackBuffer-3\">feedbackBuffer(Size, Type, Buffer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buffer = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"feedbackBuffer-3\"></a> </p><p>Controls feedback mode</p> <p>The <span class=\"code\">gl:feedbackBuffer</span> function controls feedback. Feedback, like selection, is a GL mode. The mode is selected by calling <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#renderMode-1\">gl:renderMode/1</a></span> with <span class=\"code\">?GL_FEEDBACK</span>. When the GL is in feedback mode, no pixels are produced by rasterization. Instead, information about primitives that would have been rasterized is fed back to the application using the GL.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glFeedbackBuffer.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-passThrough-1-id512598\"></span><a class=\"title_link\" name=\"passThrough-1\" href=\"/erldoc/docs/#passThrough-1\">passThrough(Token) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Token = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"passThrough-1\"></a> </p><p>Place a marker in the feedback buffer</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glPassThrough.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-selectBuffer-2-id512636\"></span><a class=\"title_link\" name=\"selectBuffer-2\" href=\"/erldoc/docs/#selectBuffer-2\">selectBuffer(Size, Buffer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buffer = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"selectBuffer-2\"></a> </p><p>Establish a buffer for selection mode values</p> <p><span class=\"code\">gl:selectBuffer</span> has two arguments: <span class=\"code\">Buffer</span> is a pointer to an array of unsigned integers, and <span class=\"code\">Size</span> indicates the size of the array. <span class=\"code\">Buffer</span> returns values from the name stack (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#initNames-0\">gl:initNames/0</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#loadName-1\">gl:loadName/1</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#pushName-1\">gl:pushName/1</a></span> ) when the rendering mode is <span class=\"code\">?GL_SELECT</span> (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#renderMode-1\">gl:renderMode/1</a></span> ). <span class=\"code\">gl:selectBuffer</span> must be issued before selection mode is enabled, and it must not be issued while the rendering mode is <span class=\"code\">?GL_SELECT</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glSelectBuffer.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-initNames-0-id512735\"></span><a class=\"title_link\" name=\"initNames-0\" href=\"/erldoc/docs/#initNames-0\">initNames() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"initNames-0\"></a> </p><p>Initialize the name stack</p> <p>The name stack is used during selection mode to allow sets of rendering commands to be uniquely identified. It consists of an ordered set of unsigned integers. <span class=\"code\">gl:initNames</span> causes the name stack to be initialized to its default empty state.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glInitNames.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-loadName-1-id512775\"></span><a class=\"title_link\" name=\"loadName-1\" href=\"/erldoc/docs/#loadName-1\">loadName(Name) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"loadName-1\"></a> </p><p>Load a name onto the name stack</p> <p>The name stack is used during selection mode to allow sets of rendering commands to be uniquely identified. It consists of an ordered set of unsigned integers and is initially empty.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glLoadName.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pushName-1-id512818\"></span><a class=\"title_link\" name=\"pushName-1\" href=\"/erldoc/docs/#pushName-1\">pushName(Name) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pushName-1\"></a> </p><p>Push and pop the name stack</p> <p>The name stack is used during selection mode to allow sets of rendering commands to be uniquely identified. It consists of an ordered set of unsigned integers and is initially empty.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glPushName.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-popName-0-id512860\"></span><a class=\"title_link\" name=\"popName-0\" href=\"/erldoc/docs/#popName-0\">popName() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"popName-0\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pushName-1\">pushName/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-blendColor-4-id512886\"></span><a class=\"title_link\" name=\"blendColor-4\" href=\"/erldoc/docs/#blendColor-4\">blendColor(Red, Green, Blue, Alpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Alpha = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"blendColor-4\"></a> </p><p>Set the blend color</p> <p>The <span class=\"code\">?GL_BLEND_COLOR</span> may be used to calculate the source and destination blending factors. The color components are clamped to the range [0 1] before being stored. See <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#blendFunc-2\">gl:blendFunc/2</a></span> for a complete description of the blending operations. Initially the <span class=\"code\">?GL_BLEND_COLOR</span> is set to (0, 0, 0, 0).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBlendColor.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-blendEquation-1-id512968\"></span><a class=\"title_link\" name=\"blendEquation-1\" href=\"/erldoc/docs/#blendEquation-1\">blendEquation(Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"blendEquation-1\"></a> </p><p>Specify the equation used for both the RGB blend equation and the Alpha blend equation</p> <p>The blend equations determine how a new pixel (the &apos;&apos;source&apos;&apos; color) is combined with a pixel already in the framebuffer (the &apos;&apos;destination&apos;&apos; color). This function sets both the RGB blend equation and the alpha blend equation to a single equation. <span class=\"code\">gl:blendEquationi</span> specifies the blend equation for a single draw buffer whereas <span class=\"code\">gl:blendEquation</span> sets the blend equation for all draw buffers.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBlendEquation.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawRangeElements-6-id513025\"></span><a class=\"title_link\" name=\"drawRangeElements-6\" href=\"/erldoc/docs/#drawRangeElements-6\">drawRangeElements(Mode, Start, End, Count, Type, Indices) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Start = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">End = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Indices = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawRangeElements-6\"></a> </p><p>Render primitives from array data</p> <p><span class=\"code\">gl:drawRangeElements</span> is a restricted form of <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawElements-4\">gl:drawElements/4</a></span> . <span class=\"code\">Mode</span> , <span class=\"code\">Start</span> , <span class=\"code\">End</span> , and <span class=\"code\">Count</span> match the corresponding arguments to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawElements-4\">gl:drawElements/4</a></span> , with the additional constraint that all values in the arrays <span class=\"code\">Count</span> must lie between <span class=\"code\">Start</span> and <span class=\"code\">End</span> , inclusive.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawRangeElements.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texImage3D-10-id513140\"></span><a class=\"title_link\" name=\"texImage3D-10\" href=\"/erldoc/docs/#texImage3D-10\">texImage3D(Target, Level, InternalFormat, Width, Height, Depth, Border, Format, Type, Pixels) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">InternalFormat = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Depth = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Border = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pixels = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texImage3D-10\"></a> </p><p>Specify a three-dimensional texture image</p> <p>Texturing maps a portion of a specified texture image onto each graphical primitive for which texturing is enabled. To enable and disable three-dimensional texturing, call <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> with argument <span class=\"code\">?GL_TEXTURE_3D</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glTexImage3D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texSubImage3D-11-id513245\"></span><a class=\"title_link\" name=\"texSubImage3D-11\" href=\"/erldoc/docs/#texSubImage3D-11\">texSubImage3D(Target, Level, Xoffset, Yoffset, Zoffset, Width, Height, Depth, Format, Type, Pixels) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Xoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Yoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Zoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Depth = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pixels = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texSubImage3D-11\"></a> </p><p>glTexSubImage</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-copyTexSubImage3D-9-id513331\"></span><a class=\"title_link\" name=\"copyTexSubImage3D-9\" href=\"/erldoc/docs/#copyTexSubImage3D-9\">copyTexSubImage3D(Target, Level, Xoffset, Yoffset, Zoffset, X, Y, Width, Height) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Xoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Yoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Zoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"copyTexSubImage3D-9\"></a> </p><p>Copy a three-dimensional texture subimage</p> <p><span class=\"code\">gl:copyTexSubImage3D</span> replaces a rectangular portion of a three-dimensional texture image with pixels from the current <span class=\"code\">?GL_READ_BUFFER</span> (rather than from main memory, as is the case for <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texSubImage1D-7\">gl:texSubImage1D/7</a></span> ).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCopyTexSubImage3D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-colorTable-6-id513410\"></span><a class=\"title_link\" name=\"colorTable-6\" href=\"/erldoc/docs/#colorTable-6\">colorTable(Target, Internalformat, Width, Format, Type, Table) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Table = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"colorTable-6\"></a> </p><p>Define a color lookup table</p> <p><span class=\"code\">gl:colorTable</span> may be used in two ways: to test the actual size and color resolution of a lookup table given a particular set of parameters, or to load the contents of a color lookup table. Use the targets <span class=\"code\">?GL_PROXY_*</span> for the first case and the other targets for the second case.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glColorTable.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-colorTableParameterfv-3-id513501\"></span><a class=\"title_link\" name=\"colorTableParameterfv-3\" href=\"/erldoc/docs/#colorTableParameterfv-3\">colorTableParameterfv(Target, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = {float(), float(), float(), float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"colorTableParameterfv-3\"></a> </p><p>Set color lookup table parameters</p> <p><span class=\"code\">gl:colorTableParameter</span> is used to specify the scale factors and bias terms applied to color components when they are loaded into a color table. <span class=\"code\">Target</span> indicates which color table the scale and bias terms apply to; it must be set to <span class=\"code\">?GL_COLOR_TABLE</span>, <span class=\"code\">?GL_POST_CONVOLUTION_COLOR_TABLE</span> , or <span class=\"code\">?GL_POST_COLOR_MATRIX_COLOR_TABLE</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glColorTableParameter.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-colorTableParameteriv-3-id513576\"></span><a class=\"title_link\" name=\"colorTableParameteriv-3\" href=\"/erldoc/docs/#colorTableParameteriv-3\">colorTableParameteriv(Target, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"colorTableParameteriv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#colorTableParameterfv-3\">colorTableParameterfv/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-copyColorTable-5-id513622\"></span><a class=\"title_link\" name=\"copyColorTable-5\" href=\"/erldoc/docs/#copyColorTable-5\">copyColorTable(Target, Internalformat, X, Y, Width) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"copyColorTable-5\"></a> </p><p>Copy pixels into a color table</p> <p><span class=\"code\">gl:copyColorTable</span> loads a color table with pixels from the current <span class=\"code\">?GL_READ_BUFFER</span> (rather than from main memory, as is the case for <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#colorTable-6\">gl:colorTable/6</a></span> ).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glCopyColorTable.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getColorTable-4-id513695\"></span><a class=\"title_link\" name=\"getColorTable-4\" href=\"/erldoc/docs/#getColorTable-4\">getColorTable(Target, Format, Type, Table) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Table = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getColorTable-4\"></a> </p><p>Retrieve contents of a color lookup table</p> <p><span class=\"code\">gl:getColorTable</span> returns in <span class=\"code\">Table</span> the contents of the color table specified by <span class=\"code\">Target</span> . No pixel transfer operations are performed, but pixel storage modes that are applicable to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#readPixels-7\">gl:readPixels/7</a></span> are performed.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetColorTable.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getColorTableParameterfv-2-id513779\"></span><a class=\"title_link\" name=\"getColorTableParameterfv-2\" href=\"/erldoc/docs/#getColorTableParameterfv-2\">getColorTableParameterfv(Target, Pname) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getColorTableParameterfv-2\"></a> </p><p>Get color lookup table parameters</p> <p>Returns parameters specific to color table <span class=\"code\">Target</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetColorTableParameter.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getColorTableParameteriv-2-id513837\"></span><a class=\"title_link\" name=\"getColorTableParameteriv-2\" href=\"/erldoc/docs/#getColorTableParameteriv-2\">getColorTableParameteriv(Target, Pname) -&gt; {integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getColorTableParameteriv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getColorTableParameterfv-2\">getColorTableParameterfv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-colorSubTable-6-id513881\"></span><a class=\"title_link\" name=\"colorSubTable-6\" href=\"/erldoc/docs/#colorSubTable-6\">colorSubTable(Target, Start, Count, Format, Type, Data) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Start = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Data = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"colorSubTable-6\"></a> </p><p>Respecify a portion of a color table</p> <p><span class=\"code\">gl:colorSubTable</span> is used to respecify a contiguous portion of a color table previously defined using <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#colorTable-6\">gl:colorTable/6</a></span> . The pixels referenced by <span class=\"code\">Data</span> replace the portion of the existing table from indices <span class=\"code\">Start</span> to start+count-1, inclusive. This region may not include any entries outside the range of the color table as it was originally specified. It is not an error to specify a subtexture with width of 0, but such a specification has no effect.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glColorSubTable.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-copyColorSubTable-5-id513978\"></span><a class=\"title_link\" name=\"copyColorSubTable-5\" href=\"/erldoc/docs/#copyColorSubTable-5\">copyColorSubTable(Target, Start, X, Y, Width) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Start = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"copyColorSubTable-5\"></a> </p><p>Respecify a portion of a color table</p> <p><span class=\"code\">gl:copyColorSubTable</span> is used to respecify a contiguous portion of a color table previously defined using <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#colorTable-6\">gl:colorTable/6</a></span> . The pixels copied from the framebuffer replace the portion of the existing table from indices <span class=\"code\">Start</span> to start+x-1, inclusive. This region may not include any entries outside the range of the color table, as was originally specified. It is not an error to specify a subtexture with width of 0, but such a specification has no effect.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glCopyColorSubTable.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-convolutionFilter1D-6-id514049\"></span><a class=\"title_link\" name=\"convolutionFilter1D-6\" href=\"/erldoc/docs/#convolutionFilter1D-6\">convolutionFilter1D(Target, Internalformat, Width, Format, Type, Image) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Image = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"convolutionFilter1D-6\"></a> </p><p>Define a one-dimensional convolution filter</p> <p><span class=\"code\">gl:convolutionFilter1D</span> builds a one-dimensional convolution filter kernel from an array of pixels.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glConvolutionFilter1D.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-convolutionFilter2D-7-id514135\"></span><a class=\"title_link\" name=\"convolutionFilter2D-7\" href=\"/erldoc/docs/#convolutionFilter2D-7\">convolutionFilter2D(Target, Internalformat, Width, Height, Format, Type, Image) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Image = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"convolutionFilter2D-7\"></a> </p><p>Define a two-dimensional convolution filter</p> <p><span class=\"code\">gl:convolutionFilter2D</span> builds a two-dimensional convolution filter kernel from an array of pixels.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glConvolutionFilter2D.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-convolutionParameterf-3-id514224\"></span><a class=\"title_link\" name=\"convolutionParameterf-3\" href=\"/erldoc/docs/#convolutionParameterf-3\">convolutionParameterf(Target, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"convolutionParameterf-3\"></a> </p><p>Set convolution parameters</p> <p><span class=\"code\">gl:convolutionParameter</span> sets the value of a convolution parameter.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glConvolutionParameter.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-convolutionParameterfv-3-id514282\"></span><a class=\"title_link\" name=\"convolutionParameterfv-3\" href=\"/erldoc/docs/#convolutionParameterfv-3\">convolutionParameterfv(Target::enum(), Pname::enum(), Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = {Params::tuple()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"convolutionParameterfv-3\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#convolutionParameterf-3\">convolutionParameterf(Target, Pname, Params)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-convolutionParameteri-3-id514328\"></span><a class=\"title_link\" name=\"convolutionParameteri-3\" href=\"/erldoc/docs/#convolutionParameteri-3\">convolutionParameteri(Target, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"convolutionParameteri-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#convolutionParameterf-3\">convolutionParameterf/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-convolutionParameteriv-3-id514374\"></span><a class=\"title_link\" name=\"convolutionParameteriv-3\" href=\"/erldoc/docs/#convolutionParameteriv-3\">convolutionParameteriv(Target::enum(), Pname::enum(), Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = {Params::tuple()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"convolutionParameteriv-3\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#convolutionParameteri-3\">convolutionParameteri(Target, Pname, Params)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-copyConvolutionFilter1D-5-id514420\"></span><a class=\"title_link\" name=\"copyConvolutionFilter1D-5\" href=\"/erldoc/docs/#copyConvolutionFilter1D-5\">copyConvolutionFilter1D(Target, Internalformat, X, Y, Width) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"copyConvolutionFilter1D-5\"></a> </p><p>Copy pixels into a one-dimensional convolution filter</p> <p><span class=\"code\">gl:copyConvolutionFilter1D</span> defines a one-dimensional convolution filter kernel with pixels from the current <span class=\"code\">?GL_READ_BUFFER</span> (rather than from main memory, as is the case for <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#convolutionFilter1D-6\">gl:convolutionFilter1D/6</a></span> ).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glCopyConvolutionFilter1D.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-copyConvolutionFilter2D-6-id514494\"></span><a class=\"title_link\" name=\"copyConvolutionFilter2D-6\" href=\"/erldoc/docs/#copyConvolutionFilter2D-6\">copyConvolutionFilter2D(Target, Internalformat, X, Y, Width, Height) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"copyConvolutionFilter2D-6\"></a> </p><p>Copy pixels into a two-dimensional convolution filter</p> <p><span class=\"code\">gl:copyConvolutionFilter2D</span> defines a two-dimensional convolution filter kernel with pixels from the current <span class=\"code\">?GL_READ_BUFFER</span> (rather than from main memory, as is the case for <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#convolutionFilter2D-7\">gl:convolutionFilter2D/7</a></span> ).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glCopyConvolutionFilter2D.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getConvolutionFilter-4-id514571\"></span><a class=\"title_link\" name=\"getConvolutionFilter-4\" href=\"/erldoc/docs/#getConvolutionFilter-4\">getConvolutionFilter(Target, Format, Type, Image) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Image = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getConvolutionFilter-4\"></a> </p><p>Get current 1D or 2D convolution filter kernel</p> <p><span class=\"code\">gl:getConvolutionFilter</span> returns the current 1D or 2D convolution filter kernel as an image. The one- or two-dimensional image is placed in <span class=\"code\">Image</span> according to the specifications in <span class=\"code\">Format</span> and <span class=\"code\">Type</span> . No pixel transfer operations are performed on this image, but the relevant pixel storage modes are applied.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetConvolutionFilter.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getConvolutionParameterfv-2-id514654\"></span><a class=\"title_link\" name=\"getConvolutionParameterfv-2\" href=\"/erldoc/docs/#getConvolutionParameterfv-2\">getConvolutionParameterfv(Target, Pname) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getConvolutionParameterfv-2\"></a> </p><p>Get convolution parameters</p> <p><span class=\"code\">gl:getConvolutionParameter</span> retrieves convolution parameters. <span class=\"code\">Target</span> determines which convolution filter is queried. <span class=\"code\">Pname</span> determines which parameter is returned:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetConvolutionParameter.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getConvolutionParameteriv-2-id514718\"></span><a class=\"title_link\" name=\"getConvolutionParameteriv-2\" href=\"/erldoc/docs/#getConvolutionParameteriv-2\">getConvolutionParameteriv(Target, Pname) -&gt; {integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getConvolutionParameteriv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getConvolutionParameterfv-2\">getConvolutionParameterfv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-separableFilter2D-8-id514763\"></span><a class=\"title_link\" name=\"separableFilter2D-8\" href=\"/erldoc/docs/#separableFilter2D-8\">separableFilter2D(Target, Internalformat, Width, Height, Format, Type, Row, Column) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Row = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Column = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"separableFilter2D-8\"></a> </p><p>Define a separable two-dimensional convolution filter</p> <p><span class=\"code\">gl:separableFilter2D</span> builds a two-dimensional separable convolution filter kernel from two arrays of pixels.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glSeparableFilter2D.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getHistogram-5-id514865\"></span><a class=\"title_link\" name=\"getHistogram-5\" href=\"/erldoc/docs/#getHistogram-5\">getHistogram(Target, Reset, Format, Type, Values) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reset = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Values = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getHistogram-5\"></a> </p><p>Get histogram table</p> <p><span class=\"code\">gl:getHistogram</span> returns the current histogram table as a one-dimensional image with the same width as the histogram. No pixel transfer operations are performed on this image, but pixel storage modes that are applicable to 1D images are honored.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetHistogram.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getHistogramParameterfv-2-id514938\"></span><a class=\"title_link\" name=\"getHistogramParameterfv-2\" href=\"/erldoc/docs/#getHistogramParameterfv-2\">getHistogramParameterfv(Target, Pname) -&gt; {float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getHistogramParameterfv-2\"></a> </p><p>Get histogram parameters</p> <p><span class=\"code\">gl:getHistogramParameter</span> is used to query parameter values for the current histogram or for a proxy. The histogram state information may be queried by calling <span class=\"code\">gl:getHistogramParameter</span> with a <span class=\"code\">Target</span> of <span class=\"code\">?GL_HISTOGRAM</span> (to obtain information for the current histogram table) or <span class=\"code\">?GL_PROXY_HISTOGRAM</span> (to obtain information from the most recent proxy request) and one of the following values for the <span class=\"code\">Pname</span> argument:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetHistogramParameter.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getHistogramParameteriv-2-id515015\"></span><a class=\"title_link\" name=\"getHistogramParameteriv-2\" href=\"/erldoc/docs/#getHistogramParameteriv-2\">getHistogramParameteriv(Target, Pname) -&gt; {integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getHistogramParameteriv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getHistogramParameterfv-2\">getHistogramParameterfv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getMinmax-5-id515059\"></span><a class=\"title_link\" name=\"getMinmax-5\" href=\"/erldoc/docs/#getMinmax-5\">getMinmax(Target, Reset, Format, Types, Values) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reset = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Types = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Values = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getMinmax-5\"></a> </p><p>Get minimum and maximum pixel values</p> <p><span class=\"code\">gl:getMinmax</span> returns the accumulated minimum and maximum pixel values (computed on a per-component basis) in a one-dimensional image of width 2. The first set of return values are the minima, and the second set of return values are the maxima. The format of the return values is determined by <span class=\"code\">Format</span> , and their type is determined by <span class=\"code\">Types</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetMinmax.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getMinmaxParameterfv-2-id515141\"></span><a class=\"title_link\" name=\"getMinmaxParameterfv-2\" href=\"/erldoc/docs/#getMinmaxParameterfv-2\">getMinmaxParameterfv(Target, Pname) -&gt; {float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getMinmaxParameterfv-2\"></a> </p><p>Get minmax parameters</p> <p><span class=\"code\">gl:getMinmaxParameter</span> retrieves parameters for the current minmax table by setting <span class=\"code\">Pname</span> to one of the following values:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetMinmaxParameter.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getMinmaxParameteriv-2-id515200\"></span><a class=\"title_link\" name=\"getMinmaxParameteriv-2\" href=\"/erldoc/docs/#getMinmaxParameteriv-2\">getMinmaxParameteriv(Target, Pname) -&gt; {integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getMinmaxParameteriv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getMinmaxParameterfv-2\">getMinmaxParameterfv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-histogram-4-id515244\"></span><a class=\"title_link\" name=\"histogram-4\" href=\"/erldoc/docs/#histogram-4\">histogram(Target, Width, Internalformat, Sink) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sink = 0 | 1</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"histogram-4\"></a> </p><p>Define histogram table</p> <p>When <span class=\"code\">?GL_HISTOGRAM</span> is enabled, RGBA color components are converted to histogram table indices by clamping to the range [0,1], multiplying by the width of the histogram table, and rounding to the nearest integer. The table entries selected by the RGBA indices are then incremented. (If the internal format of the histogram table includes luminance, then the index derived from the R color component determines the luminance table entry to be incremented.) If a histogram table entry is incremented beyond its maximum value, then its value becomes undefined. (This is not an error.)</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glHistogram.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-minmax-3-id515310\"></span><a class=\"title_link\" name=\"minmax-3\" href=\"/erldoc/docs/#minmax-3\">minmax(Target, Internalformat, Sink) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sink = 0 | 1</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"minmax-3\"></a> </p><p>Define minmax table</p> <p>When <span class=\"code\">?GL_MINMAX</span> is enabled, the RGBA components of incoming pixels are compared to the minimum and maximum values for each component, which are stored in the two-element minmax table. (The first element stores the minima, and the second element stores the maxima.) If a pixel component is greater than the corresponding component in the maximum element, then the maximum element is updated with the pixel component value. If a pixel component is less than the corresponding component in the minimum element, then the minimum element is updated with the pixel component value. (In both cases, if the internal format of the minmax table includes luminance, then the R color component of incoming pixels is used for comparison.) The contents of the minmax table may be retrieved at a later time by calling <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getMinmax-5\">gl:getMinmax/5</a></span> . The minmax operation is enabled or disabled by calling <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> , respectively, with an argument of <span class=\"code\">?GL_MINMAX</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glMinmax.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-resetHistogram-1-id515398\"></span><a class=\"title_link\" name=\"resetHistogram-1\" href=\"/erldoc/docs/#resetHistogram-1\">resetHistogram(Target) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"resetHistogram-1\"></a> </p><p>Reset histogram table entries to zero</p> <p><span class=\"code\">gl:resetHistogram</span> resets all the elements of the current histogram table to zero.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glResetHistogram.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-resetMinmax-1-id515446\"></span><a class=\"title_link\" name=\"resetMinmax-1\" href=\"/erldoc/docs/#resetMinmax-1\">resetMinmax(Target) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"resetMinmax-1\"></a> </p><p>Reset minmax table entries to initial values</p> <p><span class=\"code\">gl:resetMinmax</span> resets the elements of the current minmax table to their initial values: the <span class=\"code\">maximum</span> element receives the minimum possible component values, and the <span class=\"code\">minimum</span> element receives the maximum possible component values.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glResetMinmax.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-activeTexture-1-id515504\"></span><a class=\"title_link\" name=\"activeTexture-1\" href=\"/erldoc/docs/#activeTexture-1\">activeTexture(Texture) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Texture = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"activeTexture-1\"></a> </p><p>Select active texture unit</p> <p><span class=\"code\">gl:activeTexture</span> selects which texture unit subsequent texture state calls will affect. The number of texture units an implementation supports is implementation dependent, but must be at least 80.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glActiveTexture.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-sampleCoverage-2-id515554\"></span><a class=\"title_link\" name=\"sampleCoverage-2\" href=\"/erldoc/docs/#sampleCoverage-2\">sampleCoverage(Value, Invert) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Invert = 0 | 1</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"sampleCoverage-2\"></a> </p><p>Specify multisample coverage parameters</p> <p>Multisampling samples a pixel multiple times at various implementation-dependent subpixel locations to generate antialiasing effects. Multisampling transparently antialiases points, lines, polygons, and images if it is enabled.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glSampleCoverage.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-compressedTexImage3D-9-id515604\"></span><a class=\"title_link\" name=\"compressedTexImage3D-9\" href=\"/erldoc/docs/#compressedTexImage3D-9\">compressedTexImage3D(Target, Level, Internalformat, Width, Height, Depth, Border, ImageSize, Data) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Depth = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Border = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ImageSize = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Data = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"compressedTexImage3D-9\"></a> </p><p>Specify a three-dimensional texture image in a compressed format</p> <p>Texturing allows elements of an image array to be read by shaders.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCompressedTexImage3D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-compressedTexImage2D-8-id515686\"></span><a class=\"title_link\" name=\"compressedTexImage2D-8\" href=\"/erldoc/docs/#compressedTexImage2D-8\">compressedTexImage2D(Target, Level, Internalformat, Width, Height, Border, ImageSize, Data) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Border = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ImageSize = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Data = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"compressedTexImage2D-8\"></a> </p><p>Specify a two-dimensional texture image in a compressed format</p> <p>Texturing allows elements of an image array to be read by shaders.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCompressedTexImage2D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-compressedTexImage1D-7-id515765\"></span><a class=\"title_link\" name=\"compressedTexImage1D-7\" href=\"/erldoc/docs/#compressedTexImage1D-7\">compressedTexImage1D(Target, Level, Internalformat, Width, Border, ImageSize, Data) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Border = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ImageSize = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Data = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"compressedTexImage1D-7\"></a> </p><p>Specify a one-dimensional texture image in a compressed format</p> <p>Texturing allows elements of an image array to be read by shaders.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCompressedTexImage1D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-compressedTexSubImage3D-11-id515842\"></span><a class=\"title_link\" name=\"compressedTexSubImage3D-11\" href=\"/erldoc/docs/#compressedTexSubImage3D-11\">compressedTexSubImage3D(Target, Level, Xoffset, Yoffset, Zoffset, Width, Height, Depth, Format, ImageSize, Data) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Xoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Yoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Zoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Depth = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ImageSize = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Data = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"compressedTexSubImage3D-11\"></a> </p><p>Specify a three-dimensional texture subimage in a compressed format</p> <p>Texturing allows elements of an image array to be read by shaders.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCompressedTexSubImage3D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-compressedTexSubImage2D-9-id515929\"></span><a class=\"title_link\" name=\"compressedTexSubImage2D-9\" href=\"/erldoc/docs/#compressedTexSubImage2D-9\">compressedTexSubImage2D(Target, Level, Xoffset, Yoffset, Width, Height, Format, ImageSize, Data) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Xoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Yoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ImageSize = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Data = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"compressedTexSubImage2D-9\"></a> </p><p>Specify a two-dimensional texture subimage in a compressed format</p> <p>Texturing allows elements of an image array to be read by shaders.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCompressedTexSubImage2D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-compressedTexSubImage1D-7-id516011\"></span><a class=\"title_link\" name=\"compressedTexSubImage1D-7\" href=\"/erldoc/docs/#compressedTexSubImage1D-7\">compressedTexSubImage1D(Target, Level, Xoffset, Width, Format, ImageSize, Data) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Xoffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ImageSize = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Data = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"compressedTexSubImage1D-7\"></a> </p><p>Specify a one-dimensional texture subimage in a compressed format</p> <p>Texturing allows elements of an image array to be read by shaders.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCompressedTexSubImage1D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getCompressedTexImage-3-id516089\"></span><a class=\"title_link\" name=\"getCompressedTexImage-3\" href=\"/erldoc/docs/#getCompressedTexImage-3\">getCompressedTexImage(Target, Lod, Img) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Lod = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Img = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getCompressedTexImage-3\"></a> </p><p>Return a compressed texture image</p> <p><span class=\"code\">gl:getCompressedTexImage</span> returns the compressed texture image associated with <span class=\"code\">Target</span> and <span class=\"code\">Lod</span> into <span class=\"code\">Img</span> . <span class=\"code\">Img</span> should be an array of <span class=\"code\">?GL_TEXTURE_COMPRESSED_IMAGE_SIZE</span> bytes. <span class=\"code\">Target</span> specifies whether the desired texture image was one specified by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage1D-8\">gl:texImage1D/8</a></span> (<span class=\"code\">?GL_TEXTURE_1D</span>), <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage2D-9\">gl:texImage2D/9</a></span> (<span class=\"code\">?GL_TEXTURE_2D</span> or any of <span class=\"code\">?GL_TEXTURE_CUBE_MAP_*</span> ), or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texImage3D-10\">gl:texImage3D/10</a></span> (<span class=\"code\">?GL_TEXTURE_3D</span>). <span class=\"code\">Lod</span> specifies the level-of-detail number of the desired image.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetCompressedTexImage.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clientActiveTexture-1-id516207\"></span><a class=\"title_link\" name=\"clientActiveTexture-1\" href=\"/erldoc/docs/#clientActiveTexture-1\">clientActiveTexture(Texture) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Texture = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clientActiveTexture-1\"></a> </p><p>Select active texture unit</p> <p><span class=\"code\">gl:clientActiveTexture</span> selects the vertex array client state parameters to be modified by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#texCoordPointer-4\">gl:texCoordPointer/4</a></span> , and enabled or disabled with <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enableClientState-1\">gl:enableClientState/1</a></span> or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enableClientState-1\">gl:enableClientState/1</a></span> , respectively, when called with a parameter of <span class=\"code\">?GL_TEXTURE_COORD_ARRAY</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glClientActiveTexture.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord1d-2-id516278\"></span><a class=\"title_link\" name=\"multiTexCoord1d-2\" href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d(Target, S) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord1d-2\"></a> </p><p>Set the current texture coordinates</p> <p><span class=\"code\">gl:multiTexCoord</span> specifies texture coordinates in one, two, three, or four dimensions. <span class=\"code\">gl:multiTexCoord1</span> sets the current texture coordinates to (s 0 0 1); a call to <span class=\"code\">gl:multiTexCoord2</span> sets them to (s t 0 1). Similarly, <span class=\"code\">gl:multiTexCoord3</span> specifies the texture coordinates as (s t r 1), and <span class=\"code\">gl:multiTexCoord4</span> defines all four components explicitly as (s t r q).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glMultiTexCoord.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord1dv-2-id516345\"></span><a class=\"title_link\" name=\"multiTexCoord1dv-2\" href=\"/erldoc/docs/#multiTexCoord1dv-2\">multiTexCoord1dv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord1dv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d(Target, S)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord1f-2-id516385\"></span><a class=\"title_link\" name=\"multiTexCoord1f-2\" href=\"/erldoc/docs/#multiTexCoord1f-2\">multiTexCoord1f(Target, S) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord1f-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord1fv-2-id516423\"></span><a class=\"title_link\" name=\"multiTexCoord1fv-2\" href=\"/erldoc/docs/#multiTexCoord1fv-2\">multiTexCoord1fv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord1fv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1f-2\">multiTexCoord1f(Target, S)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord1i-2-id516463\"></span><a class=\"title_link\" name=\"multiTexCoord1i-2\" href=\"/erldoc/docs/#multiTexCoord1i-2\">multiTexCoord1i(Target, S) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord1i-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord1iv-2-id516502\"></span><a class=\"title_link\" name=\"multiTexCoord1iv-2\" href=\"/erldoc/docs/#multiTexCoord1iv-2\">multiTexCoord1iv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord1iv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1i-2\">multiTexCoord1i(Target, S)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord1s-2-id516541\"></span><a class=\"title_link\" name=\"multiTexCoord1s-2\" href=\"/erldoc/docs/#multiTexCoord1s-2\">multiTexCoord1s(Target, S) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord1s-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord1sv-2-id516580\"></span><a class=\"title_link\" name=\"multiTexCoord1sv-2\" href=\"/erldoc/docs/#multiTexCoord1sv-2\">multiTexCoord1sv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord1sv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1s-2\">multiTexCoord1s(Target, S)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord2d-3-id516619\"></span><a class=\"title_link\" name=\"multiTexCoord2d-3\" href=\"/erldoc/docs/#multiTexCoord2d-3\">multiTexCoord2d(Target, S, T) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord2d-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord2dv-2-id516660\"></span><a class=\"title_link\" name=\"multiTexCoord2dv-2\" href=\"/erldoc/docs/#multiTexCoord2dv-2\">multiTexCoord2dv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float(), T::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord2dv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord2d-3\">multiTexCoord2d(Target, S, T)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord2f-3-id516700\"></span><a class=\"title_link\" name=\"multiTexCoord2f-3\" href=\"/erldoc/docs/#multiTexCoord2f-3\">multiTexCoord2f(Target, S, T) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord2f-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord2fv-2-id516741\"></span><a class=\"title_link\" name=\"multiTexCoord2fv-2\" href=\"/erldoc/docs/#multiTexCoord2fv-2\">multiTexCoord2fv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float(), T::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord2fv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord2f-3\">multiTexCoord2f(Target, S, T)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord2i-3-id516780\"></span><a class=\"title_link\" name=\"multiTexCoord2i-3\" href=\"/erldoc/docs/#multiTexCoord2i-3\">multiTexCoord2i(Target, S, T) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord2i-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord2iv-2-id516822\"></span><a class=\"title_link\" name=\"multiTexCoord2iv-2\" href=\"/erldoc/docs/#multiTexCoord2iv-2\">multiTexCoord2iv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer(), T::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord2iv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord2i-3\">multiTexCoord2i(Target, S, T)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord2s-3-id516861\"></span><a class=\"title_link\" name=\"multiTexCoord2s-3\" href=\"/erldoc/docs/#multiTexCoord2s-3\">multiTexCoord2s(Target, S, T) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord2s-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord2sv-2-id516902\"></span><a class=\"title_link\" name=\"multiTexCoord2sv-2\" href=\"/erldoc/docs/#multiTexCoord2sv-2\">multiTexCoord2sv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer(), T::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord2sv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord2s-3\">multiTexCoord2s(Target, S, T)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord3d-4-id516942\"></span><a class=\"title_link\" name=\"multiTexCoord3d-4\" href=\"/erldoc/docs/#multiTexCoord3d-4\">multiTexCoord3d(Target, S, T, R) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord3d-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord3dv-2-id516985\"></span><a class=\"title_link\" name=\"multiTexCoord3dv-2\" href=\"/erldoc/docs/#multiTexCoord3dv-2\">multiTexCoord3dv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float(), T::float(), R::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord3dv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord3d-4\">multiTexCoord3d(Target, S, T, R)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord3f-4-id517025\"></span><a class=\"title_link\" name=\"multiTexCoord3f-4\" href=\"/erldoc/docs/#multiTexCoord3f-4\">multiTexCoord3f(Target, S, T, R) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord3f-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord3fv-2-id517068\"></span><a class=\"title_link\" name=\"multiTexCoord3fv-2\" href=\"/erldoc/docs/#multiTexCoord3fv-2\">multiTexCoord3fv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float(), T::float(), R::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord3fv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord3f-4\">multiTexCoord3f(Target, S, T, R)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord3i-4-id517108\"></span><a class=\"title_link\" name=\"multiTexCoord3i-4\" href=\"/erldoc/docs/#multiTexCoord3i-4\">multiTexCoord3i(Target, S, T, R) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord3i-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord3iv-2-id517152\"></span><a class=\"title_link\" name=\"multiTexCoord3iv-2\" href=\"/erldoc/docs/#multiTexCoord3iv-2\">multiTexCoord3iv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer(), T::integer(), R::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord3iv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord3i-4\">multiTexCoord3i(Target, S, T, R)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord3s-4-id517191\"></span><a class=\"title_link\" name=\"multiTexCoord3s-4\" href=\"/erldoc/docs/#multiTexCoord3s-4\">multiTexCoord3s(Target, S, T, R) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord3s-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord3sv-2-id517235\"></span><a class=\"title_link\" name=\"multiTexCoord3sv-2\" href=\"/erldoc/docs/#multiTexCoord3sv-2\">multiTexCoord3sv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer(), T::integer(), R::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord3sv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord3s-4\">multiTexCoord3s(Target, S, T, R)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord4d-5-id517274\"></span><a class=\"title_link\" name=\"multiTexCoord4d-5\" href=\"/erldoc/docs/#multiTexCoord4d-5\">multiTexCoord4d(Target, S, T, R, Q) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Q = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord4d-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord4dv-2-id517321\"></span><a class=\"title_link\" name=\"multiTexCoord4dv-2\" href=\"/erldoc/docs/#multiTexCoord4dv-2\">multiTexCoord4dv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float(), T::float(), R::float(), Q::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord4dv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord4d-5\">multiTexCoord4d(Target, S, T, R, Q)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord4f-5-id517360\"></span><a class=\"title_link\" name=\"multiTexCoord4f-5\" href=\"/erldoc/docs/#multiTexCoord4f-5\">multiTexCoord4f(Target, S, T, R, Q) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Q = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord4f-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord4fv-2-id517406\"></span><a class=\"title_link\" name=\"multiTexCoord4fv-2\" href=\"/erldoc/docs/#multiTexCoord4fv-2\">multiTexCoord4fv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::float(), T::float(), R::float(), Q::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord4fv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord4f-5\">multiTexCoord4f(Target, S, T, R, Q)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord4i-5-id517446\"></span><a class=\"title_link\" name=\"multiTexCoord4i-5\" href=\"/erldoc/docs/#multiTexCoord4i-5\">multiTexCoord4i(Target, S, T, R, Q) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Q = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord4i-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord4iv-2-id517492\"></span><a class=\"title_link\" name=\"multiTexCoord4iv-2\" href=\"/erldoc/docs/#multiTexCoord4iv-2\">multiTexCoord4iv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer(), T::integer(), R::integer(), Q::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord4iv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord4i-5\">multiTexCoord4i(Target, S, T, R, Q)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord4s-5-id517532\"></span><a class=\"title_link\" name=\"multiTexCoord4s-5\" href=\"/erldoc/docs/#multiTexCoord4s-5\">multiTexCoord4s(Target, S, T, R, Q) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">S = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">T = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Q = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord4s-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord1d-2\">multiTexCoord1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiTexCoord4sv-2-id517578\"></span><a class=\"title_link\" name=\"multiTexCoord4sv-2\" href=\"/erldoc/docs/#multiTexCoord4sv-2\">multiTexCoord4sv(Target::enum(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {S::integer(), T::integer(), R::integer(), Q::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiTexCoord4sv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiTexCoord4s-5\">multiTexCoord4s(Target, S, T, R, Q)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-loadTransposeMatrixf-1-id517618\"></span><a class=\"title_link\" name=\"loadTransposeMatrixf-1\" href=\"/erldoc/docs/#loadTransposeMatrixf-1\">loadTransposeMatrixf(M) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">M = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-matrix\">matrix()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"loadTransposeMatrixf-1\"></a> </p><p>Replace the current matrix with the specified row-major ordered matrix</p> <p><span class=\"code\">gl:loadTransposeMatrix</span> replaces the current matrix with the one whose elements are specified by <span class=\"code\">M</span> . The current matrix is the projection matrix, modelview matrix, or texture matrix, depending on the current matrix mode (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#matrixMode-1\">gl:matrixMode/1</a></span> ).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glLoadTransposeMatrix.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-loadTransposeMatrixd-1-id517678\"></span><a class=\"title_link\" name=\"loadTransposeMatrixd-1\" href=\"/erldoc/docs/#loadTransposeMatrixd-1\">loadTransposeMatrixd(M) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">M = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-matrix\">matrix()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"loadTransposeMatrixd-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#loadTransposeMatrixf-1\">loadTransposeMatrixf/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multTransposeMatrixf-1-id517714\"></span><a class=\"title_link\" name=\"multTransposeMatrixf-1\" href=\"/erldoc/docs/#multTransposeMatrixf-1\">multTransposeMatrixf(M) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">M = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-matrix\">matrix()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multTransposeMatrixf-1\"></a> </p><p>Multiply the current matrix with the specified row-major ordered matrix</p> <p><span class=\"code\">gl:multTransposeMatrix</span> multiplies the current matrix with the one specified using <span class=\"code\">M</span> , and replaces the current matrix with the product.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glMultTransposeMatrix.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multTransposeMatrixd-1-id517767\"></span><a class=\"title_link\" name=\"multTransposeMatrixd-1\" href=\"/erldoc/docs/#multTransposeMatrixd-1\">multTransposeMatrixd(M) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">M = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-matrix\">matrix()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multTransposeMatrixd-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multTransposeMatrixf-1\">multTransposeMatrixf/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-blendFuncSeparate-4-id517804\"></span><a class=\"title_link\" name=\"blendFuncSeparate-4\" href=\"/erldoc/docs/#blendFuncSeparate-4\">blendFuncSeparate(SfactorRGB, DfactorRGB, SfactorAlpha, DfactorAlpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SfactorRGB = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">DfactorRGB = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SfactorAlpha = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">DfactorAlpha = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"blendFuncSeparate-4\"></a> </p><p>Specify pixel arithmetic for RGB and alpha components separately</p> <p>Pixels can be drawn using a function that blends the incoming (source) RGBA values with the RGBA values that are already in the frame buffer (the destination values). Blending is initially disabled. Use <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> with argument <span class=\"code\">?GL_BLEND</span> to enable and disable blending.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBlendFuncSeparate.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multiDrawArrays-3-id517889\"></span><a class=\"title_link\" name=\"multiDrawArrays-3\" href=\"/erldoc/docs/#multiDrawArrays-3\">multiDrawArrays(Mode, First, Count) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">First = [integer()] | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = [integer()] | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multiDrawArrays-3\"></a> </p><p>Render multiple sets of primitives from array data</p> <p><span class=\"code\">gl:multiDrawArrays</span> specifies multiple sets of geometric primitives with very few subroutine calls. Instead of calling a GL procedure to pass each individual vertex, normal, texture coordinate, edge flag, or color, you can prespecify separate arrays of vertices, normals, and colors and use them to construct a sequence of primitives with a single call to <span class=\"code\">gl:multiDrawArrays</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glMultiDrawArrays.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pointParameterf-2-id517959\"></span><a class=\"title_link\" name=\"pointParameterf-2\" href=\"/erldoc/docs/#pointParameterf-2\">pointParameterf(Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pointParameterf-2\"></a> </p><p>Specify point parameters</p> <p>The following values are accepted for <span class=\"code\">Pname</span> :</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glPointParameter.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pointParameterfv-2-id518011\"></span><a class=\"title_link\" name=\"pointParameterfv-2\" href=\"/erldoc/docs/#pointParameterfv-2\">pointParameterfv(Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pointParameterfv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pointParameterf-2\">pointParameterf/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pointParameteri-2-id518050\"></span><a class=\"title_link\" name=\"pointParameteri-2\" href=\"/erldoc/docs/#pointParameteri-2\">pointParameteri(Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pointParameteri-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pointParameterf-2\">pointParameterf/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pointParameteriv-2-id518088\"></span><a class=\"title_link\" name=\"pointParameteriv-2\" href=\"/erldoc/docs/#pointParameteriv-2\">pointParameteriv(Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"pointParameteriv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pointParameterf-2\">pointParameterf/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-fogCoordf-1-id518127\"></span><a class=\"title_link\" name=\"fogCoordf-1\" href=\"/erldoc/docs/#fogCoordf-1\">fogCoordf(Coord) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Coord = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"fogCoordf-1\"></a> </p><p>Set the current fog coordinates</p> <p><span class=\"code\">gl:fogCoord</span> specifies the fog coordinate that is associated with each vertex and the current raster position. The value specified is interpolated and used in computing the fog color (see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#fogf-2\">gl:fogf/2</a></span> ).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glFogCoord.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-fogCoordfv-1-id518178\"></span><a class=\"title_link\" name=\"fogCoordfv-1\" href=\"/erldoc/docs/#fogCoordfv-1\">fogCoordfv(Coord) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Coord = {Coord::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"fogCoordfv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#fogCoordf-1\">fogCoordf(Coord)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-fogCoordd-1-id518211\"></span><a class=\"title_link\" name=\"fogCoordd-1\" href=\"/erldoc/docs/#fogCoordd-1\">fogCoordd(Coord) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Coord = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"fogCoordd-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#fogCoordf-1\">fogCoordf/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-fogCoorddv-1-id518242\"></span><a class=\"title_link\" name=\"fogCoorddv-1\" href=\"/erldoc/docs/#fogCoorddv-1\">fogCoorddv(Coord) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Coord = {Coord::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"fogCoorddv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#fogCoordd-1\">fogCoordd(Coord)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-fogCoordPointer-3-id518276\"></span><a class=\"title_link\" name=\"fogCoordPointer-3\" href=\"/erldoc/docs/#fogCoordPointer-3\">fogCoordPointer(Type, Stride, Pointer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pointer = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"fogCoordPointer-3\"></a> </p><p>Define an array of fog coordinates</p> <p><span class=\"code\">gl:fogCoordPointer</span> specifies the location and data format of an array of fog coordinates to use when rendering. <span class=\"code\">Type</span> specifies the data type of each fog coordinate, and <span class=\"code\">Stride</span> specifies the byte stride from one fog coordinate to the next, allowing vertices and attributes to be packed into a single array or stored in separate arrays.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glFogCoordPointer.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3b-3-id518349\"></span><a class=\"title_link\" name=\"secondaryColor3b-3\" href=\"/erldoc/docs/#secondaryColor3b-3\">secondaryColor3b(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3b-3\"></a> </p><p>Set the current secondary color</p> <p>The GL stores both a primary four-valued RGBA color and a secondary four-valued RGBA color (where alpha is always set to 0.0) that is associated with every vertex.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glSecondaryColor.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3bv-1-id518396\"></span><a class=\"title_link\" name=\"secondaryColor3bv-1\" href=\"/erldoc/docs/#secondaryColor3bv-1\">secondaryColor3bv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3bv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3b-3\">secondaryColor3b(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3d-3-id518430\"></span><a class=\"title_link\" name=\"secondaryColor3d-3\" href=\"/erldoc/docs/#secondaryColor3d-3\">secondaryColor3d(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3d-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3b-3\">secondaryColor3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3dv-1-id518467\"></span><a class=\"title_link\" name=\"secondaryColor3dv-1\" href=\"/erldoc/docs/#secondaryColor3dv-1\">secondaryColor3dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::float(), Green::float(), Blue::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3d-3\">secondaryColor3d(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3f-3-id518500\"></span><a class=\"title_link\" name=\"secondaryColor3f-3\" href=\"/erldoc/docs/#secondaryColor3f-3\">secondaryColor3f(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3f-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3b-3\">secondaryColor3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3fv-1-id518537\"></span><a class=\"title_link\" name=\"secondaryColor3fv-1\" href=\"/erldoc/docs/#secondaryColor3fv-1\">secondaryColor3fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::float(), Green::float(), Blue::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3f-3\">secondaryColor3f(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3i-3-id518570\"></span><a class=\"title_link\" name=\"secondaryColor3i-3\" href=\"/erldoc/docs/#secondaryColor3i-3\">secondaryColor3i(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3i-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3b-3\">secondaryColor3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3iv-1-id518607\"></span><a class=\"title_link\" name=\"secondaryColor3iv-1\" href=\"/erldoc/docs/#secondaryColor3iv-1\">secondaryColor3iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3i-3\">secondaryColor3i(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3s-3-id518641\"></span><a class=\"title_link\" name=\"secondaryColor3s-3\" href=\"/erldoc/docs/#secondaryColor3s-3\">secondaryColor3s(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3s-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3b-3\">secondaryColor3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3sv-1-id518677\"></span><a class=\"title_link\" name=\"secondaryColor3sv-1\" href=\"/erldoc/docs/#secondaryColor3sv-1\">secondaryColor3sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3s-3\">secondaryColor3s(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3ub-3-id518711\"></span><a class=\"title_link\" name=\"secondaryColor3ub-3\" href=\"/erldoc/docs/#secondaryColor3ub-3\">secondaryColor3ub(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3ub-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3b-3\">secondaryColor3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3ubv-1-id518748\"></span><a class=\"title_link\" name=\"secondaryColor3ubv-1\" href=\"/erldoc/docs/#secondaryColor3ubv-1\">secondaryColor3ubv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3ubv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3ub-3\">secondaryColor3ub(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3ui-3-id518781\"></span><a class=\"title_link\" name=\"secondaryColor3ui-3\" href=\"/erldoc/docs/#secondaryColor3ui-3\">secondaryColor3ui(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3ui-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3b-3\">secondaryColor3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3uiv-1-id518818\"></span><a class=\"title_link\" name=\"secondaryColor3uiv-1\" href=\"/erldoc/docs/#secondaryColor3uiv-1\">secondaryColor3uiv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3uiv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3ui-3\">secondaryColor3ui(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3us-3-id518852\"></span><a class=\"title_link\" name=\"secondaryColor3us-3\" href=\"/erldoc/docs/#secondaryColor3us-3\">secondaryColor3us(Red, Green, Blue) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Red = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Green = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Blue = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3us-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3b-3\">secondaryColor3b/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColor3usv-1-id518888\"></span><a class=\"title_link\" name=\"secondaryColor3usv-1\" href=\"/erldoc/docs/#secondaryColor3usv-1\">secondaryColor3usv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {Red::integer(), Green::integer(), Blue::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColor3usv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#secondaryColor3us-3\">secondaryColor3us(Red, Green, Blue)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-secondaryColorPointer-4-id518922\"></span><a class=\"title_link\" name=\"secondaryColorPointer-4\" href=\"/erldoc/docs/#secondaryColorPointer-4\">secondaryColorPointer(Size, Type, Stride, Pointer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pointer = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"secondaryColorPointer-4\"></a> </p><p>Define an array of secondary colors</p> <p><span class=\"code\">gl:secondaryColorPointer</span> specifies the location and data format of an array of color components to use when rendering. <span class=\"code\">Size</span> specifies the number of components per color, and must be 3. <span class=\"code\">Type</span> specifies the data type of each color component, and <span class=\"code\">Stride</span> specifies the byte stride from one color to the next, allowing vertices and attributes to be packed into a single array or stored in separate arrays.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glSecondaryColorPointer.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos2d-2-id519002\"></span><a class=\"title_link\" name=\"windowPos2d-2\" href=\"/erldoc/docs/#windowPos2d-2\">windowPos2d(X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos2d-2\"></a> </p><p>Specify the raster position in window coordinates for pixel operations</p> <p>The GL maintains a 3D position in window coordinates. This position, called the raster position, is used to position pixel and bitmap write operations. It is maintained with subpixel accuracy. See <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#bitmap-7\">gl:bitmap/7</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawPixels-5\">gl:drawPixels/5</a></span> , and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#copyPixels-5\">gl:copyPixels/5</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glWindowPos.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos2dv-1-id519066\"></span><a class=\"title_link\" name=\"windowPos2dv-1\" href=\"/erldoc/docs/#windowPos2dv-1\">windowPos2dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos2dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos2d-2\">windowPos2d(X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos2f-2-id519099\"></span><a class=\"title_link\" name=\"windowPos2f-2\" href=\"/erldoc/docs/#windowPos2f-2\">windowPos2f(X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos2f-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos2d-2\">windowPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos2fv-1-id519133\"></span><a class=\"title_link\" name=\"windowPos2fv-1\" href=\"/erldoc/docs/#windowPos2fv-1\">windowPos2fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos2fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos2f-2\">windowPos2f(X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos2i-2-id519166\"></span><a class=\"title_link\" name=\"windowPos2i-2\" href=\"/erldoc/docs/#windowPos2i-2\">windowPos2i(X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos2i-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos2d-2\">windowPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos2iv-1-id519200\"></span><a class=\"title_link\" name=\"windowPos2iv-1\" href=\"/erldoc/docs/#windowPos2iv-1\">windowPos2iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos2iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos2i-2\">windowPos2i(X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos2s-2-id519233\"></span><a class=\"title_link\" name=\"windowPos2s-2\" href=\"/erldoc/docs/#windowPos2s-2\">windowPos2s(X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos2s-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos2d-2\">windowPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos2sv-1-id519267\"></span><a class=\"title_link\" name=\"windowPos2sv-1\" href=\"/erldoc/docs/#windowPos2sv-1\">windowPos2sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos2sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos2s-2\">windowPos2s(X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos3d-3-id519300\"></span><a class=\"title_link\" name=\"windowPos3d-3\" href=\"/erldoc/docs/#windowPos3d-3\">windowPos3d(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos3d-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos2d-2\">windowPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos3dv-1-id519336\"></span><a class=\"title_link\" name=\"windowPos3dv-1\" href=\"/erldoc/docs/#windowPos3dv-1\">windowPos3dv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos3dv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos3d-3\">windowPos3d(X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos3f-3-id519369\"></span><a class=\"title_link\" name=\"windowPos3f-3\" href=\"/erldoc/docs/#windowPos3f-3\">windowPos3f(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos3f-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos2d-2\">windowPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos3fv-1-id519406\"></span><a class=\"title_link\" name=\"windowPos3fv-1\" href=\"/erldoc/docs/#windowPos3fv-1\">windowPos3fv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos3fv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos3f-3\">windowPos3f(X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos3i-3-id519439\"></span><a class=\"title_link\" name=\"windowPos3i-3\" href=\"/erldoc/docs/#windowPos3i-3\">windowPos3i(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos3i-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos2d-2\">windowPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos3iv-1-id519475\"></span><a class=\"title_link\" name=\"windowPos3iv-1\" href=\"/erldoc/docs/#windowPos3iv-1\">windowPos3iv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos3iv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos3i-3\">windowPos3i(X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos3s-3-id519509\"></span><a class=\"title_link\" name=\"windowPos3s-3\" href=\"/erldoc/docs/#windowPos3s-3\">windowPos3s(X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos3s-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos2d-2\">windowPos2d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-windowPos3sv-1-id519545\"></span><a class=\"title_link\" name=\"windowPos3sv-1\" href=\"/erldoc/docs/#windowPos3sv-1\">windowPos3sv(V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"windowPos3sv-1\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#windowPos3s-3\">windowPos3s(X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-genQueries-1-id519578\"></span><a class=\"title_link\" name=\"genQueries-1\" href=\"/erldoc/docs/#genQueries-1\">genQueries(N) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">N = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"genQueries-1\"></a> </p><p>Generate query object names</p> <p><span class=\"code\">gl:genQueries</span> returns <span class=\"code\">N</span> query object names in <span class=\"code\">Ids</span> . There is no guarantee that the names form a contiguous set of integers; however, it is guaranteed that none of the returned names was in use immediately before the call to <span class=\"code\">gl:genQueries</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGenQueries.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteQueries-1-id519634\"></span><a class=\"title_link\" name=\"deleteQueries-1\" href=\"/erldoc/docs/#deleteQueries-1\">deleteQueries(Ids) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ids = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteQueries-1\"></a> </p><p>Delete named query objects</p> <p><span class=\"code\">gl:deleteQueries</span> deletes <span class=\"code\">N</span> query objects named by the elements of the array <span class=\"code\">Ids</span> . After a query object is deleted, it has no contents, and its name is free for reuse (for example by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genQueries-1\">gl:genQueries/1</a></span> ).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDeleteQueries.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isQuery-1-id519693\"></span><a class=\"title_link\" name=\"isQuery-1\" href=\"/erldoc/docs/#isQuery-1\">isQuery(Id) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isQuery-1\"></a> </p><p>Determine if a name corresponds to a query object</p> <p><span class=\"code\">gl:isQuery</span> returns <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">Id</span> is currently the name of a query object. If <span class=\"code\">Id</span> is zero, or is a non-zero value that is not currently the name of a query object, or if an error occurs, <span class=\"code\">gl:isQuery</span> returns <span class=\"code\">?GL_FALSE</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glIsQuery.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-beginQuery-2-id519756\"></span><a class=\"title_link\" name=\"beginQuery-2\" href=\"/erldoc/docs/#beginQuery-2\">beginQuery(Target, Id) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"beginQuery-2\"></a> </p><p>Delimit the boundaries of a query object</p> <p><span class=\"code\">gl:beginQuery</span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#beginQuery-2\">gl:beginQuery/2</a></span> delimit the boundaries of a query object. <span class=\"code\">Query</span> must be a name previously returned from a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genQueries-1\">gl:genQueries/1</a></span> . If a query object with name <span class=\"code\">Id</span> does not yet exist it is created with the type determined by <span class=\"code\">Target</span> . <span class=\"code\">Target</span> must be one of <span class=\"code\">?GL_SAMPLES_PASSED</span>, <span class=\"code\">?GL_ANY_SAMPLES_PASSED</span>, <span class=\"code\">?GL_PRIMITIVES_GENERATED</span> , <span class=\"code\">?GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN</span>, or <span class=\"code\">?GL_TIME_ELAPSED</span>. The behavior of the query object depends on its type and is as follows.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBeginQuery.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-endQuery-1-id519855\"></span><a class=\"title_link\" name=\"endQuery-1\" href=\"/erldoc/docs/#endQuery-1\">endQuery(Target) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"endQuery-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#beginQuery-2\">beginQuery/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getQueryiv-2-id519891\"></span><a class=\"title_link\" name=\"getQueryiv-2\" href=\"/erldoc/docs/#getQueryiv-2\">getQueryiv(Target, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getQueryiv-2\"></a> </p><p>glGetQuery</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getQueryObjectiv-2-id519939\"></span><a class=\"title_link\" name=\"getQueryObjectiv-2\" href=\"/erldoc/docs/#getQueryObjectiv-2\">getQueryObjectiv(Id, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getQueryObjectiv-2\"></a> </p><p>Return parameters of a query object</p> <p><span class=\"code\">gl:getQueryObject</span> returns in <span class=\"code\">Params</span> a selected parameter of the query object specified by <span class=\"code\">Id</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetQueryObject.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getQueryObjectuiv-2-id519998\"></span><a class=\"title_link\" name=\"getQueryObjectuiv-2\" href=\"/erldoc/docs/#getQueryObjectuiv-2\">getQueryObjectuiv(Id, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getQueryObjectuiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getQueryObjectiv-2\">getQueryObjectiv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindBuffer-2-id520037\"></span><a class=\"title_link\" name=\"bindBuffer-2\" href=\"/erldoc/docs/#bindBuffer-2\">bindBuffer(Target, Buffer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buffer = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindBuffer-2\"></a> </p><p>Bind a named buffer object</p> <p><span class=\"code\">gl:bindBuffer</span> binds a buffer object to the specified buffer binding point. Calling <span class=\"code\">gl:bindBuffer</span> with <span class=\"code\">Target</span> set to one of the accepted symbolic constants and <span class=\"code\">Buffer</span> set to the name of a buffer object binds that buffer object name to the target. If no buffer object with name <span class=\"code\">Buffer</span> exists, one is created with that name. When a buffer object is bound to a target, the previous binding for that target is automatically broken.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindBuffer.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteBuffers-1-id520105\"></span><a class=\"title_link\" name=\"deleteBuffers-1\" href=\"/erldoc/docs/#deleteBuffers-1\">deleteBuffers(Buffers) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buffers = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteBuffers-1\"></a> </p><p>Delete named buffer objects</p> <p><span class=\"code\">gl:deleteBuffers</span> deletes <span class=\"code\">N</span> buffer objects named by the elements of the array <span class=\"code\">Buffers</span> . After a buffer object is deleted, it has no contents, and its name is free for reuse (for example by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genBuffers-1\">gl:genBuffers/1</a></span> ). If a buffer object that is currently bound is deleted, the binding reverts to 0 (the absence of any buffer object).</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDeleteBuffers.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-genBuffers-1-id520164\"></span><a class=\"title_link\" name=\"genBuffers-1\" href=\"/erldoc/docs/#genBuffers-1\">genBuffers(N) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">N = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"genBuffers-1\"></a> </p><p>Generate buffer object names</p> <p><span class=\"code\">gl:genBuffers</span> returns <span class=\"code\">N</span> buffer object names in <span class=\"code\">Buffers</span> . There is no guarantee that the names form a contiguous set of integers; however, it is guaranteed that none of the returned names was in use immediately before the call to <span class=\"code\">gl:genBuffers</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGenBuffers.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isBuffer-1-id520220\"></span><a class=\"title_link\" name=\"isBuffer-1\" href=\"/erldoc/docs/#isBuffer-1\">isBuffer(Buffer) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buffer = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isBuffer-1\"></a> </p><p>Determine if a name corresponds to a buffer object</p> <p><span class=\"code\">gl:isBuffer</span> returns <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">Buffer</span> is currently the name of a buffer object. If <span class=\"code\">Buffer</span> is zero, or is a non-zero value that is not currently the name of a buffer object, or if an error occurs, <span class=\"code\">gl:isBuffer</span> returns <span class=\"code\">?GL_FALSE</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glIsBuffer.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bufferData-4-id520284\"></span><a class=\"title_link\" name=\"bufferData-4\" href=\"/erldoc/docs/#bufferData-4\">bufferData(Target, Size, Data, Usage) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Data = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Usage = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bufferData-4\"></a> </p><p>Creates and initializes a buffer object&apos;s data store</p> <p><span class=\"code\">gl:bufferData</span> creates a new data store for the buffer object currently bound to <span class=\"code\">Target</span> . Any pre-existing data store is deleted. The new data store is created with the specified <span class=\"code\">Size</span> in bytes and <span class=\"code\">Usage</span> . If <span class=\"code\">Data</span> is not <span class=\"code\">?NULL</span>, the data store is initialized with data from this pointer. In its initial state, the new data store is not mapped, it has a <span class=\"code\">?NULL</span> mapped pointer, and its mapped access is <span class=\"code\">?GL_READ_WRITE</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBufferData.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bufferSubData-4-id520384\"></span><a class=\"title_link\" name=\"bufferSubData-4\" href=\"/erldoc/docs/#bufferSubData-4\">bufferSubData(Target, Offset, Size, Data) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Offset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Data = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bufferSubData-4\"></a> </p><p>Updates a subset of a buffer object&apos;s data store</p> <p><span class=\"code\">gl:bufferSubData</span> redefines some or all of the data store for the buffer object currently bound to <span class=\"code\">Target</span> . Data starting at byte offset <span class=\"code\">Offset</span> and extending for <span class=\"code\">Size</span> bytes is copied to the data store from the memory pointed to by <span class=\"code\">Data</span> . An error is thrown if <span class=\"code\">Offset</span> and <span class=\"code\">Size</span> together define a range beyond the bounds of the buffer object&apos;s data store.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBufferSubData.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getBufferSubData-4-id520474\"></span><a class=\"title_link\" name=\"getBufferSubData-4\" href=\"/erldoc/docs/#getBufferSubData-4\">getBufferSubData(Target, Offset, Size, Data) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Offset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Data = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getBufferSubData-4\"></a> </p><p>Returns a subset of a buffer object&apos;s data store</p> <p><span class=\"code\">gl:getBufferSubData</span> returns some or all of the data from the buffer object currently bound to <span class=\"code\">Target</span> . Data starting at byte offset <span class=\"code\">Offset</span> and extending for <span class=\"code\">Size</span> bytes is copied from the data store to the memory pointed to by <span class=\"code\">Data</span> . An error is thrown if the buffer object is currently mapped, or if <span class=\"code\">Offset</span> and <span class=\"code\">Size</span> together define a range beyond the bounds of the buffer object&apos;s data store.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetBufferSubData.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getBufferParameteriv-2-id520559\"></span><a class=\"title_link\" name=\"getBufferParameteriv-2\" href=\"/erldoc/docs/#getBufferParameteriv-2\">getBufferParameteriv(Target, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getBufferParameteriv-2\"></a> </p><p>Return parameters of a buffer object</p> <p><span class=\"code\">gl:getBufferParameteriv</span> returns in <span class=\"code\">Data</span> a selected parameter of the buffer object specified by <span class=\"code\">Target</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/glGetBufferParameteriv.xml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-blendEquationSeparate-2-id520623\"></span><a class=\"title_link\" name=\"blendEquationSeparate-2\" href=\"/erldoc/docs/#blendEquationSeparate-2\">blendEquationSeparate(ModeRGB, ModeAlpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ModeRGB = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ModeAlpha = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"blendEquationSeparate-2\"></a> </p><p>Set the RGB blend equation and the alpha blend equation separately</p> <p>The blend equations determines how a new pixel (the &apos;&apos;source&apos;&apos; color) is combined with a pixel already in the framebuffer (the &apos;&apos;destination&apos;&apos; color). These functions specifie one blend equation for the RGB-color components and one blend equation for the alpha component. <span class=\"code\">gl:blendEquationSeparatei</span> specifies the blend equations for a single draw buffer whereas <span class=\"code\">gl:blendEquationSeparate</span> sets the blend equations for all draw buffers.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBlendEquationSeparate.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawBuffers-1-id520687\"></span><a class=\"title_link\" name=\"drawBuffers-1\" href=\"/erldoc/docs/#drawBuffers-1\">drawBuffers(Bufs) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bufs = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span>]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawBuffers-1\"></a> </p><p>Specifies a list of color buffers to be drawn into</p> <p><span class=\"code\">gl:drawBuffers</span> defines an array of buffers into which outputs from the fragment shader data will be written. If a fragment shader writes a value to one or more user defined output variables, then the value of each variable will be written into the buffer specified at a location within <span class=\"code\">Bufs</span> corresponding to the location assigned to that user defined output. The draw buffer used for user defined outputs assigned to locations greater than or equal to <span class=\"code\">N</span> is implicitly set to <span class=\"code\">?GL_NONE</span> and any data written to such an output is discarded.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawBuffers.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-stencilOpSeparate-4-id520752\"></span><a class=\"title_link\" name=\"stencilOpSeparate-4\" href=\"/erldoc/docs/#stencilOpSeparate-4\">stencilOpSeparate(Face, Sfail, Dpfail, Dppass) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Face = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sfail = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Dpfail = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Dppass = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"stencilOpSeparate-4\"></a> </p><p>Set front and/or back stencil test actions</p> <p>Stenciling, like depth-buffering, enables and disables drawing on a per-pixel basis. You draw into the stencil planes using GL drawing primitives, then render geometry and images, using the stencil planes to mask out portions of the screen. Stenciling is typically used in multipass rendering algorithms to achieve special effects, such as decals, outlining, and constructive solid geometry rendering.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glStencilOpSeparate.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-stencilFuncSeparate-4-id520822\"></span><a class=\"title_link\" name=\"stencilFuncSeparate-4\" href=\"/erldoc/docs/#stencilFuncSeparate-4\">stencilFuncSeparate(Face, Func, Ref, Mask) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Face = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Func = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ref = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mask = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"stencilFuncSeparate-4\"></a> </p><p>Set front and/or back function and reference value for stencil testing</p> <p>Stenciling, like depth-buffering, enables and disables drawing on a per-pixel basis. You draw into the stencil planes using GL drawing primitives, then render geometry and images, using the stencil planes to mask out portions of the screen. Stenciling is typically used in multipass rendering algorithms to achieve special effects, such as decals, outlining, and constructive solid geometry rendering.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glStencilFuncSeparate.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-stencilMaskSeparate-2-id520884\"></span><a class=\"title_link\" name=\"stencilMaskSeparate-2\" href=\"/erldoc/docs/#stencilMaskSeparate-2\">stencilMaskSeparate(Face, Mask) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Face = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mask = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"stencilMaskSeparate-2\"></a> </p><p>Control the front and/or back writing of individual bits in the stencil planes</p> <p><span class=\"code\">gl:stencilMaskSeparate</span> controls the writing of individual bits in the stencil planes. The least significant n bits of <span class=\"code\">Mask</span> , where n is the number of bits in the stencil buffer, specify a mask. Where a 1 appears in the mask, it&apos;s possible to write to the corresponding bit in the stencil buffer. Where a 0 appears, the corresponding bit is write-protected. Initially, all bits are enabled for writing.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glStencilMaskSeparate.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-attachShader-2-id520942\"></span><a class=\"title_link\" name=\"attachShader-2\" href=\"/erldoc/docs/#attachShader-2\">attachShader(Program, Shader) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shader = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"attachShader-2\"></a> </p><p>Attaches a shader object to a program object</p> <p>In order to create a complete shader program, there must be a way to specify the list of things that will be linked together. Program objects provide this mechanism. Shaders that are to be linked together in a program object must first be attached to that program object. <span class=\"code\">gl:attachShader</span> attaches the shader object specified by <span class=\"code\">Shader</span> to the program object specified by <span class=\"code\">Program</span> . This indicates that <span class=\"code\">Shader</span> will be included in link operations that will be performed on <span class=\"code\">Program</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glAttachShader.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindAttribLocation-3-id521008\"></span><a class=\"title_link\" name=\"bindAttribLocation-3\" href=\"/erldoc/docs/#bindAttribLocation-3\">bindAttribLocation(Program, Index, Name) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindAttribLocation-3\"></a> </p><p>Associates a generic vertex attribute index with a named attribute variable</p> <p><span class=\"code\">gl:bindAttribLocation</span> is used to associate a user-defined attribute variable in the program object specified by <span class=\"code\">Program</span> with a generic vertex attribute index. The name of the user-defined attribute variable is passed as a null terminated string in <span class=\"code\">Name</span> . The generic vertex attribute index to be bound to this variable is specified by <span class=\"code\">Index</span> . When <span class=\"code\">Program</span> is made part of current state, values provided via the generic vertex attribute <span class=\"code\">Index</span> will modify the value of the user-defined attribute variable specified by <span class=\"code\">Name</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindAttribLocation.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-compileShader-1-id521083\"></span><a class=\"title_link\" name=\"compileShader-1\" href=\"/erldoc/docs/#compileShader-1\">compileShader(Shader) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shader = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"compileShader-1\"></a> </p><p>Compiles a shader object</p> <p><span class=\"code\">gl:compileShader</span> compiles the source code strings that have been stored in the shader object specified by <span class=\"code\">Shader</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCompileShader.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-createProgram-0-id521131\"></span><a class=\"title_link\" name=\"createProgram-0\" href=\"/erldoc/docs/#createProgram-0\">createProgram() -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"createProgram-0\"></a> </p><p>Creates a program object</p> <p><span class=\"code\">gl:createProgram</span> creates an empty program object and returns a non-zero value by which it can be referenced. A program object is an object to which shader objects can be attached. This provides a mechanism to specify the shader objects that will be linked to create a program. It also provides a means for checking the compatibility of the shaders that will be used to create a program (for instance, checking the compatibility between a vertex shader and a fragment shader). When no longer needed as part of a program object, shader objects can be detached.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCreateProgram.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-createShader-1-id521173\"></span><a class=\"title_link\" name=\"createShader-1\" href=\"/erldoc/docs/#createShader-1\">createShader(Type) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"createShader-1\"></a> </p><p>Creates a shader object</p> <p><span class=\"code\">gl:createShader</span> creates an empty shader object and returns a non-zero value by which it can be referenced. A shader object is used to maintain the source code strings that define a shader. <span class=\"code\">ShaderType</span> indicates the type of shader to be created. Five types of shader are supported. A shader of type <span class=\"code\">?GL_VERTEX_SHADER</span> is a shader that is intended to run on the programmable vertex processor. A shader of type <span class=\"code\">?GL_TESS_CONTROL_SHADER</span> is a shader that is intended to run on the programmable tessellation processor in the control stage. A shader of type <span class=\"code\">?GL_TESS_EVALUATION_SHADER</span> is a shader that is intended to run on the programmable tessellation processor in the evaluation stage. A shader of type <span class=\"code\">?GL_GEOMETRY_SHADER</span> is a shader that is intended to run on the programmable geometry processor. A shader of type <span class=\"code\">?GL_FRAGMENT_SHADER</span> is a shader that is intended to run on the programmable fragment processor.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCreateShader.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteProgram-1-id521250\"></span><a class=\"title_link\" name=\"deleteProgram-1\" href=\"/erldoc/docs/#deleteProgram-1\">deleteProgram(Program) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteProgram-1\"></a> </p><p>Deletes a program object</p> <p><span class=\"code\">gl:deleteProgram</span> frees the memory and invalidates the name associated with the program object specified by <span class=\"code\">Program.</span> This command effectively undoes the effects of a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#createProgram-0\">gl:createProgram/0</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDeleteProgram.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteShader-1-id521304\"></span><a class=\"title_link\" name=\"deleteShader-1\" href=\"/erldoc/docs/#deleteShader-1\">deleteShader(Shader) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shader = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteShader-1\"></a> </p><p>Deletes a shader object</p> <p><span class=\"code\">gl:deleteShader</span> frees the memory and invalidates the name associated with the shader object specified by <span class=\"code\">Shader</span> . This command effectively undoes the effects of a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#createShader-1\">gl:createShader/1</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDeleteShader.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-detachShader-2-id521358\"></span><a class=\"title_link\" name=\"detachShader-2\" href=\"/erldoc/docs/#detachShader-2\">detachShader(Program, Shader) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shader = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"detachShader-2\"></a> </p><p>Detaches a shader object from a program object to which it is attached</p> <p><span class=\"code\">gl:detachShader</span> detaches the shader object specified by <span class=\"code\">Shader</span> from the program object specified by <span class=\"code\">Program</span> . This command can be used to undo the effect of the command <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#attachShader-2\">gl:attachShader/2</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDetachShader.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-disableVertexAttribArray-1-id521419\"></span><a class=\"title_link\" name=\"disableVertexAttribArray-1\" href=\"/erldoc/docs/#disableVertexAttribArray-1\">disableVertexAttribArray(Index) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"disableVertexAttribArray-1\"></a> </p><p>Enable or disable a generic vertex attribute array</p> <p><span class=\"code\">gl:enableVertexAttribArray</span> enables the generic vertex attribute array specified by <span class=\"code\">Index</span> . <span class=\"code\">gl:disableVertexAttribArray</span> disables the generic vertex attribute array specified by <span class=\"code\">Index</span> . By default, all client-side capabilities are disabled, including all generic vertex attribute arrays. If enabled, the values in the generic vertex attribute array will be accessed and used for rendering when calls are made to vertex array commands such as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawArrays-3\">gl:drawArrays/3</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawElements-4\">gl:drawElements/4</a></span> , <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawRangeElements-6\">gl:drawRangeElements/6</a></span> , see <span class=\"code\">glMultiDrawElements</span> , or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#multiDrawArrays-3\">gl:multiDrawArrays/3</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glEnableVertexAttribArray.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-enableVertexAttribArray-1-id521505\"></span><a class=\"title_link\" name=\"enableVertexAttribArray-1\" href=\"/erldoc/docs/#enableVertexAttribArray-1\">enableVertexAttribArray(Index) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"enableVertexAttribArray-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#disableVertexAttribArray-1\">disableVertexAttribArray/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getActiveAttrib-3-id521538\"></span><a class=\"title_link\" name=\"getActiveAttrib-3\" href=\"/erldoc/docs/#getActiveAttrib-3\">getActiveAttrib(Program, Index, BufSize) -&gt; {Size::integer(), Type::enum(), Name::string()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BufSize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getActiveAttrib-3\"></a> </p><p>Returns information about an active attribute variable for the specified program object</p> <p><span class=\"code\">gl:getActiveAttrib</span> returns information about an active attribute variable in the program object specified by <span class=\"code\">Program</span> . The number of active attributes can be obtained by calling <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getProgramiv-2\">gl:getProgramiv/2</a></span> with the value <span class=\"code\">?GL_ACTIVE_ATTRIBUTES</span>. A value of 0 for <span class=\"code\">Index</span> selects the first active attribute variable. Permissible values for <span class=\"code\">Index</span> range from 0 to the number of active attribute variables minus 1.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetActiveAttrib.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getActiveUniform-3-id521616\"></span><a class=\"title_link\" name=\"getActiveUniform-3\" href=\"/erldoc/docs/#getActiveUniform-3\">getActiveUniform(Program, Index, BufSize) -&gt; {Size::integer(), Type::enum(), Name::string()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BufSize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getActiveUniform-3\"></a> </p><p>Returns information about an active uniform variable for the specified program object</p> <p><span class=\"code\">gl:getActiveUniform</span> returns information about an active uniform variable in the program object specified by <span class=\"code\">Program</span> . The number of active uniform variables can be obtained by calling <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getProgramiv-2\">gl:getProgramiv/2</a></span> with the value <span class=\"code\">?GL_ACTIVE_UNIFORMS</span>. A value of 0 for <span class=\"code\">Index</span> selects the first active uniform variable. Permissible values for <span class=\"code\">Index</span> range from 0 to the number of active uniform variables minus 1.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetActiveUniform.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getAttachedShaders-2-id521694\"></span><a class=\"title_link\" name=\"getAttachedShaders-2\" href=\"/erldoc/docs/#getAttachedShaders-2\">getAttachedShaders(Program, MaxCount) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">MaxCount = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getAttachedShaders-2\"></a> </p><p>Returns the handles of the shader objects attached to a program object</p> <p><span class=\"code\">gl:getAttachedShaders</span> returns the names of the shader objects attached to <span class=\"code\">Program</span> . The names of shader objects that are attached to <span class=\"code\">Program</span> will be returned in <span class=\"code\">Shaders.</span> The actual number of shader names written into <span class=\"code\">Shaders</span> is returned in <span class=\"code\">Count.</span> If no shader objects are attached to <span class=\"code\">Program</span> , <span class=\"code\">Count</span> is set to 0. The maximum number of shader names that may be returned in <span class=\"code\">Shaders</span> is specified by <span class=\"code\">MaxCount</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetAttachedShaders.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getAttribLocation-2-id521776\"></span><a class=\"title_link\" name=\"getAttribLocation-2\" href=\"/erldoc/docs/#getAttribLocation-2\">getAttribLocation(Program, Name) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getAttribLocation-2\"></a> </p><p>Returns the location of an attribute variable</p> <p><span class=\"code\">gl:getAttribLocation</span> queries the previously linked program object specified by <span class=\"code\">Program</span> for the attribute variable specified by <span class=\"code\">Name</span> and returns the index of the generic vertex attribute that is bound to that attribute variable. If <span class=\"code\">Name</span> is a matrix attribute variable, the index of the first column of the matrix is returned. If the named attribute variable is not an active attribute in the specified program object or if <span class=\"code\">Name</span> starts with the reserved prefix &quot;gl_&quot;, a value of -1 is returned.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetAttribLocation.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getProgramiv-2-id521841\"></span><a class=\"title_link\" name=\"getProgramiv-2\" href=\"/erldoc/docs/#getProgramiv-2\">getProgramiv(Program, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getProgramiv-2\"></a> </p><p>Returns a parameter from a program object</p> <p><span class=\"code\">gl:getProgram</span> returns in <span class=\"code\">Params</span> the value of a parameter for a specific program object. The following parameters are defined:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetProgram.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getProgramInfoLog-2-id521896\"></span><a class=\"title_link\" name=\"getProgramInfoLog-2\" href=\"/erldoc/docs/#getProgramInfoLog-2\">getProgramInfoLog(Program, BufSize) -&gt; string()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BufSize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getProgramInfoLog-2\"></a> </p><p>Returns the information log for a program object</p> <p><span class=\"code\">gl:getProgramInfoLog</span> returns the information log for the specified program object. The information log for a program object is modified when the program object is linked or validated. The string that is returned will be null terminated.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetProgramInfoLog.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getShaderiv-2-id521945\"></span><a class=\"title_link\" name=\"getShaderiv-2\" href=\"/erldoc/docs/#getShaderiv-2\">getShaderiv(Shader, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shader = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getShaderiv-2\"></a> </p><p>Returns a parameter from a shader object</p> <p><span class=\"code\">gl:getShader</span> returns in <span class=\"code\">Params</span> the value of a parameter for a specific shader object. The following parameters are defined:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetShader.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getShaderInfoLog-2-id522000\"></span><a class=\"title_link\" name=\"getShaderInfoLog-2\" href=\"/erldoc/docs/#getShaderInfoLog-2\">getShaderInfoLog(Shader, BufSize) -&gt; string()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shader = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BufSize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getShaderInfoLog-2\"></a> </p><p>Returns the information log for a shader object</p> <p><span class=\"code\">gl:getShaderInfoLog</span> returns the information log for the specified shader object. The information log for a shader object is modified when the shader is compiled. The string that is returned will be null terminated.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetShaderInfoLog.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getShaderSource-2-id522048\"></span><a class=\"title_link\" name=\"getShaderSource-2\" href=\"/erldoc/docs/#getShaderSource-2\">getShaderSource(Shader, BufSize) -&gt; string()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shader = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BufSize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getShaderSource-2\"></a> </p><p>Returns the source code string from a shader object</p> <p><span class=\"code\">gl:getShaderSource</span> returns the concatenation of the source code strings from the shader object specified by <span class=\"code\">Shader</span> . The source code strings for a shader object are the result of a previous call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#shaderSource-2\">gl:shaderSource/2</a></span> . The string returned by the function will be null terminated.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetShaderSource.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getUniformLocation-2-id522106\"></span><a class=\"title_link\" name=\"getUniformLocation-2\" href=\"/erldoc/docs/#getUniformLocation-2\">getUniformLocation(Program, Name) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getUniformLocation-2\"></a> </p><p>Returns the location of a uniform variable</p> <p><span class=\"code\">gl:getUniformLocation</span> returns an integer that represents the location of a specific uniform variable within a program object. <span class=\"code\">Name</span> must be a null terminated string that contains no white space. <span class=\"code\">Name</span> must be an active uniform variable name in <span class=\"code\">Program</span> that is not a structure, an array of structures, or a subcomponent of a vector or a matrix. This function returns -1 if <span class=\"code\">Name</span> does not correspond to an active uniform variable in <span class=\"code\">Program</span> , if <span class=\"code\">Name</span> starts with the reserved prefix &quot;gl_&quot;, or if <span class=\"code\">Name</span> is associated with an atomic counter or a named uniform block.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetUniformLocation.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getUniformfv-2-id522182\"></span><a class=\"title_link\" name=\"getUniformfv-2\" href=\"/erldoc/docs/#getUniformfv-2\">getUniformfv(Program, Location) -&gt; matrix()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getUniformfv-2\"></a> </p><p>Returns the value of a uniform variable</p> <p><span class=\"code\">gl:getUniform</span> returns in <span class=\"code\">Params</span> the value(s) of the specified uniform variable. The type of the uniform variable specified by <span class=\"code\">Location</span> determines the number of values returned. If the uniform variable is defined in the shader as a boolean, int, or float, a single value will be returned. If it is defined as a vec2, ivec2, or bvec2, two values will be returned. If it is defined as a vec3, ivec3, or bvec3, three values will be returned, and so on. To query values stored in uniform variables declared as arrays, call <span class=\"code\">gl:getUniform</span> for each element of the array. To query values stored in uniform variables declared as structures, call <span class=\"code\">gl:getUniform</span> for each field in the structure. The values for uniform variables declared as a matrix will be returned in column major order.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetUniform.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getUniformiv-2-id522253\"></span><a class=\"title_link\" name=\"getUniformiv-2\" href=\"/erldoc/docs/#getUniformiv-2\">getUniformiv(Program, Location) -&gt; {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getUniformiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getUniformfv-2\">getUniformfv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getVertexAttribdv-2-id522288\"></span><a class=\"title_link\" name=\"getVertexAttribdv-2\" href=\"/erldoc/docs/#getVertexAttribdv-2\">getVertexAttribdv(Index, Pname) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getVertexAttribdv-2\"></a> </p><p>Return a generic vertex attribute parameter</p> <p><span class=\"code\">gl:getVertexAttrib</span> returns in <span class=\"code\">Params</span> the value of a generic vertex attribute parameter. The generic vertex attribute to be queried is specified by <span class=\"code\">Index</span> , and the parameter to be queried is specified by <span class=\"code\">Pname</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetVertexAttrib.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getVertexAttribfv-2-id522352\"></span><a class=\"title_link\" name=\"getVertexAttribfv-2\" href=\"/erldoc/docs/#getVertexAttribfv-2\">getVertexAttribfv(Index, Pname) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getVertexAttribfv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getVertexAttribdv-2\">getVertexAttribdv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getVertexAttribiv-2-id522391\"></span><a class=\"title_link\" name=\"getVertexAttribiv-2\" href=\"/erldoc/docs/#getVertexAttribiv-2\">getVertexAttribiv(Index, Pname) -&gt; {integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getVertexAttribiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getVertexAttribdv-2\">getVertexAttribdv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isProgram-1-id522430\"></span><a class=\"title_link\" name=\"isProgram-1\" href=\"/erldoc/docs/#isProgram-1\">isProgram(Program) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isProgram-1\"></a> </p><p>Determines if a name corresponds to a program object</p> <p><span class=\"code\">gl:isProgram</span> returns <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">Program</span> is the name of a program object previously created with <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#createProgram-0\">gl:createProgram/0</a></span> and not yet deleted with <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#deleteProgram-1\">gl:deleteProgram/1</a></span> . If <span class=\"code\">Program</span> is zero or a non-zero value that is not the name of a program object, or if an error occurs, <span class=\"code\">gl:isProgram</span> returns <span class=\"code\">?GL_FALSE</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glIsProgram.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isShader-1-id522506\"></span><a class=\"title_link\" name=\"isShader-1\" href=\"/erldoc/docs/#isShader-1\">isShader(Shader) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shader = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isShader-1\"></a> </p><p>Determines if a name corresponds to a shader object</p> <p><span class=\"code\">gl:isShader</span> returns <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">Shader</span> is the name of a shader object previously created with <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#createShader-1\">gl:createShader/1</a></span> and not yet deleted with <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#deleteShader-1\">gl:deleteShader/1</a></span> . If <span class=\"code\">Shader</span> is zero or a non-zero value that is not the name of a shader object, or if an error occurs, <span class=\"code\">gl:isShader</span> returns <span class=\"code\">?GL_FALSE</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glIsShader.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-linkProgram-1-id522582\"></span><a class=\"title_link\" name=\"linkProgram-1\" href=\"/erldoc/docs/#linkProgram-1\">linkProgram(Program) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"linkProgram-1\"></a> </p><p>Links a program object</p> <p><span class=\"code\">gl:linkProgram</span> links the program object specified by <span class=\"code\">Program</span> . If any shader objects of type <span class=\"code\">?GL_VERTEX_SHADER</span> are attached to <span class=\"code\">Program</span> , they will be used to create an executable that will run on the programmable vertex processor. If any shader objects of type <span class=\"code\">?GL_GEOMETRY_SHADER</span> are attached to <span class=\"code\">Program</span> , they will be used to create an executable that will run on the programmable geometry processor. If any shader objects of type <span class=\"code\">?GL_FRAGMENT_SHADER</span> are attached to <span class=\"code\">Program</span> , they will be used to create an executable that will run on the programmable fragment processor.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glLinkProgram.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-shaderSource-2-id522654\"></span><a class=\"title_link\" name=\"shaderSource-2\" href=\"/erldoc/docs/#shaderSource-2\">shaderSource(Shader, String) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shader = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">String = iolist()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"shaderSource-2\"></a> </p><p>Replaces the source code in a shader object</p> <p><span class=\"code\">gl:shaderSource</span> sets the source code in <span class=\"code\">Shader</span> to the source code in the array of strings specified by <span class=\"code\">String</span> . Any source code previously stored in the shader object is completely replaced. The number of strings in the array is specified by <span class=\"code\">Count</span> . If <span class=\"code\">Length</span> is <span class=\"code\">?NULL</span>, each string is assumed to be null terminated. If <span class=\"code\">Length</span> is a value other than <span class=\"code\">?NULL</span>, it points to an array containing a string length for each of the corresponding elements of <span class=\"code\">String</span> . Each element in the <span class=\"code\">Length</span> array may contain the length of the corresponding string (the null character is not counted as part of the string length) or a value less than 0 to indicate that the string is null terminated. The source code strings are not scanned or parsed at this time; they are simply copied into the specified shader object.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glShaderSource.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-useProgram-1-id522739\"></span><a class=\"title_link\" name=\"useProgram-1\" href=\"/erldoc/docs/#useProgram-1\">useProgram(Program) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"useProgram-1\"></a> </p><p>Installs a program object as part of current rendering state</p> <p><span class=\"code\">gl:useProgram</span> installs the program object specified by <span class=\"code\">Program</span> as part of current rendering state. One or more executables are created in a program object by successfully attaching shader objects to it with <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#attachShader-2\">gl:attachShader/2</a></span> , successfully compiling the shader objects with <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#compileShader-1\">gl:compileShader/1</a></span> , and successfully linking the program object with <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#linkProgram-1\">gl:linkProgram/1</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glUseProgram.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform1f-2-id522807\"></span><a class=\"title_link\" name=\"uniform1f-2\" href=\"/erldoc/docs/#uniform1f-2\">uniform1f(Location, V0) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform1f-2\"></a> </p><p>Specify the value of a uniform variable for the current program object</p> <p><span class=\"code\">gl:uniform</span> modifies the value of a uniform variable or a uniform variable array. The location of the uniform variable to be modified is specified by <span class=\"code\">Location</span> , which should be a value returned by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getUniformLocation-2\">gl:getUniformLocation/2</a></span> . <span class=\"code\">gl:uniform</span> operates on the program object that was made part of current state by calling <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#useProgram-1\">gl:useProgram/1</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glUniform.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform2f-3-id522875\"></span><a class=\"title_link\" name=\"uniform2f-3\" href=\"/erldoc/docs/#uniform2f-3\">uniform2f(Location, V0, V1) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform2f-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform3f-4-id522912\"></span><a class=\"title_link\" name=\"uniform3f-4\" href=\"/erldoc/docs/#uniform3f-4\">uniform3f(Location, V0, V1, V2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform3f-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform4f-5-id522950\"></span><a class=\"title_link\" name=\"uniform4f-5\" href=\"/erldoc/docs/#uniform4f-5\">uniform4f(Location, V0, V1, V2, V3) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V3 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform4f-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform1i-2-id522992\"></span><a class=\"title_link\" name=\"uniform1i-2\" href=\"/erldoc/docs/#uniform1i-2\">uniform1i(Location, V0) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform1i-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform2i-3-id523026\"></span><a class=\"title_link\" name=\"uniform2i-3\" href=\"/erldoc/docs/#uniform2i-3\">uniform2i(Location, V0, V1) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform2i-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform3i-4-id523062\"></span><a class=\"title_link\" name=\"uniform3i-4\" href=\"/erldoc/docs/#uniform3i-4\">uniform3i(Location, V0, V1, V2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform3i-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform4i-5-id523101\"></span><a class=\"title_link\" name=\"uniform4i-5\" href=\"/erldoc/docs/#uniform4i-5\">uniform4i(Location, V0, V1, V2, V3) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V3 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform4i-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform1fv-2-id523142\"></span><a class=\"title_link\" name=\"uniform1fv-2\" href=\"/erldoc/docs/#uniform1fv-2\">uniform1fv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [float()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform1fv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform2fv-2-id523176\"></span><a class=\"title_link\" name=\"uniform2fv-2\" href=\"/erldoc/docs/#uniform2fv-2\">uniform2fv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform2fv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform3fv-2-id523210\"></span><a class=\"title_link\" name=\"uniform3fv-2\" href=\"/erldoc/docs/#uniform3fv-2\">uniform3fv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform3fv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform4fv-2-id523244\"></span><a class=\"title_link\" name=\"uniform4fv-2\" href=\"/erldoc/docs/#uniform4fv-2\">uniform4fv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform4fv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform1iv-2-id523279\"></span><a class=\"title_link\" name=\"uniform1iv-2\" href=\"/erldoc/docs/#uniform1iv-2\">uniform1iv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform1iv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform2iv-2-id523313\"></span><a class=\"title_link\" name=\"uniform2iv-2\" href=\"/erldoc/docs/#uniform2iv-2\">uniform2iv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{integer(), integer()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform2iv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform3iv-2-id523347\"></span><a class=\"title_link\" name=\"uniform3iv-2\" href=\"/erldoc/docs/#uniform3iv-2\">uniform3iv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{integer(), integer(), integer()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform3iv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform4iv-2-id523381\"></span><a class=\"title_link\" name=\"uniform4iv-2\" href=\"/erldoc/docs/#uniform4iv-2\">uniform4iv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{integer(), integer(), integer(), integer()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform4iv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix2fv-3-id523415\"></span><a class=\"title_link\" name=\"uniformMatrix2fv-3\" href=\"/erldoc/docs/#uniformMatrix2fv-3\">uniformMatrix2fv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix2fv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix3fv-3-id523452\"></span><a class=\"title_link\" name=\"uniformMatrix3fv-3\" href=\"/erldoc/docs/#uniformMatrix3fv-3\">uniformMatrix3fv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix3fv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix4fv-3-id523489\"></span><a class=\"title_link\" name=\"uniformMatrix4fv-3\" href=\"/erldoc/docs/#uniformMatrix4fv-3\">uniformMatrix4fv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix4fv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-validateProgram-1-id523527\"></span><a class=\"title_link\" name=\"validateProgram-1\" href=\"/erldoc/docs/#validateProgram-1\">validateProgram(Program) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"validateProgram-1\"></a> </p><p>Validates a program object</p> <p><span class=\"code\">gl:validateProgram</span> checks to see whether the executables contained in <span class=\"code\">Program</span> can execute given the current OpenGL state. The information generated by the validation process will be stored in <span class=\"code\">Program</span> &apos;s information log. The validation information may consist of an empty string, or it may be a string containing information about how the current program object interacts with the rest of current OpenGL state. This provides a way for OpenGL implementers to convey more information about why the current program is inefficient, suboptimal, failing to execute, and so on.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glValidateProgram.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib1d-2-id523582\"></span><a class=\"title_link\" name=\"vertexAttrib1d-2\" href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d(Index, X) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib1d-2\"></a> </p><p>Specifies the value of a generic vertex attribute</p> <p>The <span class=\"code\">gl:vertexAttrib</span> family of entry points allows an application to pass generic vertex attributes in numbered locations.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glVertexAttrib.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib1dv-2-id523631\"></span><a class=\"title_link\" name=\"vertexAttrib1dv-2\" href=\"/erldoc/docs/#vertexAttrib1dv-2\">vertexAttrib1dv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib1dv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d(Index, X)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib1f-2-id523664\"></span><a class=\"title_link\" name=\"vertexAttrib1f-2\" href=\"/erldoc/docs/#vertexAttrib1f-2\">vertexAttrib1f(Index, X) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib1f-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib1fv-2-id523698\"></span><a class=\"title_link\" name=\"vertexAttrib1fv-2\" href=\"/erldoc/docs/#vertexAttrib1fv-2\">vertexAttrib1fv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib1fv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1f-2\">vertexAttrib1f(Index, X)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib1s-2-id523732\"></span><a class=\"title_link\" name=\"vertexAttrib1s-2\" href=\"/erldoc/docs/#vertexAttrib1s-2\">vertexAttrib1s(Index, X) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib1s-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib1sv-2-id523766\"></span><a class=\"title_link\" name=\"vertexAttrib1sv-2\" href=\"/erldoc/docs/#vertexAttrib1sv-2\">vertexAttrib1sv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib1sv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1s-2\">vertexAttrib1s(Index, X)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib2d-3-id523799\"></span><a class=\"title_link\" name=\"vertexAttrib2d-3\" href=\"/erldoc/docs/#vertexAttrib2d-3\">vertexAttrib2d(Index, X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib2d-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib2dv-2-id523836\"></span><a class=\"title_link\" name=\"vertexAttrib2dv-2\" href=\"/erldoc/docs/#vertexAttrib2dv-2\">vertexAttrib2dv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib2dv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib2d-3\">vertexAttrib2d(Index, X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib2f-3-id523869\"></span><a class=\"title_link\" name=\"vertexAttrib2f-3\" href=\"/erldoc/docs/#vertexAttrib2f-3\">vertexAttrib2f(Index, X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib2f-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib2fv-2-id523906\"></span><a class=\"title_link\" name=\"vertexAttrib2fv-2\" href=\"/erldoc/docs/#vertexAttrib2fv-2\">vertexAttrib2fv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib2fv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib2f-3\">vertexAttrib2f(Index, X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib2s-3-id523939\"></span><a class=\"title_link\" name=\"vertexAttrib2s-3\" href=\"/erldoc/docs/#vertexAttrib2s-3\">vertexAttrib2s(Index, X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib2s-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib2sv-2-id523976\"></span><a class=\"title_link\" name=\"vertexAttrib2sv-2\" href=\"/erldoc/docs/#vertexAttrib2sv-2\">vertexAttrib2sv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib2sv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib2s-3\">vertexAttrib2s(Index, X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib3d-4-id524009\"></span><a class=\"title_link\" name=\"vertexAttrib3d-4\" href=\"/erldoc/docs/#vertexAttrib3d-4\">vertexAttrib3d(Index, X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib3d-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib3dv-2-id524048\"></span><a class=\"title_link\" name=\"vertexAttrib3dv-2\" href=\"/erldoc/docs/#vertexAttrib3dv-2\">vertexAttrib3dv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib3dv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib3d-4\">vertexAttrib3d(Index, X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib3f-4-id524082\"></span><a class=\"title_link\" name=\"vertexAttrib3f-4\" href=\"/erldoc/docs/#vertexAttrib3f-4\">vertexAttrib3f(Index, X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib3f-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib3fv-2-id524121\"></span><a class=\"title_link\" name=\"vertexAttrib3fv-2\" href=\"/erldoc/docs/#vertexAttrib3fv-2\">vertexAttrib3fv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib3fv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib3f-4\">vertexAttrib3f(Index, X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib3s-4-id524154\"></span><a class=\"title_link\" name=\"vertexAttrib3s-4\" href=\"/erldoc/docs/#vertexAttrib3s-4\">vertexAttrib3s(Index, X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib3s-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib3sv-2-id524193\"></span><a class=\"title_link\" name=\"vertexAttrib3sv-2\" href=\"/erldoc/docs/#vertexAttrib3sv-2\">vertexAttrib3sv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib3sv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib3s-4\">vertexAttrib3s(Index, X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4Nbv-2-id524227\"></span><a class=\"title_link\" name=\"vertexAttrib4Nbv-2\" href=\"/erldoc/docs/#vertexAttrib4Nbv-2\">vertexAttrib4Nbv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4Nbv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4Niv-2-id524261\"></span><a class=\"title_link\" name=\"vertexAttrib4Niv-2\" href=\"/erldoc/docs/#vertexAttrib4Niv-2\">vertexAttrib4Niv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4Niv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4Nsv-2-id524295\"></span><a class=\"title_link\" name=\"vertexAttrib4Nsv-2\" href=\"/erldoc/docs/#vertexAttrib4Nsv-2\">vertexAttrib4Nsv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4Nsv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4Nub-5-id524330\"></span><a class=\"title_link\" name=\"vertexAttrib4Nub-5\" href=\"/erldoc/docs/#vertexAttrib4Nub-5\">vertexAttrib4Nub(Index, X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4Nub-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4Nubv-2-id524371\"></span><a class=\"title_link\" name=\"vertexAttrib4Nubv-2\" href=\"/erldoc/docs/#vertexAttrib4Nubv-2\">vertexAttrib4Nubv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer(), W::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4Nubv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib4Nub-5\">vertexAttrib4Nub(Index, X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4Nuiv-2-id524405\"></span><a class=\"title_link\" name=\"vertexAttrib4Nuiv-2\" href=\"/erldoc/docs/#vertexAttrib4Nuiv-2\">vertexAttrib4Nuiv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4Nuiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4Nusv-2-id524439\"></span><a class=\"title_link\" name=\"vertexAttrib4Nusv-2\" href=\"/erldoc/docs/#vertexAttrib4Nusv-2\">vertexAttrib4Nusv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4Nusv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4bv-2-id524473\"></span><a class=\"title_link\" name=\"vertexAttrib4bv-2\" href=\"/erldoc/docs/#vertexAttrib4bv-2\">vertexAttrib4bv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4bv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4d-5-id524508\"></span><a class=\"title_link\" name=\"vertexAttrib4d-5\" href=\"/erldoc/docs/#vertexAttrib4d-5\">vertexAttrib4d(Index, X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4d-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4dv-2-id524549\"></span><a class=\"title_link\" name=\"vertexAttrib4dv-2\" href=\"/erldoc/docs/#vertexAttrib4dv-2\">vertexAttrib4dv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float(), W::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4dv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib4d-5\">vertexAttrib4d(Index, X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4f-5-id524583\"></span><a class=\"title_link\" name=\"vertexAttrib4f-5\" href=\"/erldoc/docs/#vertexAttrib4f-5\">vertexAttrib4f(Index, X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4f-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4fv-2-id524624\"></span><a class=\"title_link\" name=\"vertexAttrib4fv-2\" href=\"/erldoc/docs/#vertexAttrib4fv-2\">vertexAttrib4fv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float(), W::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4fv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib4f-5\">vertexAttrib4f(Index, X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4iv-2-id524658\"></span><a class=\"title_link\" name=\"vertexAttrib4iv-2\" href=\"/erldoc/docs/#vertexAttrib4iv-2\">vertexAttrib4iv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4iv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4s-5-id524692\"></span><a class=\"title_link\" name=\"vertexAttrib4s-5\" href=\"/erldoc/docs/#vertexAttrib4s-5\">vertexAttrib4s(Index, X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4s-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4sv-2-id524733\"></span><a class=\"title_link\" name=\"vertexAttrib4sv-2\" href=\"/erldoc/docs/#vertexAttrib4sv-2\">vertexAttrib4sv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer(), W::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4sv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib4s-5\">vertexAttrib4s(Index, X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4ubv-2-id524767\"></span><a class=\"title_link\" name=\"vertexAttrib4ubv-2\" href=\"/erldoc/docs/#vertexAttrib4ubv-2\">vertexAttrib4ubv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4ubv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4uiv-2-id524801\"></span><a class=\"title_link\" name=\"vertexAttrib4uiv-2\" href=\"/erldoc/docs/#vertexAttrib4uiv-2\">vertexAttrib4uiv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4uiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttrib4usv-2-id524835\"></span><a class=\"title_link\" name=\"vertexAttrib4usv-2\" href=\"/erldoc/docs/#vertexAttrib4usv-2\">vertexAttrib4usv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttrib4usv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribPointer-6-id524870\"></span><a class=\"title_link\" name=\"vertexAttribPointer-6\" href=\"/erldoc/docs/#vertexAttribPointer-6\">vertexAttribPointer(Index, Size, Type, Normalized, Stride, Pointer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Normalized = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pointer = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribPointer-6\"></a> </p><p>Define an array of generic vertex attribute data</p> <p><span class=\"code\">gl:vertexAttribPointer</span>, <span class=\"code\">gl:vertexAttribIPointer</span> and <span class=\"code\">gl:vertexAttribLPointer</span> specify the location and data format of the array of generic vertex attributes at index <span class=\"code\">Index</span> to use when rendering. <span class=\"code\">Size</span> specifies the number of components per attribute and must be 1, 2, 3, 4, or <span class=\"code\">?GL_BGRA</span>. <span class=\"code\">Type</span> specifies the data type of each component, and <span class=\"code\">Stride</span> specifies the byte stride from one attribute to the next, allowing vertices and attributes to be packed into a single array or stored in separate arrays.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glVertexAttribPointer.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix2x3fv-3-id524970\"></span><a class=\"title_link\" name=\"uniformMatrix2x3fv-3\" href=\"/erldoc/docs/#uniformMatrix2x3fv-3\">uniformMatrix2x3fv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix2x3fv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix3x2fv-3-id525007\"></span><a class=\"title_link\" name=\"uniformMatrix3x2fv-3\" href=\"/erldoc/docs/#uniformMatrix3x2fv-3\">uniformMatrix3x2fv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix3x2fv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix2x4fv-3-id525044\"></span><a class=\"title_link\" name=\"uniformMatrix2x4fv-3\" href=\"/erldoc/docs/#uniformMatrix2x4fv-3\">uniformMatrix2x4fv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix2x4fv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix4x2fv-3-id525081\"></span><a class=\"title_link\" name=\"uniformMatrix4x2fv-3\" href=\"/erldoc/docs/#uniformMatrix4x2fv-3\">uniformMatrix4x2fv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix4x2fv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix3x4fv-3-id525118\"></span><a class=\"title_link\" name=\"uniformMatrix3x4fv-3\" href=\"/erldoc/docs/#uniformMatrix3x4fv-3\">uniformMatrix3x4fv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix3x4fv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix4x3fv-3-id525156\"></span><a class=\"title_link\" name=\"uniformMatrix4x3fv-3\" href=\"/erldoc/docs/#uniformMatrix4x3fv-3\">uniformMatrix4x3fv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix4x3fv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-colorMaski-5-id525193\"></span><a class=\"title_link\" name=\"colorMaski-5\" href=\"/erldoc/docs/#colorMaski-5\">colorMaski(Index, R, G, B, A) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">R = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">G = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">B = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">A = 0 | 1</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"colorMaski-5\"></a> </p><p>glColorMaski</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getBooleani_v-2-id525239\"></span><a class=\"title_link\" name=\"getBooleani_v-2\" href=\"/erldoc/docs/#getBooleani_v-2\">getBooleani_v(Target, Index) -&gt; [0 | 1]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getBooleani_v-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getBooleanv-1\">getBooleanv/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getIntegeri_v-2-id525278\"></span><a class=\"title_link\" name=\"getIntegeri_v-2\" href=\"/erldoc/docs/#getIntegeri_v-2\">getIntegeri_v(Target, Index) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getIntegeri_v-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getBooleanv-1\">getBooleanv/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-enablei-2-id525317\"></span><a class=\"title_link\" name=\"enablei-2\" href=\"/erldoc/docs/#enablei-2\">enablei(Target, Index) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"enablei-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#enable-1\">enable/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-disablei-2-id525356\"></span><a class=\"title_link\" name=\"disablei-2\" href=\"/erldoc/docs/#disablei-2\">disablei(Target, Index) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"disablei-2\"></a> </p><p>glEnablei</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isEnabledi-2-id525400\"></span><a class=\"title_link\" name=\"isEnabledi-2\" href=\"/erldoc/docs/#isEnabledi-2\">isEnabledi(Target, Index) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isEnabledi-2\"></a> </p><p>glIsEnabledi</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-beginTransformFeedback-1-id525444\"></span><a class=\"title_link\" name=\"beginTransformFeedback-1\" href=\"/erldoc/docs/#beginTransformFeedback-1\">beginTransformFeedback(PrimitiveMode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">PrimitiveMode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"beginTransformFeedback-1\"></a> </p><p>Start transform feedback operation</p> <p>Transform feedback mode captures the values of varying variables written by the vertex shader (or, if active, the geometry shader). Transform feedback is said to be active after a call to <span class=\"code\">gl:beginTransformFeedback</span> until a subsequent call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#beginTransformFeedback-1\">gl:beginTransformFeedback/1</a></span> . Transform feedback commands must be paired.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBeginTransformFeedback.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-endTransformFeedback-0-id525502\"></span><a class=\"title_link\" name=\"endTransformFeedback-0\" href=\"/erldoc/docs/#endTransformFeedback-0\">endTransformFeedback() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"endTransformFeedback-0\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#beginTransformFeedback-1\">beginTransformFeedback/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindBufferRange-5-id525528\"></span><a class=\"title_link\" name=\"bindBufferRange-5\" href=\"/erldoc/docs/#bindBufferRange-5\">bindBufferRange(Target, Index, Buffer, Offset, Size) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buffer = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Offset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindBufferRange-5\"></a> </p><p>Bind a range within a buffer object to an indexed buffer target</p> <p><span class=\"code\">gl:bindBufferRange</span> binds a range the buffer object <span class=\"code\">Buffer</span> represented by <span class=\"code\">Offset</span> and <span class=\"code\">Size</span> to the binding point at index <span class=\"code\">Index</span> of the array of targets specified by <span class=\"code\">Target</span> . Each <span class=\"code\">Target</span> represents an indexed array of buffer binding points, as well as a single general binding point that can be used by other buffer manipulation functions such as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#bindBuffer-2\">gl:bindBuffer/2</a></span> or see <span class=\"code\">glMapBuffer</span>. In addition to binding a range of <span class=\"code\">Buffer</span> to the indexed buffer binding target, <span class=\"code\">gl:bindBufferBase</span> also binds the range to the generic buffer binding point specified by <span class=\"code\">Target</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindBufferRange.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindBufferBase-3-id525632\"></span><a class=\"title_link\" name=\"bindBufferBase-3\" href=\"/erldoc/docs/#bindBufferBase-3\">bindBufferBase(Target, Index, Buffer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buffer = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindBufferBase-3\"></a> </p><p>Bind a buffer object to an indexed buffer target</p> <p><span class=\"code\">gl:bindBufferBase</span> binds the buffer object <span class=\"code\">Buffer</span> to the binding point at index <span class=\"code\">Index</span> of the array of targets specified by <span class=\"code\">Target</span> . Each <span class=\"code\">Target</span> represents an indexed array of buffer binding points, as well as a single general binding point that can be used by other buffer manipulation functions such as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#bindBuffer-2\">gl:bindBuffer/2</a></span> or see <span class=\"code\">glMapBuffer</span>. In addition to binding <span class=\"code\">Buffer</span> to the indexed buffer binding target, <span class=\"code\">gl:bindBufferBase</span> also binds <span class=\"code\">Buffer</span> to the generic buffer binding point specified by <span class=\"code\">Target</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindBufferBase.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-transformFeedbackVaryings-3-id525728\"></span><a class=\"title_link\" name=\"transformFeedbackVaryings-3\" href=\"/erldoc/docs/#transformFeedbackVaryings-3\">transformFeedbackVaryings(Program, Varyings, BufferMode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Varyings = iolist()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BufferMode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"transformFeedbackVaryings-3\"></a> </p><p>Specify values to record in transform feedback buffers</p> <p>The names of the vertex or geometry shader outputs to be recorded in transform feedback mode are specified using <span class=\"code\">gl:transformFeedbackVaryings</span>. When a geometry shader is active, transform feedback records the values of selected geometry shader output variables from the emitted vertices. Otherwise, the values of the selected vertex shader outputs are recorded.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glTransformFeedbackVaryings.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getTransformFeedbackVarying-3-id525786\"></span><a class=\"title_link\" name=\"getTransformFeedbackVarying-3\" href=\"/erldoc/docs/#getTransformFeedbackVarying-3\">getTransformFeedbackVarying(Program, Index, BufSize) -&gt; {Size::integer(), Type::enum(), Name::string()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BufSize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getTransformFeedbackVarying-3\"></a> </p><p>Retrieve information about varying variables selected for transform feedback</p> <p>Information about the set of varying variables in a linked program that will be captured during transform feedback may be retrieved by calling <span class=\"code\">gl:getTransformFeedbackVarying</span>. <span class=\"code\">gl:getTransformFeedbackVarying</span> provides information about the varying variable selected by <span class=\"code\">Index</span> . An <span class=\"code\">Index</span> of 0 selects the first varying variable specified in the <span class=\"code\">Varyings</span> array passed to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#transformFeedbackVaryings-3\">gl:transformFeedbackVaryings/3</a></span> , and an <span class=\"code\">Index</span> of <span class=\"code\">?GL_TRANSFORM_FEEDBACK_VARYINGS-1</span> selects the last such variable.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetTransformFeedbackVarying.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clampColor-2-id525874\"></span><a class=\"title_link\" name=\"clampColor-2\" href=\"/erldoc/docs/#clampColor-2\">clampColor(Target, Clamp) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Clamp = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clampColor-2\"></a> </p><p>specify whether data read via</p> <p><span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#readPixels-7\">gl:readPixels/7</a></span> should be clamped</p> <p><span class=\"code\">gl:clampColor</span> controls color clamping that is performed during <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#readPixels-7\">gl:readPixels/7</a></span> . <span class=\"code\">Target</span> must be <span class=\"code\">?GL_CLAMP_READ_COLOR</span>. If <span class=\"code\">Clamp</span> is <span class=\"code\">?GL_TRUE</span>, read color clamping is enabled; if <span class=\"code\">Clamp</span> is <span class=\"code\">?GL_FALSE</span>, read color clamping is disabled. If <span class=\"code\">Clamp</span> is <span class=\"code\">?GL_FIXED_ONLY</span>, read color clamping is enabled only if the selected read buffer has fixed point components and disabled otherwise.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glClampColor.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-beginConditionalRender-2-id525975\"></span><a class=\"title_link\" name=\"beginConditionalRender-2\" href=\"/erldoc/docs/#beginConditionalRender-2\">beginConditionalRender(Id, Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"beginConditionalRender-2\"></a> </p><p>Start conditional rendering</p> <p>Conditional rendering is started using <span class=\"code\">gl:beginConditionalRender</span> and ended using <span class=\"code\">gl:endConditionalRender</span> . During conditional rendering, all vertex array commands, as well as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#clear-1\">gl:clear/1</a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#clearBufferiv-3\">gl:clearBufferiv/3</a></span> have no effect if the (<span class=\"code\">?GL_SAMPLES_PASSED</span>) result of the query object <span class=\"code\">Id</span> is zero, or if the (<span class=\"code\">?GL_ANY_SAMPLES_PASSED</span>) result is <span class=\"code\">?GL_FALSE</span> . The results of commands setting the current vertex state, such as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#vertexAttrib1d-2\">gl:vertexAttrib1d/2</a></span> are undefined. If the (<span class=\"code\">?GL_SAMPLES_PASSED</span>) result is non-zero or if the (<span class=\"code\">?GL_ANY_SAMPLES_PASSED</span> ) result is <span class=\"code\">?GL_TRUE</span>, such commands are not discarded. The <span class=\"code\">Id</span> parameter to <span class=\"code\">gl:beginConditionalRender</span> must be the name of a query object previously returned from a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genQueries-1\">gl:genQueries/1</a></span> . <span class=\"code\">Mode</span> specifies how the results of the query object are to be interpreted. If <span class=\"code\">Mode</span> is <span class=\"code\">?GL_QUERY_WAIT</span>, the GL waits for the results of the query to be available and then uses the results to determine if subsequent rendering commands are discarded. If <span class=\"code\">Mode</span> is <span class=\"code\">?GL_QUERY_NO_WAIT</span>, the GL may choose to unconditionally execute the subsequent rendering commands without waiting for the query to complete.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBeginConditionalRender.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-endConditionalRender-0-id526113\"></span><a class=\"title_link\" name=\"endConditionalRender-0\" href=\"/erldoc/docs/#endConditionalRender-0\">endConditionalRender() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"endConditionalRender-0\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#beginConditionalRender-2\">beginConditionalRender/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribIPointer-5-id526139\"></span><a class=\"title_link\" name=\"vertexAttribIPointer-5\" href=\"/erldoc/docs/#vertexAttribIPointer-5\">vertexAttribIPointer(Index, Size, Type, Stride, Pointer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pointer = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribIPointer-5\"></a> </p><p>glVertexAttribIPointer</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getVertexAttribIiv-2-id526201\"></span><a class=\"title_link\" name=\"getVertexAttribIiv-2\" href=\"/erldoc/docs/#getVertexAttribIiv-2\">getVertexAttribIiv(Index, Pname) -&gt; {integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getVertexAttribIiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getVertexAttribdv-2\">getVertexAttribdv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getVertexAttribIuiv-2-id526240\"></span><a class=\"title_link\" name=\"getVertexAttribIuiv-2\" href=\"/erldoc/docs/#getVertexAttribIuiv-2\">getVertexAttribIuiv(Index, Pname) -&gt; {integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getVertexAttribIuiv-2\"></a> </p><p>glGetVertexAttribI</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI1i-2-id526284\"></span><a class=\"title_link\" name=\"vertexAttribI1i-2\" href=\"/erldoc/docs/#vertexAttribI1i-2\">vertexAttribI1i(Index, X) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI1i-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI2i-3-id526318\"></span><a class=\"title_link\" name=\"vertexAttribI2i-3\" href=\"/erldoc/docs/#vertexAttribI2i-3\">vertexAttribI2i(Index, X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI2i-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI3i-4-id526355\"></span><a class=\"title_link\" name=\"vertexAttribI3i-4\" href=\"/erldoc/docs/#vertexAttribI3i-4\">vertexAttribI3i(Index, X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI3i-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI4i-5-id526394\"></span><a class=\"title_link\" name=\"vertexAttribI4i-5\" href=\"/erldoc/docs/#vertexAttribI4i-5\">vertexAttribI4i(Index, X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI4i-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI1ui-2-id526435\"></span><a class=\"title_link\" name=\"vertexAttribI1ui-2\" href=\"/erldoc/docs/#vertexAttribI1ui-2\">vertexAttribI1ui(Index, X) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI1ui-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI2ui-3-id526469\"></span><a class=\"title_link\" name=\"vertexAttribI2ui-3\" href=\"/erldoc/docs/#vertexAttribI2ui-3\">vertexAttribI2ui(Index, X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI2ui-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI3ui-4-id526505\"></span><a class=\"title_link\" name=\"vertexAttribI3ui-4\" href=\"/erldoc/docs/#vertexAttribI3ui-4\">vertexAttribI3ui(Index, X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI3ui-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI4ui-5-id526544\"></span><a class=\"title_link\" name=\"vertexAttribI4ui-5\" href=\"/erldoc/docs/#vertexAttribI4ui-5\">vertexAttribI4ui(Index, X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI4ui-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI1iv-2-id526586\"></span><a class=\"title_link\" name=\"vertexAttribI1iv-2\" href=\"/erldoc/docs/#vertexAttribI1iv-2\">vertexAttribI1iv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI1iv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttribI1i-2\">vertexAttribI1i(Index, X)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI2iv-2-id526619\"></span><a class=\"title_link\" name=\"vertexAttribI2iv-2\" href=\"/erldoc/docs/#vertexAttribI2iv-2\">vertexAttribI2iv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI2iv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttribI2i-3\">vertexAttribI2i(Index, X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI3iv-2-id526653\"></span><a class=\"title_link\" name=\"vertexAttribI3iv-2\" href=\"/erldoc/docs/#vertexAttribI3iv-2\">vertexAttribI3iv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI3iv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttribI3i-4\">vertexAttribI3i(Index, X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI4iv-2-id526686\"></span><a class=\"title_link\" name=\"vertexAttribI4iv-2\" href=\"/erldoc/docs/#vertexAttribI4iv-2\">vertexAttribI4iv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer(), W::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI4iv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttribI4i-5\">vertexAttribI4i(Index, X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI1uiv-2-id526720\"></span><a class=\"title_link\" name=\"vertexAttribI1uiv-2\" href=\"/erldoc/docs/#vertexAttribI1uiv-2\">vertexAttribI1uiv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI1uiv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttribI1ui-2\">vertexAttribI1ui(Index, X)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI2uiv-2-id526754\"></span><a class=\"title_link\" name=\"vertexAttribI2uiv-2\" href=\"/erldoc/docs/#vertexAttribI2uiv-2\">vertexAttribI2uiv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI2uiv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttribI2ui-3\">vertexAttribI2ui(Index, X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI3uiv-2-id526787\"></span><a class=\"title_link\" name=\"vertexAttribI3uiv-2\" href=\"/erldoc/docs/#vertexAttribI3uiv-2\">vertexAttribI3uiv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI3uiv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttribI3ui-4\">vertexAttribI3ui(Index, X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI4uiv-2-id526821\"></span><a class=\"title_link\" name=\"vertexAttribI4uiv-2\" href=\"/erldoc/docs/#vertexAttribI4uiv-2\">vertexAttribI4uiv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::integer(), Y::integer(), Z::integer(), W::integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI4uiv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttribI4ui-5\">vertexAttribI4ui(Index, X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI4bv-2-id526855\"></span><a class=\"title_link\" name=\"vertexAttribI4bv-2\" href=\"/erldoc/docs/#vertexAttribI4bv-2\">vertexAttribI4bv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI4bv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI4sv-2-id526889\"></span><a class=\"title_link\" name=\"vertexAttribI4sv-2\" href=\"/erldoc/docs/#vertexAttribI4sv-2\">vertexAttribI4sv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI4sv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI4ubv-2-id526923\"></span><a class=\"title_link\" name=\"vertexAttribI4ubv-2\" href=\"/erldoc/docs/#vertexAttribI4ubv-2\">vertexAttribI4ubv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI4ubv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribI4usv-2-id526958\"></span><a class=\"title_link\" name=\"vertexAttribI4usv-2\" href=\"/erldoc/docs/#vertexAttribI4usv-2\">vertexAttribI4usv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribI4usv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttrib1d-2\">vertexAttrib1d/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getUniformuiv-2-id526992\"></span><a class=\"title_link\" name=\"getUniformuiv-2\" href=\"/erldoc/docs/#getUniformuiv-2\">getUniformuiv(Program, Location) -&gt; {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getUniformuiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getUniformfv-2\">getUniformfv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindFragDataLocation-3-id527027\"></span><a class=\"title_link\" name=\"bindFragDataLocation-3\" href=\"/erldoc/docs/#bindFragDataLocation-3\">bindFragDataLocation(Program, Color, Name) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Color = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindFragDataLocation-3\"></a> </p><p>Bind a user-defined varying out variable to a fragment shader color number</p> <p><span class=\"code\">gl:bindFragDataLocation</span> explicitly specifies the binding of the user-defined varying out variable <span class=\"code\">Name</span> to fragment shader color number <span class=\"code\">ColorNumber</span> for program <span class=\"code\">Program</span> . If <span class=\"code\">Name</span> was bound previously, its assigned binding is replaced with <span class=\"code\">ColorNumber</span> . <span class=\"code\">Name</span> must be a null-terminated string. <span class=\"code\">ColorNumber</span> must be less than <span class=\"code\">?GL_MAX_DRAW_BUFFERS</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindFragDataLocation.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getFragDataLocation-2-id527108\"></span><a class=\"title_link\" name=\"getFragDataLocation-2\" href=\"/erldoc/docs/#getFragDataLocation-2\">getFragDataLocation(Program, Name) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getFragDataLocation-2\"></a> </p><p>Query the bindings of color numbers to user-defined varying out variables</p> <p><span class=\"code\">gl:getFragDataLocation</span> retrieves the assigned color number binding for the user-defined varying out variable <span class=\"code\">Name</span> for program <span class=\"code\">Program</span> . <span class=\"code\">Program</span> must have previously been linked. <span class=\"code\">Name</span> must be a null-terminated string. If <span class=\"code\">Name</span> is not the name of an active user-defined varying out fragment shader variable within <span class=\"code\">Program</span> , -1 will be returned.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetFragDataLocation.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform1ui-2-id527179\"></span><a class=\"title_link\" name=\"uniform1ui-2\" href=\"/erldoc/docs/#uniform1ui-2\">uniform1ui(Location, V0) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform1ui-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform2ui-3-id527213\"></span><a class=\"title_link\" name=\"uniform2ui-3\" href=\"/erldoc/docs/#uniform2ui-3\">uniform2ui(Location, V0, V1) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform2ui-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform3ui-4-id527249\"></span><a class=\"title_link\" name=\"uniform3ui-4\" href=\"/erldoc/docs/#uniform3ui-4\">uniform3ui(Location, V0, V1, V2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform3ui-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform4ui-5-id527288\"></span><a class=\"title_link\" name=\"uniform4ui-5\" href=\"/erldoc/docs/#uniform4ui-5\">uniform4ui(Location, V0, V1, V2, V3) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V3 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform4ui-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform1uiv-2-id527330\"></span><a class=\"title_link\" name=\"uniform1uiv-2\" href=\"/erldoc/docs/#uniform1uiv-2\">uniform1uiv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform1uiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform2uiv-2-id527364\"></span><a class=\"title_link\" name=\"uniform2uiv-2\" href=\"/erldoc/docs/#uniform2uiv-2\">uniform2uiv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{integer(), integer()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform2uiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform3uiv-2-id527398\"></span><a class=\"title_link\" name=\"uniform3uiv-2\" href=\"/erldoc/docs/#uniform3uiv-2\">uniform3uiv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{integer(), integer(), integer()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform3uiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform4uiv-2-id527432\"></span><a class=\"title_link\" name=\"uniform4uiv-2\" href=\"/erldoc/docs/#uniform4uiv-2\">uniform4uiv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{integer(), integer(), integer(), integer()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform4uiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texParameterIiv-3-id527466\"></span><a class=\"title_link\" name=\"texParameterIiv-3\" href=\"/erldoc/docs/#texParameterIiv-3\">texParameterIiv(Target, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texParameterIiv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#texParameterf-3\">texParameterf/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texParameterIuiv-3-id527512\"></span><a class=\"title_link\" name=\"texParameterIuiv-3\" href=\"/erldoc/docs/#texParameterIuiv-3\">texParameterIuiv(Target, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texParameterIuiv-3\"></a> </p><p>glTexParameterI</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getTexParameterIiv-2-id527563\"></span><a class=\"title_link\" name=\"getTexParameterIiv-2\" href=\"/erldoc/docs/#getTexParameterIiv-2\">getTexParameterIiv(Target, Pname) -&gt; {integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getTexParameterIiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getTexParameterfv-2\">getTexParameterfv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getTexParameterIuiv-2-id527607\"></span><a class=\"title_link\" name=\"getTexParameterIuiv-2\" href=\"/erldoc/docs/#getTexParameterIuiv-2\">getTexParameterIuiv(Target, Pname) -&gt; {integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getTexParameterIuiv-2\"></a> </p><p>glGetTexParameterI</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clearBufferiv-3-id527656\"></span><a class=\"title_link\" name=\"clearBufferiv-3\" href=\"/erldoc/docs/#clearBufferiv-3\">clearBufferiv(Buffer, Drawbuffer, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buffer = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Drawbuffer = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clearBufferiv-3\"></a> </p><p>Clear individual buffers of the currently bound draw framebuffer</p> <p><span class=\"code\">gl:clearBuffer*</span> clears the specified buffer to the specified value(s). If <span class=\"code\">Buffer</span> is <span class=\"code\">?GL_COLOR</span>, a particular draw buffer <span class=\"code\">?GL_DRAWBUFFER</span> <span class=\"code\">I</span> is specified by passing <span class=\"code\">I</span> as <span class=\"code\">DrawBuffer</span> . In this case, <span class=\"code\">Value</span> points to a four-element vector specifying the R, G, B and A color to clear that draw buffer to. If <span class=\"code\">Buffer</span> is one of <span class=\"code\">?GL_FRONT</span>, <span class=\"code\">?GL_BACK</span>, <span class=\"code\">?GL_LEFT</span>, <span class=\"code\">?GL_RIGHT</span>, or <span class=\"code\">?GL_FRONT_AND_BACK</span> , identifying multiple buffers, each selected buffer is cleared to the same value. Clamping and conversion for fixed-point color buffers are performed in the same fashion as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#clearColor-4\">gl:clearColor/4</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glClearBuffer.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clearBufferuiv-3-id527767\"></span><a class=\"title_link\" name=\"clearBufferuiv-3\" href=\"/erldoc/docs/#clearBufferuiv-3\">clearBufferuiv(Buffer, Drawbuffer, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buffer = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Drawbuffer = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clearBufferuiv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#clearBufferiv-3\">clearBufferiv/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clearBufferfv-3-id527808\"></span><a class=\"title_link\" name=\"clearBufferfv-3\" href=\"/erldoc/docs/#clearBufferfv-3\">clearBufferfv(Buffer, Drawbuffer, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buffer = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Drawbuffer = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = tuple()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clearBufferfv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#clearBufferiv-3\">clearBufferiv/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clearBufferfi-4-id527850\"></span><a class=\"title_link\" name=\"clearBufferfi-4\" href=\"/erldoc/docs/#clearBufferfi-4\">clearBufferfi(Buffer, Drawbuffer, Depth, Stencil) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buffer = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Drawbuffer = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Depth = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stencil = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clearBufferfi-4\"></a> </p><p>glClearBufferfi</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getStringi-2-id527899\"></span><a class=\"title_link\" name=\"getStringi-2\" href=\"/erldoc/docs/#getStringi-2\">getStringi(Name, Index) -&gt; string()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getStringi-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getString-1\">getString/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawArraysInstanced-4-id527937\"></span><a class=\"title_link\" name=\"drawArraysInstanced-4\" href=\"/erldoc/docs/#drawArraysInstanced-4\">drawArraysInstanced(Mode, First, Count, Primcount) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">First = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Primcount = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawArraysInstanced-4\"></a> </p><p>glDrawArraysInstance</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawElementsInstanced-5-id527986\"></span><a class=\"title_link\" name=\"drawElementsInstanced-5\" href=\"/erldoc/docs/#drawElementsInstanced-5\">drawElementsInstanced(Mode, Count, Type, Indices, Primcount) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Indices = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Primcount = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawElementsInstanced-5\"></a> </p><p>glDrawElementsInstance</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texBuffer-3-id528053\"></span><a class=\"title_link\" name=\"texBuffer-3\" href=\"/erldoc/docs/#texBuffer-3\">texBuffer(Target, Internalformat, Buffer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buffer = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texBuffer-3\"></a> </p><p>Attach the storage for a buffer object to the active buffer texture</p> <p><span class=\"code\">gl:texBuffer</span> attaches the storage for the buffer object named <span class=\"code\">Buffer</span> to the active buffer texture, and specifies the internal format for the texel array found in the attached buffer object. If <span class=\"code\">Buffer</span> is zero, any buffer object attached to the buffer texture is detached and no new buffer object is attached. If <span class=\"code\">Buffer</span> is non-zero, it must be the name of an existing buffer object. <span class=\"code\">Target</span> must be <span class=\"code\">?GL_TEXTURE_BUFFER</span> . <span class=\"code\">Internalformat</span> specifies the storage format, and must be one of the following sized internal formats:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glTexBuffer.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-primitiveRestartIndex-1-id528137\"></span><a class=\"title_link\" name=\"primitiveRestartIndex-1\" href=\"/erldoc/docs/#primitiveRestartIndex-1\">primitiveRestartIndex(Index) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"primitiveRestartIndex-1\"></a> </p><p>Specify the primitive restart index</p> <p><span class=\"code\">gl:primitiveRestartIndex</span> specifies a vertex array element that is treated specially when primitive restarting is enabled. This is known as the primitive restart index.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glPrimitiveRestartIndex.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getInteger64i_v-2-id528182\"></span><a class=\"title_link\" name=\"getInteger64i_v-2\" href=\"/erldoc/docs/#getInteger64i_v-2\">getInteger64i_v(Target, Index) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getInteger64i_v-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getBooleanv-1\">getBooleanv/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getBufferParameteri64v-2-id528221\"></span><a class=\"title_link\" name=\"getBufferParameteri64v-2\" href=\"/erldoc/docs/#getBufferParameteri64v-2\">getBufferParameteri64v(Target, Pname) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getBufferParameteri64v-2\"></a> </p><p>glGetBufferParameteri64v</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-framebufferTexture-4-id528270\"></span><a class=\"title_link\" name=\"framebufferTexture-4\" href=\"/erldoc/docs/#framebufferTexture-4\">framebufferTexture(Target, Attachment, Texture, Level) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Attachment = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Texture = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"framebufferTexture-4\"></a> </p><p>Attach a level of a texture object as a logical buffer to the currently bound framebuffer object</p> <p><span class=\"code\">gl:framebufferTexture</span>, <span class=\"code\">gl:framebufferTexture1D</span>, <span class=\"code\">gl:framebufferTexture2D</span>, and <span class=\"code\">gl:framebufferTexture</span> attach a selected mipmap level or image of a texture object as one of the logical buffers of the framebuffer object currently bound to <span class=\"code\">Target</span> . <span class=\"code\">Target</span> must be <span class=\"code\">?GL_DRAW_FRAMEBUFFER</span>, <span class=\"code\">?GL_READ_FRAMEBUFFER</span>, or <span class=\"code\">?GL_FRAMEBUFFER</span> . <span class=\"code\">?GL_FRAMEBUFFER</span> is equivalent to <span class=\"code\">?GL_DRAW_FRAMEBUFFER</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glFramebufferTexture.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribDivisor-2-id528370\"></span><a class=\"title_link\" name=\"vertexAttribDivisor-2\" href=\"/erldoc/docs/#vertexAttribDivisor-2\">vertexAttribDivisor(Index, Divisor) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Divisor = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribDivisor-2\"></a> </p><p>Modify the rate at which generic vertex attributes advance during instanced rendering</p> <p><span class=\"code\">gl:vertexAttribDivisor</span> modifies the rate at which generic vertex attributes advance when rendering multiple instances of primitives in a single draw call. If <span class=\"code\">Divisor</span> is zero, the attribute at slot <span class=\"code\">Index</span> advances once per vertex. If <span class=\"code\">Divisor</span> is non-zero, the attribute advances once per <span class=\"code\">Divisor</span> instances of the set(s) of vertices being rendered. An attribute is referred to as instanced if its <span class=\"code\">?GL_VERTEX_ATTRIB_ARRAY_DIVISOR</span> value is non-zero.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glVertexAttribDivisor.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-minSampleShading-1-id528438\"></span><a class=\"title_link\" name=\"minSampleShading-1\" href=\"/erldoc/docs/#minSampleShading-1\">minSampleShading(Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"minSampleShading-1\"></a> </p><p>Specifies minimum rate at which sample shaing takes place</p> <p><span class=\"code\">gl:minSampleShading</span> specifies the rate at which samples are shaded within a covered pixel. Sample-rate shading is enabled by calling <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#enable-1\">gl:enable/1</a></span> with the parameter <span class=\"code\">?GL_SAMPLE_SHADING</span> . If <span class=\"code\">?GL_MULTISAMPLE</span> or <span class=\"code\">?GL_SAMPLE_SHADING</span> is disabled, sample shading has no effect. Otherwise, an implementation must provide at least as many unique color values for each covered fragment as specified by <span class=\"code\">Value</span> times <span class=\"code\">Samples</span> where <span class=\"code\">Samples</span> is the value of <span class=\"code\">?GL_SAMPLES</span> for the current framebuffer. At least 1 sample for each covered fragment is generated.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glMinSampleShading.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-blendEquationi-2-id528522\"></span><a class=\"title_link\" name=\"blendEquationi-2\" href=\"/erldoc/docs/#blendEquationi-2\">blendEquationi(Buf, Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buf = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"blendEquationi-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#blendEquation-1\">blendEquation/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-blendEquationSeparatei-3-id528560\"></span><a class=\"title_link\" name=\"blendEquationSeparatei-3\" href=\"/erldoc/docs/#blendEquationSeparatei-3\">blendEquationSeparatei(Buf, ModeRGB, ModeAlpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buf = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ModeRGB = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ModeAlpha = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"blendEquationSeparatei-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#blendEquationSeparate-2\">blendEquationSeparate/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-blendFunci-3-id528606\"></span><a class=\"title_link\" name=\"blendFunci-3\" href=\"/erldoc/docs/#blendFunci-3\">blendFunci(Buf, Src, Dst) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buf = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Src = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Dst = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"blendFunci-3\"></a> </p><p>glBlendFunci</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-blendFuncSeparatei-5-id528658\"></span><a class=\"title_link\" name=\"blendFuncSeparatei-5\" href=\"/erldoc/docs/#blendFuncSeparatei-5\">blendFuncSeparatei(Buf, SrcRGB, DstRGB, SrcAlpha, DstAlpha) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buf = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SrcRGB = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">DstRGB = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SrcAlpha = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">DstAlpha = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"blendFuncSeparatei-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#blendFuncSeparate-4\">blendFuncSeparate/4</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-loadTransposeMatrixfARB-1-id528718\"></span><a class=\"title_link\" name=\"loadTransposeMatrixfARB-1\" href=\"/erldoc/docs/#loadTransposeMatrixfARB-1\">loadTransposeMatrixfARB(M) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">M = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-matrix\">matrix()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"loadTransposeMatrixfARB-1\"></a> </p><p>glLoadTransposeMatrixARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-loadTransposeMatrixdARB-1-id528760\"></span><a class=\"title_link\" name=\"loadTransposeMatrixdARB-1\" href=\"/erldoc/docs/#loadTransposeMatrixdARB-1\">loadTransposeMatrixdARB(M) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">M = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-matrix\">matrix()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"loadTransposeMatrixdARB-1\"></a> </p><p>glLoadTransposeMatrixARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multTransposeMatrixfARB-1-id528802\"></span><a class=\"title_link\" name=\"multTransposeMatrixfARB-1\" href=\"/erldoc/docs/#multTransposeMatrixfARB-1\">multTransposeMatrixfARB(M) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">M = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-matrix\">matrix()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multTransposeMatrixfARB-1\"></a> </p><p>glMultTransposeMatrixARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-multTransposeMatrixdARB-1-id528844\"></span><a class=\"title_link\" name=\"multTransposeMatrixdARB-1\" href=\"/erldoc/docs/#multTransposeMatrixdARB-1\">multTransposeMatrixdARB(M) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">M = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-matrix\">matrix()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"multTransposeMatrixdARB-1\"></a> </p><p>glMultTransposeMatrixARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-weightbvARB-1-id528886\"></span><a class=\"title_link\" name=\"weightbvARB-1\" href=\"/erldoc/docs/#weightbvARB-1\">weightbvARB(Weights) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Weights = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"weightbvARB-1\"></a> </p><p>glWeightARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-weightsvARB-1-id528923\"></span><a class=\"title_link\" name=\"weightsvARB-1\" href=\"/erldoc/docs/#weightsvARB-1\">weightsvARB(Weights) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Weights = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"weightsvARB-1\"></a> </p><p>glWeightARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-weightivARB-1-id528960\"></span><a class=\"title_link\" name=\"weightivARB-1\" href=\"/erldoc/docs/#weightivARB-1\">weightivARB(Weights) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Weights = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"weightivARB-1\"></a> </p><p>glWeightARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-weightfvARB-1-id528997\"></span><a class=\"title_link\" name=\"weightfvARB-1\" href=\"/erldoc/docs/#weightfvARB-1\">weightfvARB(Weights) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Weights = [float()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"weightfvARB-1\"></a> </p><p>glWeightARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-weightdvARB-1-id529034\"></span><a class=\"title_link\" name=\"weightdvARB-1\" href=\"/erldoc/docs/#weightdvARB-1\">weightdvARB(Weights) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Weights = [float()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"weightdvARB-1\"></a> </p><p>glWeightARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-weightubvARB-1-id529070\"></span><a class=\"title_link\" name=\"weightubvARB-1\" href=\"/erldoc/docs/#weightubvARB-1\">weightubvARB(Weights) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Weights = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"weightubvARB-1\"></a> </p><p>glWeightARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-weightusvARB-1-id529107\"></span><a class=\"title_link\" name=\"weightusvARB-1\" href=\"/erldoc/docs/#weightusvARB-1\">weightusvARB(Weights) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Weights = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"weightusvARB-1\"></a> </p><p>glWeightARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-weightuivARB-1-id529144\"></span><a class=\"title_link\" name=\"weightuivARB-1\" href=\"/erldoc/docs/#weightuivARB-1\">weightuivARB(Weights) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Weights = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"weightuivARB-1\"></a> </p><p>glWeightARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexBlendARB-1-id529181\"></span><a class=\"title_link\" name=\"vertexBlendARB-1\" href=\"/erldoc/docs/#vertexBlendARB-1\">vertexBlendARB(Count) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexBlendARB-1\"></a> </p><p>glVertexBlenARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-currentPaletteMatrixARB-1-id529218\"></span><a class=\"title_link\" name=\"currentPaletteMatrixARB-1\" href=\"/erldoc/docs/#currentPaletteMatrixARB-1\">currentPaletteMatrixARB(Index) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"currentPaletteMatrixARB-1\"></a> </p><p>glCurrentPaletteMatrixARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-matrixIndexubvARB-1-id529256\"></span><a class=\"title_link\" name=\"matrixIndexubvARB-1\" href=\"/erldoc/docs/#matrixIndexubvARB-1\">matrixIndexubvARB(Indices) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Indices = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"matrixIndexubvARB-1\"></a> </p><p>glMatrixIndexARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-matrixIndexusvARB-1-id529292\"></span><a class=\"title_link\" name=\"matrixIndexusvARB-1\" href=\"/erldoc/docs/#matrixIndexusvARB-1\">matrixIndexusvARB(Indices) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Indices = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"matrixIndexusvARB-1\"></a> </p><p>glMatrixIndexARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-matrixIndexuivARB-1-id529329\"></span><a class=\"title_link\" name=\"matrixIndexuivARB-1\" href=\"/erldoc/docs/#matrixIndexuivARB-1\">matrixIndexuivARB(Indices) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Indices = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"matrixIndexuivARB-1\"></a> </p><p>glMatrixIndexARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programStringARB-3-id529366\"></span><a class=\"title_link\" name=\"programStringARB-3\" href=\"/erldoc/docs/#programStringARB-3\">programStringARB(Target, Format, String) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">String = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programStringARB-3\"></a> </p><p>glProgramStringARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindProgramARB-2-id529418\"></span><a class=\"title_link\" name=\"bindProgramARB-2\" href=\"/erldoc/docs/#bindProgramARB-2\">bindProgramARB(Target, Program) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindProgramARB-2\"></a> </p><p>glBindProgramARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteProgramsARB-1-id529462\"></span><a class=\"title_link\" name=\"deleteProgramsARB-1\" href=\"/erldoc/docs/#deleteProgramsARB-1\">deleteProgramsARB(Programs) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Programs = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteProgramsARB-1\"></a> </p><p>glDeleteProgramsARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-genProgramsARB-1-id529498\"></span><a class=\"title_link\" name=\"genProgramsARB-1\" href=\"/erldoc/docs/#genProgramsARB-1\">genProgramsARB(N) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">N = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"genProgramsARB-1\"></a> </p><p>glGenProgramsARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programEnvParameter4dARB-6-id529535\"></span><a class=\"title_link\" name=\"programEnvParameter4dARB-6\" href=\"/erldoc/docs/#programEnvParameter4dARB-6\">programEnvParameter4dARB(Target, Index, X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programEnvParameter4dARB-6\"></a> </p><p>glProgramEnvParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programEnvParameter4dvARB-3-id529590\"></span><a class=\"title_link\" name=\"programEnvParameter4dvARB-3\" href=\"/erldoc/docs/#programEnvParameter4dvARB-3\">programEnvParameter4dvARB(Target, Index, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = {float(), float(), float(), float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programEnvParameter4dvARB-3\"></a> </p><p>glProgramEnvParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programEnvParameter4fARB-6-id529637\"></span><a class=\"title_link\" name=\"programEnvParameter4fARB-6\" href=\"/erldoc/docs/#programEnvParameter4fARB-6\">programEnvParameter4fARB(Target, Index, X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programEnvParameter4fARB-6\"></a> </p><p>glProgramEnvParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programEnvParameter4fvARB-3-id529691\"></span><a class=\"title_link\" name=\"programEnvParameter4fvARB-3\" href=\"/erldoc/docs/#programEnvParameter4fvARB-3\">programEnvParameter4fvARB(Target, Index, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = {float(), float(), float(), float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programEnvParameter4fvARB-3\"></a> </p><p>glProgramEnvParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programLocalParameter4dARB-6-id529738\"></span><a class=\"title_link\" name=\"programLocalParameter4dARB-6\" href=\"/erldoc/docs/#programLocalParameter4dARB-6\">programLocalParameter4dARB(Target, Index, X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programLocalParameter4dARB-6\"></a> </p><p>glProgramLocalParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programLocalParameter4dvARB-3-id529793\"></span><a class=\"title_link\" name=\"programLocalParameter4dvARB-3\" href=\"/erldoc/docs/#programLocalParameter4dvARB-3\">programLocalParameter4dvARB(Target, Index, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = {float(), float(), float(), float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programLocalParameter4dvARB-3\"></a> </p><p>glProgramLocalParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programLocalParameter4fARB-6-id529840\"></span><a class=\"title_link\" name=\"programLocalParameter4fARB-6\" href=\"/erldoc/docs/#programLocalParameter4fARB-6\">programLocalParameter4fARB(Target, Index, X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programLocalParameter4fARB-6\"></a> </p><p>glProgramLocalParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programLocalParameter4fvARB-3-id529894\"></span><a class=\"title_link\" name=\"programLocalParameter4fvARB-3\" href=\"/erldoc/docs/#programLocalParameter4fvARB-3\">programLocalParameter4fvARB(Target, Index, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = {float(), float(), float(), float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programLocalParameter4fvARB-3\"></a> </p><p>glProgramLocalParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getProgramEnvParameterdvARB-2-id529942\"></span><a class=\"title_link\" name=\"getProgramEnvParameterdvARB-2\" href=\"/erldoc/docs/#getProgramEnvParameterdvARB-2\">getProgramEnvParameterdvARB(Target, Index) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getProgramEnvParameterdvARB-2\"></a> </p><p>glGetProgramEnvParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getProgramEnvParameterfvARB-2-id529986\"></span><a class=\"title_link\" name=\"getProgramEnvParameterfvARB-2\" href=\"/erldoc/docs/#getProgramEnvParameterfvARB-2\">getProgramEnvParameterfvARB(Target, Index) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getProgramEnvParameterfvARB-2\"></a> </p><p>glGetProgramEnvParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getProgramLocalParameterdvARB-2-id530031\"></span><a class=\"title_link\" name=\"getProgramLocalParameterdvARB-2\" href=\"/erldoc/docs/#getProgramLocalParameterdvARB-2\">getProgramLocalParameterdvARB(Target, Index) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getProgramLocalParameterdvARB-2\"></a> </p><p>glGetProgramLocalParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getProgramLocalParameterfvARB-2-id530076\"></span><a class=\"title_link\" name=\"getProgramLocalParameterfvARB-2\" href=\"/erldoc/docs/#getProgramLocalParameterfvARB-2\">getProgramLocalParameterfvARB(Target, Index) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getProgramLocalParameterfvARB-2\"></a> </p><p>glGetProgramLocalParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getProgramStringARB-3-id530121\"></span><a class=\"title_link\" name=\"getProgramStringARB-3\" href=\"/erldoc/docs/#getProgramStringARB-3\">getProgramStringARB(Target, Pname, String) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">String = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getProgramStringARB-3\"></a> </p><p>glGetProgramStringARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getBufferParameterivARB-2-id530177\"></span><a class=\"title_link\" name=\"getBufferParameterivARB-2\" href=\"/erldoc/docs/#getBufferParameterivARB-2\">getBufferParameterivARB(Target, Pname) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getBufferParameterivARB-2\"></a> </p><p>glGetBufferParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteObjectARB-1-id530226\"></span><a class=\"title_link\" name=\"deleteObjectARB-1\" href=\"/erldoc/docs/#deleteObjectARB-1\">deleteObjectARB(Obj) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Obj = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteObjectARB-1\"></a> </p><p>glDeleteObjectARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getHandleARB-1-id530263\"></span><a class=\"title_link\" name=\"getHandleARB-1\" href=\"/erldoc/docs/#getHandleARB-1\">getHandleARB(Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getHandleARB-1\"></a> </p><p>glGetHandleARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-detachObjectARB-2-id530304\"></span><a class=\"title_link\" name=\"detachObjectARB-2\" href=\"/erldoc/docs/#detachObjectARB-2\">detachObjectARB(ContainerObj, AttachedObj) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ContainerObj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">AttachedObj = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"detachObjectARB-2\"></a> </p><p>glDetachObjectARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-createShaderObjectARB-1-id530344\"></span><a class=\"title_link\" name=\"createShaderObjectARB-1\" href=\"/erldoc/docs/#createShaderObjectARB-1\">createShaderObjectARB(ShaderType) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ShaderType = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"createShaderObjectARB-1\"></a> </p><p>glCreateShaderObjectARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-shaderSourceARB-2-id530386\"></span><a class=\"title_link\" name=\"shaderSourceARB-2\" href=\"/erldoc/docs/#shaderSourceARB-2\">shaderSourceARB(ShaderObj, String) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ShaderObj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">String = iolist()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"shaderSourceARB-2\"></a> </p><p>glShaderSourceARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-compileShaderARB-1-id530425\"></span><a class=\"title_link\" name=\"compileShaderARB-1\" href=\"/erldoc/docs/#compileShaderARB-1\">compileShaderARB(ShaderObj) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ShaderObj = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"compileShaderARB-1\"></a> </p><p>glCompileShaderARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-createProgramObjectARB-0-id530462\"></span><a class=\"title_link\" name=\"createProgramObjectARB-0\" href=\"/erldoc/docs/#createProgramObjectARB-0\">createProgramObjectARB() -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"createProgramObjectARB-0\"></a> </p><p>glCreateProgramObjectARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-attachObjectARB-2-id530493\"></span><a class=\"title_link\" name=\"attachObjectARB-2\" href=\"/erldoc/docs/#attachObjectARB-2\">attachObjectARB(ContainerObj, Obj) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ContainerObj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Obj = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"attachObjectARB-2\"></a> </p><p>glAttachObjectARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-linkProgramARB-1-id530533\"></span><a class=\"title_link\" name=\"linkProgramARB-1\" href=\"/erldoc/docs/#linkProgramARB-1\">linkProgramARB(ProgramObj) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ProgramObj = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"linkProgramARB-1\"></a> </p><p>glLinkProgramARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-useProgramObjectARB-1-id530570\"></span><a class=\"title_link\" name=\"useProgramObjectARB-1\" href=\"/erldoc/docs/#useProgramObjectARB-1\">useProgramObjectARB(ProgramObj) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ProgramObj = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"useProgramObjectARB-1\"></a> </p><p>glUseProgramObjectARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-validateProgramARB-1-id530607\"></span><a class=\"title_link\" name=\"validateProgramARB-1\" href=\"/erldoc/docs/#validateProgramARB-1\">validateProgramARB(ProgramObj) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ProgramObj = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"validateProgramARB-1\"></a> </p><p>glValidateProgramARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getObjectParameterfvARB-2-id530644\"></span><a class=\"title_link\" name=\"getObjectParameterfvARB-2\" href=\"/erldoc/docs/#getObjectParameterfvARB-2\">getObjectParameterfvARB(Obj, Pname) -&gt; float()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Obj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getObjectParameterfvARB-2\"></a> </p><p>glGetObjectParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getObjectParameterivARB-2-id530688\"></span><a class=\"title_link\" name=\"getObjectParameterivARB-2\" href=\"/erldoc/docs/#getObjectParameterivARB-2\">getObjectParameterivARB(Obj, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Obj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getObjectParameterivARB-2\"></a> </p><p>glGetObjectParameterARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getInfoLogARB-2-id530732\"></span><a class=\"title_link\" name=\"getInfoLogARB-2\" href=\"/erldoc/docs/#getInfoLogARB-2\">getInfoLogARB(Obj, MaxLength) -&gt; string()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Obj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">MaxLength = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getInfoLogARB-2\"></a> </p><p>glGetInfoLogARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getAttachedObjectsARB-2-id530772\"></span><a class=\"title_link\" name=\"getAttachedObjectsARB-2\" href=\"/erldoc/docs/#getAttachedObjectsARB-2\">getAttachedObjectsARB(ContainerObj, MaxCount) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ContainerObj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">MaxCount = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getAttachedObjectsARB-2\"></a> </p><p>glGetAttachedObjectsARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getUniformLocationARB-2-id530812\"></span><a class=\"title_link\" name=\"getUniformLocationARB-2\" href=\"/erldoc/docs/#getUniformLocationARB-2\">getUniformLocationARB(ProgramObj, Name) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ProgramObj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getUniformLocationARB-2\"></a> </p><p>glGetUniformLocationARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getActiveUniformARB-3-id530851\"></span><a class=\"title_link\" name=\"getActiveUniformARB-3\" href=\"/erldoc/docs/#getActiveUniformARB-3\">getActiveUniformARB(ProgramObj, Index, MaxLength) -&gt; {Size::integer(), Type::enum(), Name::string()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ProgramObj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">MaxLength = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getActiveUniformARB-3\"></a> </p><p>glGetActiveUniformARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getUniformfvARB-2-id530900\"></span><a class=\"title_link\" name=\"getUniformfvARB-2\" href=\"/erldoc/docs/#getUniformfvARB-2\">getUniformfvARB(ProgramObj, Location) -&gt; matrix()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ProgramObj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getUniformfvARB-2\"></a> </p><p>glGetUniformARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getUniformivARB-2-id530944\"></span><a class=\"title_link\" name=\"getUniformivARB-2\" href=\"/erldoc/docs/#getUniformivARB-2\">getUniformivARB(ProgramObj, Location) -&gt; {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ProgramObj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getUniformivARB-2\"></a> </p><p>glGetUniformARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getShaderSourceARB-2-id530985\"></span><a class=\"title_link\" name=\"getShaderSourceARB-2\" href=\"/erldoc/docs/#getShaderSourceARB-2\">getShaderSourceARB(Obj, MaxLength) -&gt; string()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Obj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">MaxLength = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getShaderSourceARB-2\"></a> </p><p>glGetShaderSourceARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindAttribLocationARB-3-id531024\"></span><a class=\"title_link\" name=\"bindAttribLocationARB-3\" href=\"/erldoc/docs/#bindAttribLocationARB-3\">bindAttribLocationARB(ProgramObj, Index, Name) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ProgramObj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindAttribLocationARB-3\"></a> </p><p>glBindAttribLocationARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getActiveAttribARB-3-id531066\"></span><a class=\"title_link\" name=\"getActiveAttribARB-3\" href=\"/erldoc/docs/#getActiveAttribARB-3\">getActiveAttribARB(ProgramObj, Index, MaxLength) -&gt; {Size::integer(), Type::enum(), Name::string()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ProgramObj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">MaxLength = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getActiveAttribARB-3\"></a> </p><p>glGetActiveAttribARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getAttribLocationARB-2-id531114\"></span><a class=\"title_link\" name=\"getAttribLocationARB-2\" href=\"/erldoc/docs/#getAttribLocationARB-2\">getAttribLocationARB(ProgramObj, Name) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ProgramObj = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getAttribLocationARB-2\"></a> </p><p>glGetAttribLocationARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isRenderbuffer-1-id531154\"></span><a class=\"title_link\" name=\"isRenderbuffer-1\" href=\"/erldoc/docs/#isRenderbuffer-1\">isRenderbuffer(Renderbuffer) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Renderbuffer = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isRenderbuffer-1\"></a> </p><p>Determine if a name corresponds to a renderbuffer object</p> <p><span class=\"code\">gl:isRenderbuffer</span> returns <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">Renderbuffer</span> is currently the name of a renderbuffer object. If <span class=\"code\">Renderbuffer</span> is zero, or if <span class=\"code\">Renderbuffer</span> is not the name of a renderbuffer object, or if an error occurs, <span class=\"code\">gl:isRenderbuffer</span> returns <span class=\"code\">?GL_FALSE</span>. If <span class=\"code\">Renderbuffer</span> is a name returned by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genRenderbuffers-1\">gl:genRenderbuffers/1</a></span> , by that has not yet been bound through a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#bindRenderbuffer-2\">gl:bindRenderbuffer/2</a></span> or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#framebufferRenderbuffer-4\">gl:framebufferRenderbuffer/4</a></span> , then the name is not a renderbuffer object and <span class=\"code\">gl:isRenderbuffer</span> returns <span class=\"code\">?GL_FALSE</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glIsRenderbuffer.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindRenderbuffer-2-id531251\"></span><a class=\"title_link\" name=\"bindRenderbuffer-2\" href=\"/erldoc/docs/#bindRenderbuffer-2\">bindRenderbuffer(Target, Renderbuffer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Renderbuffer = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindRenderbuffer-2\"></a> </p><p>Bind a renderbuffer to a renderbuffer target</p> <p><span class=\"code\">gl:bindRenderbuffer</span> binds the renderbuffer object with name <span class=\"code\">Renderbuffer</span> to the renderbuffer target specified by <span class=\"code\">Target</span> . <span class=\"code\">Target</span> must be <span class=\"code\">?GL_RENDERBUFFER</span> . <span class=\"code\">Renderbuffer</span> is the name of a renderbuffer object previously returned from a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genRenderbuffers-1\">gl:genRenderbuffers/1</a></span> , or zero to break the existing binding of a renderbuffer object to <span class=\"code\">Target</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindRenderbuffer.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteRenderbuffers-1-id531332\"></span><a class=\"title_link\" name=\"deleteRenderbuffers-1\" href=\"/erldoc/docs/#deleteRenderbuffers-1\">deleteRenderbuffers(Renderbuffers) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Renderbuffers = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteRenderbuffers-1\"></a> </p><p>Delete renderbuffer objects</p> <p><span class=\"code\">gl:deleteRenderbuffers</span> deletes the <span class=\"code\">N</span> renderbuffer objects whose names are stored in the array addressed by <span class=\"code\">Renderbuffers</span> . The name zero is reserved by the GL and is silently ignored, should it occur in <span class=\"code\">Renderbuffers</span> , as are other unused names. Once a renderbuffer object is deleted, its name is again unused and it has no contents. If a renderbuffer that is currently bound to the target <span class=\"code\">?GL_RENDERBUFFER</span> is deleted, it is as though <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#bindRenderbuffer-2\">gl:bindRenderbuffer/2</a></span> had been executed with a <span class=\"code\">Target</span> of <span class=\"code\">?GL_RENDERBUFFER</span> and a <span class=\"code\">Name</span> of zero.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDeleteRenderbuffers.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-genRenderbuffers-1-id531411\"></span><a class=\"title_link\" name=\"genRenderbuffers-1\" href=\"/erldoc/docs/#genRenderbuffers-1\">genRenderbuffers(N) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">N = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"genRenderbuffers-1\"></a> </p><p>Generate renderbuffer object names</p> <p><span class=\"code\">gl:genRenderbuffers</span> returns <span class=\"code\">N</span> renderbuffer object names in <span class=\"code\">Renderbuffers</span> . There is no guarantee that the names form a contiguous set of integers; however, it is guaranteed that none of the returned names was in use immediately before the call to <span class=\"code\">gl:genRenderbuffers</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGenRenderbuffers.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-renderbufferStorage-4-id531467\"></span><a class=\"title_link\" name=\"renderbufferStorage-4\" href=\"/erldoc/docs/#renderbufferStorage-4\">renderbufferStorage(Target, Internalformat, Width, Height) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"renderbufferStorage-4\"></a> </p><p>Establish data storage, format and dimensions of a renderbuffer object&apos;s image</p> <p><span class=\"code\">gl:renderbufferStorage</span> is equivalent to calling <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#renderbufferStorageMultisample-5\">gl:renderbufferStorageMultisample/5</a></span> with the <span class=\"code\">Samples</span> set to zero.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glRenderbufferStorage.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getRenderbufferParameteriv-2-id531539\"></span><a class=\"title_link\" name=\"getRenderbufferParameteriv-2\" href=\"/erldoc/docs/#getRenderbufferParameteriv-2\">getRenderbufferParameteriv(Target, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getRenderbufferParameteriv-2\"></a> </p><p>Retrieve information about a bound renderbuffer object</p> <p><span class=\"code\">gl:getRenderbufferParameteriv</span> retrieves information about a bound renderbuffer object. <span class=\"code\">Target</span> specifies the target of the query operation and must be <span class=\"code\">?GL_RENDERBUFFER</span> . <span class=\"code\">Pname</span> specifies the parameter whose value to query and must be one of <span class=\"code\">?GL_RENDERBUFFER_WIDTH</span> , <span class=\"code\">?GL_RENDERBUFFER_HEIGHT</span>, <span class=\"code\">?GL_RENDERBUFFER_INTERNAL_FORMAT</span>, <span class=\"code\">?GL_RENDERBUFFER_RED_SIZE</span> , <span class=\"code\">?GL_RENDERBUFFER_GREEN_SIZE</span>, <span class=\"code\">?GL_RENDERBUFFER_BLUE_SIZE</span>, <span class=\"code\">?GL_RENDERBUFFER_ALPHA_SIZE</span> , <span class=\"code\">?GL_RENDERBUFFER_DEPTH_SIZE</span>, <span class=\"code\">?GL_RENDERBUFFER_DEPTH_SIZE</span>, <span class=\"code\">?GL_RENDERBUFFER_STENCIL_SIZE</span> , or <span class=\"code\">?GL_RENDERBUFFER_SAMPLES</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetRenderbufferParameter.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isFramebuffer-1-id531650\"></span><a class=\"title_link\" name=\"isFramebuffer-1\" href=\"/erldoc/docs/#isFramebuffer-1\">isFramebuffer(Framebuffer) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Framebuffer = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isFramebuffer-1\"></a> </p><p>Determine if a name corresponds to a framebuffer object</p> <p><span class=\"code\">gl:isFramebuffer</span> returns <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">Framebuffer</span> is currently the name of a framebuffer object. If <span class=\"code\">Framebuffer</span> is zero, or if <span class=\"code\">?framebuffer</span> is not the name of a framebuffer object, or if an error occurs, <span class=\"code\">gl:isFramebuffer</span> returns <span class=\"code\">?GL_FALSE</span>. If <span class=\"code\">Framebuffer</span> is a name returned by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genFramebuffers-1\">gl:genFramebuffers/1</a></span> , by that has not yet been bound through a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#bindFramebuffer-2\">gl:bindFramebuffer/2</a></span> , then the name is not a framebuffer object and <span class=\"code\">gl:isFramebuffer</span> returns <span class=\"code\">?GL_FALSE</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glIsFramebuffer.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindFramebuffer-2-id531740\"></span><a class=\"title_link\" name=\"bindFramebuffer-2\" href=\"/erldoc/docs/#bindFramebuffer-2\">bindFramebuffer(Target, Framebuffer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Framebuffer = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindFramebuffer-2\"></a> </p><p>Bind a framebuffer to a framebuffer target</p> <p><span class=\"code\">gl:bindFramebuffer</span> binds the framebuffer object with name <span class=\"code\">Framebuffer</span> to the framebuffer target specified by <span class=\"code\">Target</span> . <span class=\"code\">Target</span> must be either <span class=\"code\">?GL_DRAW_FRAMEBUFFER</span> , <span class=\"code\">?GL_READ_FRAMEBUFFER</span> or <span class=\"code\">?GL_FRAMEBUFFER</span>. If a framebuffer object is bound to <span class=\"code\">?GL_DRAW_FRAMEBUFFER</span> or <span class=\"code\">?GL_READ_FRAMEBUFFER</span>, it becomes the target for rendering or readback operations, respectively, until it is deleted or another framebuffer is bound to the corresponding bind point. Calling <span class=\"code\">gl:bindFramebuffer</span> with <span class=\"code\">Target</span> set to <span class=\"code\">?GL_FRAMEBUFFER</span> binds <span class=\"code\">Framebuffer</span> to both the read and draw framebuffer targets. <span class=\"code\">Framebuffer</span> is the name of a framebuffer object previously returned from a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genFramebuffers-1\">gl:genFramebuffers/1</a></span> , or zero to break the existing binding of a framebuffer object to <span class=\"code\">Target</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindFramebuffer.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteFramebuffers-1-id531853\"></span><a class=\"title_link\" name=\"deleteFramebuffers-1\" href=\"/erldoc/docs/#deleteFramebuffers-1\">deleteFramebuffers(Framebuffers) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Framebuffers = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteFramebuffers-1\"></a> </p><p>Delete framebuffer objects</p> <p><span class=\"code\">gl:deleteFramebuffers</span> deletes the <span class=\"code\">N</span> framebuffer objects whose names are stored in the array addressed by <span class=\"code\">Framebuffers</span> . The name zero is reserved by the GL and is silently ignored, should it occur in <span class=\"code\">Framebuffers</span> , as are other unused names. Once a framebuffer object is deleted, its name is again unused and it has no attachments. If a framebuffer that is currently bound to one or more of the targets <span class=\"code\">?GL_DRAW_FRAMEBUFFER</span> or <span class=\"code\">?GL_READ_FRAMEBUFFER</span> is deleted, it is as though <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#bindFramebuffer-2\">gl:bindFramebuffer/2</a></span> had been executed with the corresponding <span class=\"code\">Target</span> and <span class=\"code\">Framebuffer</span> zero.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDeleteFramebuffers.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-genFramebuffers-1-id531932\"></span><a class=\"title_link\" name=\"genFramebuffers-1\" href=\"/erldoc/docs/#genFramebuffers-1\">genFramebuffers(N) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">N = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"genFramebuffers-1\"></a> </p><p>Generate framebuffer object names</p> <p><span class=\"code\">gl:genFramebuffers</span> returns <span class=\"code\">N</span> framebuffer object names in <span class=\"code\">Ids</span> . There is no guarantee that the names form a contiguous set of integers; however, it is guaranteed that none of the returned names was in use immediately before the call to <span class=\"code\">gl:genFramebuffers</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGenFramebuffers.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-checkFramebufferStatus-1-id531988\"></span><a class=\"title_link\" name=\"checkFramebufferStatus-1\" href=\"/erldoc/docs/#checkFramebufferStatus-1\">checkFramebufferStatus(Target) -&gt; enum()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"checkFramebufferStatus-1\"></a> </p><p>Check the completeness status of a framebuffer</p> <p><span class=\"code\">gl:checkFramebufferStatus</span> queries the completeness status of the framebuffer object currently bound to <span class=\"code\">Target</span> . <span class=\"code\">Target</span> must be <span class=\"code\">?GL_DRAW_FRAMEBUFFER</span>, <span class=\"code\">?GL_READ_FRAMEBUFFER</span> or <span class=\"code\">?GL_FRAMEBUFFER</span>. <span class=\"code\">?GL_FRAMEBUFFER</span> is equivalent to <span class=\"code\">?GL_DRAW_FRAMEBUFFER</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCheckFramebufferStatus.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-framebufferTexture1D-5-id532068\"></span><a class=\"title_link\" name=\"framebufferTexture1D-5\" href=\"/erldoc/docs/#framebufferTexture1D-5\">framebufferTexture1D(Target, Attachment, Textarget, Texture, Level) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Attachment = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Textarget = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Texture = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"framebufferTexture1D-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#framebufferTexture-4\">framebufferTexture/4</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-framebufferTexture2D-5-id532124\"></span><a class=\"title_link\" name=\"framebufferTexture2D-5\" href=\"/erldoc/docs/#framebufferTexture2D-5\">framebufferTexture2D(Target, Attachment, Textarget, Texture, Level) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Attachment = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Textarget = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Texture = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"framebufferTexture2D-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#framebufferTexture-4\">framebufferTexture/4</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-framebufferTexture3D-6-id532180\"></span><a class=\"title_link\" name=\"framebufferTexture3D-6\" href=\"/erldoc/docs/#framebufferTexture3D-6\">framebufferTexture3D(Target, Attachment, Textarget, Texture, Level, Zoffset) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Attachment = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Textarget = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Texture = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Zoffset = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"framebufferTexture3D-6\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#framebufferTexture-4\">framebufferTexture/4</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-framebufferRenderbuffer-4-id532238\"></span><a class=\"title_link\" name=\"framebufferRenderbuffer-4\" href=\"/erldoc/docs/#framebufferRenderbuffer-4\">framebufferRenderbuffer(Target, Attachment, Renderbuffertarget, Renderbuffer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Attachment = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Renderbuffertarget = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Renderbuffer = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"framebufferRenderbuffer-4\"></a> </p><p>Attach a renderbuffer as a logical buffer to the currently bound framebuffer object</p> <p><span class=\"code\">gl:framebufferRenderbuffer</span> attaches a renderbuffer as one of the logical buffers of the currently bound framebuffer object. <span class=\"code\">Renderbuffer</span> is the name of the renderbuffer object to attach and must be either zero, or the name of an existing renderbuffer object of type <span class=\"code\">Renderbuffertarget</span> . If <span class=\"code\">Renderbuffer</span> is not zero and if <span class=\"code\">gl:framebufferRenderbuffer</span> is successful, then the renderbuffer name <span class=\"code\">Renderbuffer</span> will be used as the logical buffer identified by <span class=\"code\">Attachment</span> of the framebuffer currently bound to <span class=\"code\">Target</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glFramebufferRenderbuffer.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getFramebufferAttachmentParameteriv-3-id532333\"></span><a class=\"title_link\" name=\"getFramebufferAttachmentParameteriv-3\" href=\"/erldoc/docs/#getFramebufferAttachmentParameteriv-3\">getFramebufferAttachmentParameteriv(Target, Attachment, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Attachment = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getFramebufferAttachmentParameteriv-3\"></a> </p><p>Retrieve information about attachments of a bound framebuffer object</p> <p><span class=\"code\">gl:getFramebufferAttachmentParameter</span> returns information about attachments of a bound framebuffer object. <span class=\"code\">Target</span> specifies the framebuffer binding point and must be <span class=\"code\">?GL_DRAW_FRAMEBUFFER</span>, <span class=\"code\">?GL_READ_FRAMEBUFFER</span> or <span class=\"code\">?GL_FRAMEBUFFER</span>. <span class=\"code\">?GL_FRAMEBUFFER</span> is equivalent to <span class=\"code\">?GL_DRAW_FRAMEBUFFER</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetFramebufferAttachmentParameter.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-generateMipmap-1-id532420\"></span><a class=\"title_link\" name=\"generateMipmap-1\" href=\"/erldoc/docs/#generateMipmap-1\">generateMipmap(Target) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"generateMipmap-1\"></a> </p><p>Generate mipmaps for a specified texture target</p> <p><span class=\"code\">gl:generateMipmap</span> generates mipmaps for the texture attached to <span class=\"code\">Target</span> of the active texture unit. For cube map textures, a <span class=\"code\">?GL_INVALID_OPERATION</span> error is generated if the texture attached to <span class=\"code\">Target</span> is not cube complete.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGenerateMipmap.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-blitFramebuffer-10-id532481\"></span><a class=\"title_link\" name=\"blitFramebuffer-10\" href=\"/erldoc/docs/#blitFramebuffer-10\">blitFramebuffer(SrcX0, SrcY0, SrcX1, SrcY1, DstX0, DstY0, DstX1, DstY1, Mask, Filter) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SrcX0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SrcY0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SrcX1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SrcY1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">DstX0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">DstY0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">DstX1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">DstY1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mask = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Filter = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"blitFramebuffer-10\"></a> </p><p>Copy a block of pixels from the read framebuffer to the draw framebuffer</p> <p><span class=\"code\">gl:blitFramebuffer</span> transfers a rectangle of pixel values from one region of the read framebuffer to another region in the draw framebuffer. <span class=\"code\">Mask</span> is the bitwise OR of a number of values indicating which buffers are to be copied. The values are <span class=\"code\">?GL_COLOR_BUFFER_BIT</span> , <span class=\"code\">?GL_DEPTH_BUFFER_BIT</span>, and <span class=\"code\">?GL_STENCIL_BUFFER_BIT</span>. The pixels corresponding to these buffers are copied from the source rectangle bounded by the locations ( <span class=\"code\">SrcX0</span> ; <span class=\"code\">SrcY0</span> ) and ( <span class=\"code\">SrcX1</span> ; <span class=\"code\">SrcY1</span> ) to the destination rectangle bounded by the locations ( <span class=\"code\">DstX0</span> ; <span class=\"code\">DstY0</span> ) and ( <span class=\"code\">DstX1</span> ; <span class=\"code\">DstY1</span> ). The lower bounds of the rectangle are inclusive, while the upper bounds are exclusive.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBlitFramebuffer.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-renderbufferStorageMultisample-5-id532601\"></span><a class=\"title_link\" name=\"renderbufferStorageMultisample-5\" href=\"/erldoc/docs/#renderbufferStorageMultisample-5\">renderbufferStorageMultisample(Target, Samples, Internalformat, Width, Height) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Samples = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"renderbufferStorageMultisample-5\"></a> </p><p>Establish data storage, format, dimensions and sample count of a renderbuffer object&apos;s image</p> <p><span class=\"code\">gl:renderbufferStorageMultisample</span> establishes the data storage, format, dimensions and number of samples of a renderbuffer object&apos;s image.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glRenderbufferStorageMultisample.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-framebufferTextureLayer-5-id532666\"></span><a class=\"title_link\" name=\"framebufferTextureLayer-5\" href=\"/erldoc/docs/#framebufferTextureLayer-5\">framebufferTextureLayer(Target, Attachment, Texture, Level, Layer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Attachment = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Texture = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Layer = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"framebufferTextureLayer-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#framebufferTexture-4\">framebufferTexture/4</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-framebufferTextureFaceARB-5-id532717\"></span><a class=\"title_link\" name=\"framebufferTextureFaceARB-5\" href=\"/erldoc/docs/#framebufferTextureFaceARB-5\">framebufferTextureFaceARB(Target, Attachment, Texture, Level, Face) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Attachment = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Texture = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Face = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"framebufferTextureFaceARB-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#framebufferTexture-4\">framebufferTexture/4</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-flushMappedBufferRange-3-id532773\"></span><a class=\"title_link\" name=\"flushMappedBufferRange-3\" href=\"/erldoc/docs/#flushMappedBufferRange-3\">flushMappedBufferRange(Target, Offset, Length) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Offset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Length = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"flushMappedBufferRange-3\"></a> </p><p>Indicate modifications to a range of a mapped buffer</p> <p><span class=\"code\">gl:flushMappedBufferRange</span> indicates that modifications have been made to a range of a mapped buffer. The buffer must previously have been mapped with the <span class=\"code\">?GL_MAP_FLUSH_EXPLICIT</span> flag. <span class=\"code\">Offset</span> and <span class=\"code\">Length</span> indicate the modified subrange of the mapping, in basic units. The specified subrange to flush is relative to the start of the currently mapped range of the buffer. <span class=\"code\">gl:flushMappedBufferRange</span> may be called multiple times to indicate distinct subranges of the mapping which require flushing.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glFlushMappedBufferRange.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindVertexArray-1-id532845\"></span><a class=\"title_link\" name=\"bindVertexArray-1\" href=\"/erldoc/docs/#bindVertexArray-1\">bindVertexArray(Array) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Array = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindVertexArray-1\"></a> </p><p>Bind a vertex array object</p> <p><span class=\"code\">gl:bindVertexArray</span> binds the vertex array object with name <span class=\"code\">Array</span> . <span class=\"code\">Array</span> is the name of a vertex array object previously returned from a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genVertexArrays-1\">gl:genVertexArrays/1</a></span> , or zero to break the existing vertex array object binding.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindVertexArray.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteVertexArrays-1-id532903\"></span><a class=\"title_link\" name=\"deleteVertexArrays-1\" href=\"/erldoc/docs/#deleteVertexArrays-1\">deleteVertexArrays(Arrays) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Arrays = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteVertexArrays-1\"></a> </p><p>Delete vertex array objects</p> <p><span class=\"code\">gl:deleteVertexArrays</span> deletes <span class=\"code\">N</span> vertex array objects whose names are stored in the array addressed by <span class=\"code\">Arrays</span> . Once a vertex array object is deleted it has no contents and its name is again unused. If a vertex array object that is currently bound is deleted, the binding for that object reverts to zero and the default vertex array becomes current. Unused names in <span class=\"code\">Arrays</span> are silently ignored, as is the value zero.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDeleteVertexArrays.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-genVertexArrays-1-id532961\"></span><a class=\"title_link\" name=\"genVertexArrays-1\" href=\"/erldoc/docs/#genVertexArrays-1\">genVertexArrays(N) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">N = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"genVertexArrays-1\"></a> </p><p>Generate vertex array object names</p> <p><span class=\"code\">gl:genVertexArrays</span> returns <span class=\"code\">N</span> vertex array object names in <span class=\"code\">Arrays</span> . There is no guarantee that the names form a contiguous set of integers; however, it is guaranteed that none of the returned names was in use immediately before the call to <span class=\"code\">gl:genVertexArrays</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGenVertexArrays.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isVertexArray-1-id533017\"></span><a class=\"title_link\" name=\"isVertexArray-1\" href=\"/erldoc/docs/#isVertexArray-1\">isVertexArray(Array) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Array = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isVertexArray-1\"></a> </p><p>Determine if a name corresponds to a vertex array object</p> <p><span class=\"code\">gl:isVertexArray</span> returns <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">Array</span> is currently the name of a renderbuffer object. If <span class=\"code\">Renderbuffer</span> is zero, or if <span class=\"code\">Array</span> is not the name of a renderbuffer object, or if an error occurs, <span class=\"code\">gl:isVertexArray</span> returns <span class=\"code\">?GL_FALSE</span> . If <span class=\"code\">Array</span> is a name returned by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genVertexArrays-1\">gl:genVertexArrays/1</a></span> , by that has not yet been bound through a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#bindVertexArray-1\">gl:bindVertexArray/1</a></span> , then the name is not a vertex array object and <span class=\"code\">gl:isVertexArray</span> returns <span class=\"code\">?GL_FALSE</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glIsVertexArray.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getUniformIndices-2-id533108\"></span><a class=\"title_link\" name=\"getUniformIndices-2\" href=\"/erldoc/docs/#getUniformIndices-2\">getUniformIndices(Program, UniformNames) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">UniformNames = iolist()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getUniformIndices-2\"></a> </p><p>Retrieve the index of a named uniform block</p> <p><span class=\"code\">gl:getUniformIndices</span> retrieves the indices of a number of uniforms within <span class=\"code\">Program</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetUniformIndices.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getActiveUniformsiv-3-id533159\"></span><a class=\"title_link\" name=\"getActiveUniformsiv-3\" href=\"/erldoc/docs/#getActiveUniformsiv-3\">getActiveUniformsiv(Program, UniformIndices, Pname) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">UniformIndices = [integer()]</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getActiveUniformsiv-3\"></a> </p><p>glGetActiveUniforms</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getActiveUniformName-3-id533205\"></span><a class=\"title_link\" name=\"getActiveUniformName-3\" href=\"/erldoc/docs/#getActiveUniformName-3\">getActiveUniformName(Program, UniformIndex, BufSize) -&gt; string()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">UniformIndex = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BufSize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getActiveUniformName-3\"></a> </p><p>Query the name of an active uniform</p> <p><span class=\"code\">gl:getActiveUniformName</span> returns the name of the active uniform at <span class=\"code\">UniformIndex</span> within <span class=\"code\">Program</span> . If <span class=\"code\">UniformName</span> is not NULL, up to <span class=\"code\">BufSize</span> characters (including a nul-terminator) will be written into the array whose address is specified by <span class=\"code\">UniformName</span> . If <span class=\"code\">Length</span> is not NULL, the number of characters that were (or would have been) written into <span class=\"code\">UniformName</span> (not including the nul-terminator) will be placed in the variable whose address is specified in <span class=\"code\">Length</span> . If <span class=\"code\">Length</span> is NULL, no length is returned. The length of the longest uniform name in <span class=\"code\">Program</span> is given by the value of <span class=\"code\">?GL_ACTIVE_UNIFORM_MAX_LENGTH</span>, which can be queried with <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getProgramiv-2\">gl:getProgramiv/2</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetActiveUniformName.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getUniformBlockIndex-2-id533304\"></span><a class=\"title_link\" name=\"getUniformBlockIndex-2\" href=\"/erldoc/docs/#getUniformBlockIndex-2\">getUniformBlockIndex(Program, UniformBlockName) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">UniformBlockName = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getUniformBlockIndex-2\"></a> </p><p>Retrieve the index of a named uniform block</p> <p><span class=\"code\">gl:getUniformBlockIndex</span> retrieves the index of a uniform block within <span class=\"code\">Program</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetUniformBlockIndex.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getActiveUniformBlockiv-4-id533355\"></span><a class=\"title_link\" name=\"getActiveUniformBlockiv-4\" href=\"/erldoc/docs/#getActiveUniformBlockiv-4\">getActiveUniformBlockiv(Program, UniformBlockIndex, Pname, Params) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">UniformBlockIndex = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Params = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getActiveUniformBlockiv-4\"></a> </p><p>Query information about an active uniform block</p> <p><span class=\"code\">gl:getActiveUniformBlockiv</span> retrieves information about an active uniform block within <span class=\"code\">Program</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetActiveUniformBlock.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getActiveUniformBlockName-3-id533420\"></span><a class=\"title_link\" name=\"getActiveUniformBlockName-3\" href=\"/erldoc/docs/#getActiveUniformBlockName-3\">getActiveUniformBlockName(Program, UniformBlockIndex, BufSize) -&gt; string()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">UniformBlockIndex = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BufSize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getActiveUniformBlockName-3\"></a> </p><p>Retrieve the name of an active uniform block</p> <p><span class=\"code\">gl:getActiveUniformBlockName</span> retrieves the name of the active uniform block at <span class=\"code\">UniformBlockIndex</span> within <span class=\"code\">Program</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetActiveUniformBlockName.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformBlockBinding-3-id533478\"></span><a class=\"title_link\" name=\"uniformBlockBinding-3\" href=\"/erldoc/docs/#uniformBlockBinding-3\">uniformBlockBinding(Program, UniformBlockIndex, UniformBlockBinding) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">UniformBlockIndex = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">UniformBlockBinding = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformBlockBinding-3\"></a> </p><p>Assign a binding point to an active uniform block</p> <p>Binding points for active uniform blocks are assigned using <span class=\"code\">gl:uniformBlockBinding</span>. Each of a program&apos;s active uniform blocks has a corresponding uniform buffer binding point. <span class=\"code\">Program</span> is the name of a program object for which the command <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#linkProgram-1\">gl:linkProgram/1</a></span> has been issued in the past.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glUniformBlockBinding.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-copyBufferSubData-5-id533540\"></span><a class=\"title_link\" name=\"copyBufferSubData-5\" href=\"/erldoc/docs/#copyBufferSubData-5\">copyBufferSubData(ReadTarget, WriteTarget, ReadOffset, WriteOffset, Size) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ReadTarget = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">WriteTarget = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ReadOffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">WriteOffset = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"copyBufferSubData-5\"></a> </p><p>Copy part of the data store of a buffer object to the data store of another buffer object</p> <p><span class=\"code\">gl:copyBufferSubData</span> copies part of the data store attached to <span class=\"code\">Readtarget</span> to the data store attached to <span class=\"code\">Writetarget</span> . The number of basic machine units indicated by <span class=\"code\">Size</span> is copied from the source, at offset <span class=\"code\">Readoffset</span> to the destination at <span class=\"code\">Writeoffset</span> , also in basic machine units.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glCopyBufferSubData.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawElementsBaseVertex-5-id533624\"></span><a class=\"title_link\" name=\"drawElementsBaseVertex-5\" href=\"/erldoc/docs/#drawElementsBaseVertex-5\">drawElementsBaseVertex(Mode, Count, Type, Indices, Basevertex) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Indices = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Basevertex = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawElementsBaseVertex-5\"></a> </p><p>Render primitives from array data with a per-element offset</p> <p><span class=\"code\">gl:drawElementsBaseVertex</span> behaves identically to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawElements-4\">gl:drawElements/4</a></span> except that the <span class=\"code\">i</span>th element transferred by the corresponding draw call will be taken from element <span class=\"code\">Indices</span> [i] + <span class=\"code\">Basevertex</span> of each enabled array. If the resulting value is larger than the maximum value representable by <span class=\"code\">Type</span> , it is as if the calculation were upconverted to 32-bit unsigned integers (with wrapping on overflow conditions). The operation is undefined if the sum would be negative.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawElementsBaseVertex.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawRangeElementsBaseVertex-7-id533722\"></span><a class=\"title_link\" name=\"drawRangeElementsBaseVertex-7\" href=\"/erldoc/docs/#drawRangeElementsBaseVertex-7\">drawRangeElementsBaseVertex(Mode, Start, End, Count, Type, Indices, Basevertex) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Start = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">End = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Indices = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Basevertex = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawRangeElementsBaseVertex-7\"></a> </p><p>Render primitives from array data with a per-element offset</p> <p><span class=\"code\">gl:drawRangeElementsBaseVertex</span> is a restricted form of <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawElementsBaseVertex-5\">gl:drawElementsBaseVertex/5</a></span> . <span class=\"code\">Mode</span> , <span class=\"code\">Start</span> , <span class=\"code\">End</span> , <span class=\"code\">Count</span> and <span class=\"code\">Basevertex</span> match the corresponding arguments to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawElementsBaseVertex-5\">gl:drawElementsBaseVertex/5</a></span> , with the additional constraint that all values in the array <span class=\"code\">Indices</span> must lie between <span class=\"code\">Start</span> and <span class=\"code\">End</span> , inclusive, prior to adding <span class=\"code\">Basevertex</span> . Index values lying outside the range [ <span class=\"code\">Start</span> , <span class=\"code\">End</span> ] are treated in the same way as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawElementsBaseVertex-5\">gl:drawElementsBaseVertex/5</a></span> . The <span class=\"code\">i</span> th element transferred by the corresponding draw call will be taken from element <span class=\"code\">Indices</span> [i] + <span class=\"code\">Basevertex</span> of each enabled array. If the resulting value is larger than the maximum value representable by <span class=\"code\">Type</span> , it is as if the calculation were upconverted to 32-bit unsigned integers (with wrapping on overflow conditions). The operation is undefined if the sum would be negative.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawRangeElementsBaseVertex.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawElementsInstancedBaseVertex-6-id533880\"></span><a class=\"title_link\" name=\"drawElementsInstancedBaseVertex-6\" href=\"/erldoc/docs/#drawElementsInstancedBaseVertex-6\">drawElementsInstancedBaseVertex(Mode, Count, Type, Indices, Primcount, Basevertex) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Indices = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Primcount = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Basevertex = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawElementsInstancedBaseVertex-6\"></a> </p><p>Render multiple instances of a set of primitives from array data with a per-element offset</p> <p><span class=\"code\">gl:drawElementsInstancedBaseVertex</span> behaves identically to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawElementsInstanced-5\">gl:drawElementsInstanced/5</a></span> except that the <span class=\"code\">i</span>th element transferred by the corresponding draw call will be taken from element <span class=\"code\">Indices</span> [i] + <span class=\"code\">Basevertex</span> of each enabled array. If the resulting value is larger than the maximum value representable by <span class=\"code\">Type</span> , it is as if the calculation were upconverted to 32-bit unsigned integers (with wrapping on overflow conditions). The operation is undefined if the sum would be negative.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawElementsInstancedBaseVertex.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-provokingVertex-1-id533981\"></span><a class=\"title_link\" name=\"provokingVertex-1\" href=\"/erldoc/docs/#provokingVertex-1\">provokingVertex(Mode) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"provokingVertex-1\"></a> </p><p>Specifiy the vertex to be used as the source of data for flat shaded varyings</p> <p><span class=\"code\">Flatshading</span> a vertex shader varying output means to assign all vetices of the primitive the same value for that output. The vertex from which these values is derived is known as the <span class=\"code\">provoking vertex</span> and <span class=\"code\">gl:provokingVertex</span> specifies which vertex is to be used as the source of data for flat shaded varyings.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glProvokingVertex.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-fenceSync-2-id534040\"></span><a class=\"title_link\" name=\"fenceSync-2\" href=\"/erldoc/docs/#fenceSync-2\">fenceSync(Condition, Flags) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Condition = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Flags = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"fenceSync-2\"></a> </p><p>Create a new sync object and insert it into the GL command stream</p> <p><span class=\"code\">gl:fenceSync</span> creates a new fence sync object, inserts a fence command into the GL command stream and associates it with that sync object, and returns a non-zero name corresponding to the sync object.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glFenceSync.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isSync-1-id534092\"></span><a class=\"title_link\" name=\"isSync-1\" href=\"/erldoc/docs/#isSync-1\">isSync(Sync) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sync = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isSync-1\"></a> </p><p>Determine if a name corresponds to a sync object</p> <p><span class=\"code\">gl:isSync</span> returns <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">Sync</span> is currently the name of a sync object. If <span class=\"code\">Sync</span> is not the name of a sync object, or if an error occurs, <span class=\"code\">gl:isSync</span> returns <span class=\"code\">?GL_FALSE</span>. Note that zero is not the name of a sync object.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glIsSync.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteSync-1-id534156\"></span><a class=\"title_link\" name=\"deleteSync-1\" href=\"/erldoc/docs/#deleteSync-1\">deleteSync(Sync) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sync = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteSync-1\"></a> </p><p>Delete a sync object</p> <p><span class=\"code\">gl:deleteSync</span> deletes the sync object specified by <span class=\"code\">Sync</span> . If the fence command corresponding to the specified sync object has completed, or if no <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#waitSync-3\">gl:waitSync/3</a></span> or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#clientWaitSync-3\">gl:clientWaitSync/3</a></span> commands are blocking on <span class=\"code\">Sync</span> , the object is deleted immediately. Otherwise, <span class=\"code\">Sync</span> is flagged for deletion and will be deleted when it is no longer associated with any fence command and is no longer blocking any <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#waitSync-3\">gl:waitSync/3</a></span> or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#clientWaitSync-3\">gl:clientWaitSync/3</a></span> command. In either case, after <span class=\"code\">gl:deleteSync</span> returns, the name <span class=\"code\">Sync</span> is invalid and can no longer be used to refer to the sync object.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDeleteSync.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clientWaitSync-3-id534244\"></span><a class=\"title_link\" name=\"clientWaitSync-3\" href=\"/erldoc/docs/#clientWaitSync-3\">clientWaitSync(Sync, Flags, Timeout) -&gt; enum()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sync = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Flags = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Timeout = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clientWaitSync-3\"></a> </p><p>Block and wait for a sync object to become signaled</p> <p><span class=\"code\">gl:clientWaitSync</span> causes the client to block and wait for the sync object specified by <span class=\"code\">Sync</span> to become signaled. If <span class=\"code\">Sync</span> is signaled when <span class=\"code\">gl:clientWaitSync</span> is called, <span class=\"code\">gl:clientWaitSync</span> returns immediately, otherwise it will block and wait for up to <span class=\"code\">Timeout</span> nanoseconds for <span class=\"code\">Sync</span> to become signaled.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glClientWaitSync.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-waitSync-3-id534321\"></span><a class=\"title_link\" name=\"waitSync-3\" href=\"/erldoc/docs/#waitSync-3\">waitSync(Sync, Flags, Timeout) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sync = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Flags = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Timeout = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"waitSync-3\"></a> </p><p>Instruct the GL server to block until the specified sync object becomes signaled</p> <p><span class=\"code\">gl:waitSync</span> causes the GL server to block and wait until <span class=\"code\">Sync</span> becomes signaled. <span class=\"code\">Sync</span> is the name of an existing sync object upon which to wait. <span class=\"code\">Flags</span> and <span class=\"code\">Timeout</span> are currently not used and must be set to zero and the special value <span class=\"code\">?GL_TIMEOUT_IGNORED</span> , respectively</p> <p><span class=\"code\">Flags</span> and <span class=\"code\">Timeout</span> are placeholders for anticipated future extensions of sync object capabilities. They must have these reserved values in order that existing code calling <span class=\"code\">gl:waitSync</span> operate properly in the presence of such extensions.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glWaitSync.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getInteger64v-1-id534405\"></span><a class=\"title_link\" name=\"getInteger64v-1\" href=\"/erldoc/docs/#getInteger64v-1\">getInteger64v(Pname) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getInteger64v-1\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getBooleanv-1\">getBooleanv/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getSynciv-3-id534442\"></span><a class=\"title_link\" name=\"getSynciv-3\" href=\"/erldoc/docs/#getSynciv-3\">getSynciv(Sync, Pname, BufSize) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sync = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BufSize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getSynciv-3\"></a> </p><p>Query the properties of a sync object</p> <p><span class=\"code\">gl:getSynciv</span> retrieves properties of a sync object. <span class=\"code\">Sync</span> specifies the name of the sync object whose properties to retrieve.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetSync.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texImage2DMultisample-6-id534499\"></span><a class=\"title_link\" name=\"texImage2DMultisample-6\" href=\"/erldoc/docs/#texImage2DMultisample-6\">texImage2DMultisample(Target, Samples, Internalformat, Width, Height, Fixedsamplelocations) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Samples = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Fixedsamplelocations = 0 | 1</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texImage2DMultisample-6\"></a> </p><p>Establish the data storage, format, dimensions, and number of samples of a multisample texture&apos;s image</p> <p><span class=\"code\">gl:texImage2DMultisample</span> establishes the data storage, format, dimensions and number of samples of a multisample texture&apos;s image.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glTexImage2DMultisample.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texImage3DMultisample-7-id534562\"></span><a class=\"title_link\" name=\"texImage3DMultisample-7\" href=\"/erldoc/docs/#texImage3DMultisample-7\">texImage3DMultisample(Target, Samples, Internalformat, Width, Height, Depth, Fixedsamplelocations) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Samples = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Depth = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Fixedsamplelocations = 0 | 1</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texImage3DMultisample-7\"></a> </p><p>Establish the data storage, format, dimensions, and number of samples of a multisample texture&apos;s image</p> <p><span class=\"code\">gl:texImage3DMultisample</span> establishes the data storage, format, dimensions and number of samples of a multisample texture&apos;s image.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glTexImage3DMultisample.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getMultisamplefv-2-id534628\"></span><a class=\"title_link\" name=\"getMultisamplefv-2\" href=\"/erldoc/docs/#getMultisamplefv-2\">getMultisamplefv(Pname, Index) -&gt; {float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getMultisamplefv-2\"></a> </p><p>Retrieve the location of a sample</p> <p><span class=\"code\">gl:getMultisamplefv</span> queries the location of a given sample. <span class=\"code\">Pname</span> specifies the sample parameter to retrieve and must be <span class=\"code\">?GL_SAMPLE_POSITION</span>. <span class=\"code\">Index</span> corresponds to the sample for which the location should be returned. The sample location is returned as two floating-point values in <span class=\"code\">Val[0]</span> and <span class=\"code\">Val[1]</span> , each between 0 and 1, corresponding to the <span class=\"code\">X</span> and <span class=\"code\">Y</span> locations respectively in the GL pixel space of that sample. (0.5, 0.5) this corresponds to the pixel center. <span class=\"code\">Index</span> must be between zero and the value of <span class=\"code\">?GL_SAMPLES</span> - 1.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetMultisample.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-sampleMaski-2-id534715\"></span><a class=\"title_link\" name=\"sampleMaski-2\" href=\"/erldoc/docs/#sampleMaski-2\">sampleMaski(Index, Mask) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mask = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"sampleMaski-2\"></a> </p><p>Set the value of a sub-word of the sample mask</p> <p><span class=\"code\">gl:sampleMaski</span> sets one 32-bit sub-word of the multi-word sample mask, <span class=\"code\">?GL_SAMPLE_MASK_VALUE</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glSampleMaski.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-namedStringARB-3-id534766\"></span><a class=\"title_link\" name=\"namedStringARB-3\" href=\"/erldoc/docs/#namedStringARB-3\">namedStringARB(Type, Name, String) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">String = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"namedStringARB-3\"></a> </p><p>glNamedStringARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteNamedStringARB-1-id534812\"></span><a class=\"title_link\" name=\"deleteNamedStringARB-1\" href=\"/erldoc/docs/#deleteNamedStringARB-1\">deleteNamedStringARB(Name) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteNamedStringARB-1\"></a> </p><p>glDeleteNamedStringARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-compileShaderIncludeARB-2-id534849\"></span><a class=\"title_link\" name=\"compileShaderIncludeARB-2\" href=\"/erldoc/docs/#compileShaderIncludeARB-2\">compileShaderIncludeARB(Shader, Path) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shader = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Path = iolist()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"compileShaderIncludeARB-2\"></a> </p><p>glCompileShaderIncludeARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isNamedStringARB-1-id534889\"></span><a class=\"title_link\" name=\"isNamedStringARB-1\" href=\"/erldoc/docs/#isNamedStringARB-1\">isNamedStringARB(Name) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isNamedStringARB-1\"></a> </p><p>glIsNamedStringARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getNamedStringARB-2-id534926\"></span><a class=\"title_link\" name=\"getNamedStringARB-2\" href=\"/erldoc/docs/#getNamedStringARB-2\">getNamedStringARB(Name, BufSize) -&gt; string()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BufSize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getNamedStringARB-2\"></a> </p><p>glGetNamedStringARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getNamedStringivARB-2-id534965\"></span><a class=\"title_link\" name=\"getNamedStringivARB-2\" href=\"/erldoc/docs/#getNamedStringivARB-2\">getNamedStringivARB(Name, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getNamedStringivARB-2\"></a> </p><p>glGetNamedStringARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindFragDataLocationIndexed-4-id535010\"></span><a class=\"title_link\" name=\"bindFragDataLocationIndexed-4\" href=\"/erldoc/docs/#bindFragDataLocationIndexed-4\">bindFragDataLocationIndexed(Program, ColorNumber, Index, Name) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ColorNumber = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindFragDataLocationIndexed-4\"></a> </p><p>glBindFragDataLocationIndexe</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getFragDataIndex-2-id535054\"></span><a class=\"title_link\" name=\"getFragDataIndex-2\" href=\"/erldoc/docs/#getFragDataIndex-2\">getFragDataIndex(Program, Name) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getFragDataIndex-2\"></a> </p><p>Query the bindings of color indices to user-defined varying out variables</p> <p><span class=\"code\">gl:getFragDataIndex</span> returns the index of the fragment color to which the variable <span class=\"code\">Name</span> was bound when the program object <span class=\"code\">Program</span> was last linked. If <span class=\"code\">Name</span> is not a varying out variable of <span class=\"code\">Program</span> , or if an error occurs, -1 will be returned.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetFragDataIndex.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-genSamplers-1-id535117\"></span><a class=\"title_link\" name=\"genSamplers-1\" href=\"/erldoc/docs/#genSamplers-1\">genSamplers(Count) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"genSamplers-1\"></a> </p><p>Generate sampler object names</p> <p><span class=\"code\">gl:genSamplers</span> returns <span class=\"code\">N</span> sampler object names in <span class=\"code\">Samplers</span> . There is no guarantee that the names form a contiguous set of integers; however, it is guaranteed that none of the returned names was in use immediately before the call to <span class=\"code\">gl:genSamplers</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGenSamplers.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteSamplers-1-id535173\"></span><a class=\"title_link\" name=\"deleteSamplers-1\" href=\"/erldoc/docs/#deleteSamplers-1\">deleteSamplers(Samplers) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Samplers = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteSamplers-1\"></a> </p><p>Delete named sampler objects</p> <p><span class=\"code\">gl:deleteSamplers</span> deletes <span class=\"code\">N</span> sampler objects named by the elements of the array <span class=\"code\">Ids</span> . After a sampler object is deleted, its name is again unused. If a sampler object that is currently bound to a sampler unit is deleted, it is as though <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#bindSampler-2\">gl:bindSampler/2</a></span> is called with unit set to the unit the sampler is bound to and sampler zero. Unused names in samplers are silently ignored, as is the reserved name zero.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDeleteSamplers.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isSampler-1-id535233\"></span><a class=\"title_link\" name=\"isSampler-1\" href=\"/erldoc/docs/#isSampler-1\">isSampler(Sampler) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sampler = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isSampler-1\"></a> </p><p>Determine if a name corresponds to a sampler object</p> <p><span class=\"code\">gl:isSampler</span> returns <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">Id</span> is currently the name of a sampler object. If <span class=\"code\">Id</span> is zero, or is a non-zero value that is not currently the name of a sampler object, or if an error occurs, <span class=\"code\">gl:isSampler</span> returns <span class=\"code\">?GL_FALSE</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glIsSampler.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindSampler-2-id535297\"></span><a class=\"title_link\" name=\"bindSampler-2\" href=\"/erldoc/docs/#bindSampler-2\">bindSampler(Unit, Sampler) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Unit = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sampler = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindSampler-2\"></a> </p><p>Bind a named sampler to a texturing target</p> <p><span class=\"code\">gl:bindSampler</span> binds <span class=\"code\">Sampler</span> to the texture unit at index <span class=\"code\">Unit</span> . <span class=\"code\">Sampler</span> must be zero or the name of a sampler object previously returned from a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genSamplers-1\">gl:genSamplers/1</a></span> . <span class=\"code\">Unit</span> must be less than the value of <span class=\"code\">?GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindSampler.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-samplerParameteri-3-id535369\"></span><a class=\"title_link\" name=\"samplerParameteri-3\" href=\"/erldoc/docs/#samplerParameteri-3\">samplerParameteri(Sampler, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sampler = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"samplerParameteri-3\"></a> </p><p>Set sampler parameters</p> <p><span class=\"code\">gl:samplerParameter</span> assigns the value or values in <span class=\"code\">Params</span> to the sampler parameter specified as <span class=\"code\">Pname</span> . <span class=\"code\">Sampler</span> specifies the sampler object to be modified, and must be the name of a sampler object previously returned from a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genSamplers-1\">gl:genSamplers/1</a></span> . The following symbols are accepted in <span class=\"code\">Pname</span> :</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glSamplerParameter.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-samplerParameteriv-3-id535444\"></span><a class=\"title_link\" name=\"samplerParameteriv-3\" href=\"/erldoc/docs/#samplerParameteriv-3\">samplerParameteriv(Sampler, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sampler = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"samplerParameteriv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#samplerParameteri-3\">samplerParameteri/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-samplerParameterf-3-id535486\"></span><a class=\"title_link\" name=\"samplerParameterf-3\" href=\"/erldoc/docs/#samplerParameterf-3\">samplerParameterf(Sampler, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sampler = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"samplerParameterf-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#samplerParameteri-3\">samplerParameteri/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-samplerParameterfv-3-id535527\"></span><a class=\"title_link\" name=\"samplerParameterfv-3\" href=\"/erldoc/docs/#samplerParameterfv-3\">samplerParameterfv(Sampler, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sampler = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = [float()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"samplerParameterfv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#samplerParameteri-3\">samplerParameteri/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-samplerParameterIiv-3-id535568\"></span><a class=\"title_link\" name=\"samplerParameterIiv-3\" href=\"/erldoc/docs/#samplerParameterIiv-3\">samplerParameterIiv(Sampler, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sampler = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"samplerParameterIiv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#samplerParameteri-3\">samplerParameteri/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-samplerParameterIuiv-3-id535610\"></span><a class=\"title_link\" name=\"samplerParameterIuiv-3\" href=\"/erldoc/docs/#samplerParameterIuiv-3\">samplerParameterIuiv(Sampler, Pname, Param) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sampler = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Param = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"samplerParameterIuiv-3\"></a> </p><p>glSamplerParameterI</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getSamplerParameteriv-2-id535656\"></span><a class=\"title_link\" name=\"getSamplerParameteriv-2\" href=\"/erldoc/docs/#getSamplerParameteriv-2\">getSamplerParameteriv(Sampler, Pname) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sampler = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getSamplerParameteriv-2\"></a> </p><p>Return sampler parameter values</p> <p><span class=\"code\">gl:getSamplerParameter</span> returns in <span class=\"code\">Params</span> the value or values of the sampler parameter specified as <span class=\"code\">Pname</span> . <span class=\"code\">Sampler</span> defines the target sampler, and must be the name of an existing sampler object, returned from a previous call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genSamplers-1\">gl:genSamplers/1</a></span> . <span class=\"code\">Pname</span> accepts the same symbols as <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#samplerParameteri-3\">gl:samplerParameteri/3</a></span> , with the same interpretations:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetSamplerParameter.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getSamplerParameterIiv-2-id535735\"></span><a class=\"title_link\" name=\"getSamplerParameterIiv-2\" href=\"/erldoc/docs/#getSamplerParameterIiv-2\">getSamplerParameterIiv(Sampler, Pname) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sampler = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getSamplerParameterIiv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getSamplerParameteriv-2\">getSamplerParameteriv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getSamplerParameterfv-2-id535774\"></span><a class=\"title_link\" name=\"getSamplerParameterfv-2\" href=\"/erldoc/docs/#getSamplerParameterfv-2\">getSamplerParameterfv(Sampler, Pname) -&gt; [float()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sampler = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getSamplerParameterfv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getSamplerParameteriv-2\">getSamplerParameteriv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getSamplerParameterIuiv-2-id535814\"></span><a class=\"title_link\" name=\"getSamplerParameterIuiv-2\" href=\"/erldoc/docs/#getSamplerParameterIuiv-2\">getSamplerParameterIuiv(Sampler, Pname) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Sampler = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getSamplerParameterIuiv-2\"></a> </p><p>glGetSamplerParameterI</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-queryCounter-2-id535858\"></span><a class=\"title_link\" name=\"queryCounter-2\" href=\"/erldoc/docs/#queryCounter-2\">queryCounter(Id, Target) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"queryCounter-2\"></a> </p><p>Record the GL time into a query object after all previous commands have reached the GL server but have not yet necessarily executed.</p> <p><span class=\"code\">gl:queryCounter</span> causes the GL to record the current time into the query object named <span class=\"code\">Id</span> . <span class=\"code\">Target</span> must be <span class=\"code\">?GL_TIMESTAMP</span>. The time is recorded after all previous commands on the GL client and server state and the framebuffer have been fully realized. When the time is recorded, the query result for that object is marked available. <span class=\"code\">gl:queryCounter</span> timer queries can be used within a <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#beginQuery-2\">gl:beginQuery/2</a></span> / <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#beginQuery-2\">gl:beginQuery/2</a></span> block where the target is <span class=\"code\">?GL_TIME_ELAPSED</span> and it does not affect the result of that query object.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glQueryCounter.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getQueryObjecti64v-2-id535944\"></span><a class=\"title_link\" name=\"getQueryObjecti64v-2\" href=\"/erldoc/docs/#getQueryObjecti64v-2\">getQueryObjecti64v(Id, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getQueryObjecti64v-2\"></a> </p><p>glGetQueryObjecti64v</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getQueryObjectui64v-2-id535988\"></span><a class=\"title_link\" name=\"getQueryObjectui64v-2\" href=\"/erldoc/docs/#getQueryObjectui64v-2\">getQueryObjectui64v(Id, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getQueryObjectui64v-2\"></a> </p><p>glGetQueryObjectui64v</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawArraysIndirect-2-id536032\"></span><a class=\"title_link\" name=\"drawArraysIndirect-2\" href=\"/erldoc/docs/#drawArraysIndirect-2\">drawArraysIndirect(Mode, Indirect) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Indirect = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawArraysIndirect-2\"></a> </p><p>Render primitives from array data, taking parameters from memory</p> <p><span class=\"code\">gl:drawArraysIndirect</span> specifies multiple geometric primitives with very few subroutine calls. <span class=\"code\">gl:drawArraysIndirect</span> behaves similarly to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawArraysInstancedBaseInstance-5\">gl:drawArraysInstancedBaseInstance/5</a></span> , execept that the parameters to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawArraysInstancedBaseInstance-5\">gl:drawArraysInstancedBaseInstance/5</a></span> are stored in memory at the address given by <span class=\"code\">Indirect</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawArraysIndirect.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawElementsIndirect-3-id536115\"></span><a class=\"title_link\" name=\"drawElementsIndirect-3\" href=\"/erldoc/docs/#drawElementsIndirect-3\">drawElementsIndirect(Mode, Type, Indirect) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Indirect = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawElementsIndirect-3\"></a> </p><p>Render indexed primitives from array data, taking parameters from memory</p> <p><span class=\"code\">gl:drawElementsIndirect</span> specifies multiple indexed geometric primitives with very few subroutine calls. <span class=\"code\">gl:drawElementsIndirect</span> behaves similarly to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawElementsInstancedBaseVertexBaseInstance-7\">gl:drawElementsInstancedBaseVertexBaseInstance/7</a></span> , execpt that the parameters to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawElementsInstancedBaseVertexBaseInstance-7\">gl:drawElementsInstancedBaseVertexBaseInstance/7</a></span> are stored in memory at the address given by <span class=\"code\">Indirect</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawElementsIndirect.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform1d-2-id536206\"></span><a class=\"title_link\" name=\"uniform1d-2\" href=\"/erldoc/docs/#uniform1d-2\">uniform1d(Location, X) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform1d-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform2d-3-id536240\"></span><a class=\"title_link\" name=\"uniform2d-3\" href=\"/erldoc/docs/#uniform2d-3\">uniform2d(Location, X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform2d-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform3d-4-id536276\"></span><a class=\"title_link\" name=\"uniform3d-4\" href=\"/erldoc/docs/#uniform3d-4\">uniform3d(Location, X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform3d-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform4d-5-id536315\"></span><a class=\"title_link\" name=\"uniform4d-5\" href=\"/erldoc/docs/#uniform4d-5\">uniform4d(Location, X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform4d-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform1dv-2-id536356\"></span><a class=\"title_link\" name=\"uniform1dv-2\" href=\"/erldoc/docs/#uniform1dv-2\">uniform1dv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [float()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform1dv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform2dv-2-id536390\"></span><a class=\"title_link\" name=\"uniform2dv-2\" href=\"/erldoc/docs/#uniform2dv-2\">uniform2dv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform2dv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform3dv-2-id536424\"></span><a class=\"title_link\" name=\"uniform3dv-2\" href=\"/erldoc/docs/#uniform3dv-2\">uniform3dv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform3dv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniform4dv-2-id536458\"></span><a class=\"title_link\" name=\"uniform4dv-2\" href=\"/erldoc/docs/#uniform4dv-2\">uniform4dv(Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniform4dv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix2dv-3-id536493\"></span><a class=\"title_link\" name=\"uniformMatrix2dv-3\" href=\"/erldoc/docs/#uniformMatrix2dv-3\">uniformMatrix2dv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix2dv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix3dv-3-id536529\"></span><a class=\"title_link\" name=\"uniformMatrix3dv-3\" href=\"/erldoc/docs/#uniformMatrix3dv-3\">uniformMatrix3dv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix3dv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix4dv-3-id536567\"></span><a class=\"title_link\" name=\"uniformMatrix4dv-3\" href=\"/erldoc/docs/#uniformMatrix4dv-3\">uniformMatrix4dv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix4dv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix2x3dv-3-id536604\"></span><a class=\"title_link\" name=\"uniformMatrix2x3dv-3\" href=\"/erldoc/docs/#uniformMatrix2x3dv-3\">uniformMatrix2x3dv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix2x3dv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix2x4dv-3-id536641\"></span><a class=\"title_link\" name=\"uniformMatrix2x4dv-3\" href=\"/erldoc/docs/#uniformMatrix2x4dv-3\">uniformMatrix2x4dv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix2x4dv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix3x2dv-3-id536678\"></span><a class=\"title_link\" name=\"uniformMatrix3x2dv-3\" href=\"/erldoc/docs/#uniformMatrix3x2dv-3\">uniformMatrix3x2dv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix3x2dv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix3x4dv-3-id536715\"></span><a class=\"title_link\" name=\"uniformMatrix3x4dv-3\" href=\"/erldoc/docs/#uniformMatrix3x4dv-3\">uniformMatrix3x4dv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix3x4dv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix4x2dv-3-id536753\"></span><a class=\"title_link\" name=\"uniformMatrix4x2dv-3\" href=\"/erldoc/docs/#uniformMatrix4x2dv-3\">uniformMatrix4x2dv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix4x2dv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformMatrix4x3dv-3-id536790\"></span><a class=\"title_link\" name=\"uniformMatrix4x3dv-3\" href=\"/erldoc/docs/#uniformMatrix4x3dv-3\">uniformMatrix4x3dv(Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformMatrix4x3dv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#uniform1f-2\">uniform1f/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getUniformdv-2-id536827\"></span><a class=\"title_link\" name=\"getUniformdv-2\" href=\"/erldoc/docs/#getUniformdv-2\">getUniformdv(Program, Location) -&gt; matrix()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getUniformdv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getUniformfv-2\">getUniformfv/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getSubroutineUniformLocation-3-id536866\"></span><a class=\"title_link\" name=\"getSubroutineUniformLocation-3\" href=\"/erldoc/docs/#getSubroutineUniformLocation-3\">getSubroutineUniformLocation(Program, Shadertype, Name) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shadertype = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getSubroutineUniformLocation-3\"></a> </p><p>Retrieve the location of a subroutine uniform of a given shader stage within a program</p> <p><span class=\"code\">gl:getSubroutineUniformLocation</span> returns the location of the subroutine uniform variable <span class=\"code\">Name</span> in the shader stage of type <span class=\"code\">Shadertype</span> attached to <span class=\"code\">Program</span> , with behavior otherwise identical to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getUniformLocation-2\">gl:getUniformLocation/2</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetSubroutineUniformLocation.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getSubroutineIndex-3-id536938\"></span><a class=\"title_link\" name=\"getSubroutineIndex-3\" href=\"/erldoc/docs/#getSubroutineIndex-3\">getSubroutineIndex(Program, Shadertype, Name) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shadertype = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getSubroutineIndex-3\"></a> </p><p>Retrieve the index of a subroutine uniform of a given shader stage within a program</p> <p><span class=\"code\">gl:getSubroutineIndex</span> returns the index of a subroutine uniform within a shader stage attached to a program object. <span class=\"code\">Program</span> contains the name of the program to which the shader is attached. <span class=\"code\">Shadertype</span> specifies the stage from which to query shader subroutine index. <span class=\"code\">Name</span> contains the null-terminated name of the subroutine uniform whose name to query.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetSubroutineIndex.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getActiveSubroutineUniformName-4-id537006\"></span><a class=\"title_link\" name=\"getActiveSubroutineUniformName-4\" href=\"/erldoc/docs/#getActiveSubroutineUniformName-4\">getActiveSubroutineUniformName(Program, Shadertype, Index, Bufsize) -&gt; string()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shadertype = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bufsize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getActiveSubroutineUniformName-4\"></a> </p><p>Query the name of an active shader subroutine uniform</p> <p><span class=\"code\">gl:getActiveSubroutineUniformName</span> retrieves the name of an active shader subroutine uniform. <span class=\"code\">Program</span> contains the name of the program containing the uniform. <span class=\"code\">Shadertype</span> specifies the stage for which which the uniform location, given by <span class=\"code\">Index</span> , is valid. <span class=\"code\">Index</span> must be between zero and the value of <span class=\"code\">?GL_ACTIVE_SUBROUTINE_UNIFORMS</span> minus one for the shader stage.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetActiveSubroutineUniformName.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getActiveSubroutineName-4-id537083\"></span><a class=\"title_link\" name=\"getActiveSubroutineName-4\" href=\"/erldoc/docs/#getActiveSubroutineName-4\">getActiveSubroutineName(Program, Shadertype, Index, Bufsize) -&gt; string()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shadertype = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bufsize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getActiveSubroutineName-4\"></a> </p><p>Query the name of an active shader subroutine</p> <p><span class=\"code\">gl:getActiveSubroutineName</span> queries the name of an active shader subroutine uniform from the program object given in <span class=\"code\">Program</span> . <span class=\"code\">Index</span> specifies the index of the shader subroutine uniform within the shader stage given by <span class=\"code\">Stage</span> , and must between zero and the value of <span class=\"code\">?GL_ACTIVE_SUBROUTINES</span> minus one for the shader stage.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetActiveSubroutineName.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-uniformSubroutinesuiv-2-id537156\"></span><a class=\"title_link\" name=\"uniformSubroutinesuiv-2\" href=\"/erldoc/docs/#uniformSubroutinesuiv-2\">uniformSubroutinesuiv(Shadertype, Indices) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shadertype = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Indices = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"uniformSubroutinesuiv-2\"></a> </p><p>Load active subroutine uniforms</p> <p><span class=\"code\">gl:uniformSubroutines</span> loads all active subroutine uniforms for shader stage <span class=\"code\">Shadertype</span> of the current program with subroutine indices from <span class=\"code\">Indices</span> , storing <span class=\"code\">Indices[i]</span> into the uniform at location <span class=\"code\">I</span> . <span class=\"code\">Count</span> must be equal to the value of <span class=\"code\">?GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS</span> for the program currently in use at shader stage <span class=\"code\">Shadertype</span> . Furthermore, all values in <span class=\"code\">Indices</span> must be less than the value of <span class=\"code\">?GL_ACTIVE_SUBROUTINES</span> for the shader stage.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glUniformSubroutines.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getUniformSubroutineuiv-2-id537242\"></span><a class=\"title_link\" name=\"getUniformSubroutineuiv-2\" href=\"/erldoc/docs/#getUniformSubroutineuiv-2\">getUniformSubroutineuiv(Shadertype, Location) -&gt; {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shadertype = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getUniformSubroutineuiv-2\"></a> </p><p>Retrieve the value of a subroutine uniform of a given shader stage of the current program</p> <p><span class=\"code\">gl:getUniformSubroutine</span> retrieves the value of the subroutine uniform at location <span class=\"code\">Location</span> for shader stage <span class=\"code\">Shadertype</span> of the current program. <span class=\"code\">Location</span> must be less than the value of <span class=\"code\">?GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS</span> for the shader currently in use at shader stage <span class=\"code\">Shadertype</span> . The value of the subroutine uniform is returned in <span class=\"code\">Values</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetUniformSubroutine.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getProgramStageiv-3-id537319\"></span><a class=\"title_link\" name=\"getProgramStageiv-3\" href=\"/erldoc/docs/#getProgramStageiv-3\">getProgramStageiv(Program, Shadertype, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shadertype = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getProgramStageiv-3\"></a> </p><p>Retrieve properties of a program object corresponding to a specified shader stage</p> <p><span class=\"code\">gl:getProgramStage</span> queries a parameter of a shader stage attached to a program object. <span class=\"code\">Program</span> contains the name of the program to which the shader is attached. <span class=\"code\">Shadertype</span> specifies the stage from which to query the parameter. <span class=\"code\">Pname</span> specifies which parameter should be queried. The value or values of the parameter to be queried is returned in the variable whose address is given in <span class=\"code\">Values</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetProgramStage.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-patchParameteri-2-id537396\"></span><a class=\"title_link\" name=\"patchParameteri-2\" href=\"/erldoc/docs/#patchParameteri-2\">patchParameteri(Pname, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"patchParameteri-2\"></a> </p><p>Specifies the parameters for patch primitives</p> <p><span class=\"code\">gl:patchParameter</span> specifies the parameters that will be used for patch primitives. <span class=\"code\">Pname</span> specifies the parameter to modify and must be either <span class=\"code\">?GL_PATCH_VERTICES</span>, <span class=\"code\">?GL_PATCH_DEFAULT_OUTER_LEVEL</span> or <span class=\"code\">?GL_PATCH_DEFAULT_INNER_LEVEL</span>. For <span class=\"code\">gl:patchParameteri</span>, <span class=\"code\">Value</span> specifies the new value for the parameter specified by <span class=\"code\">Pname</span> . For <span class=\"code\">gl:patchParameterfv</span>, <span class=\"code\">Values</span> specifies the address of an array containing the new values for the parameter specified by <span class=\"code\">Pname</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glPatchParameter.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-patchParameterfv-2-id537486\"></span><a class=\"title_link\" name=\"patchParameterfv-2\" href=\"/erldoc/docs/#patchParameterfv-2\">patchParameterfv(Pname, Values) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Values = [float()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"patchParameterfv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#patchParameteri-2\">patchParameteri/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindTransformFeedback-2-id537525\"></span><a class=\"title_link\" name=\"bindTransformFeedback-2\" href=\"/erldoc/docs/#bindTransformFeedback-2\">bindTransformFeedback(Target, Id) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindTransformFeedback-2\"></a> </p><p>Bind a transform feedback object</p> <p><span class=\"code\">gl:bindTransformFeedback</span> binds the transform feedback object with name <span class=\"code\">Id</span> to the current GL state. <span class=\"code\">Id</span> must be a name previously returned from a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genTransformFeedbacks-1\">gl:genTransformFeedbacks/1</a></span> . If <span class=\"code\">Id</span> has not previously been bound, a new transform feedback object with name <span class=\"code\">Id</span> and initialized with with the default transform state vector is created.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindTransformFeedback.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteTransformFeedbacks-1-id537599\"></span><a class=\"title_link\" name=\"deleteTransformFeedbacks-1\" href=\"/erldoc/docs/#deleteTransformFeedbacks-1\">deleteTransformFeedbacks(Ids) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ids = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteTransformFeedbacks-1\"></a> </p><p>Delete transform feedback objects</p> <p><span class=\"code\">gl:deleteTransformFeedbacks</span> deletes the <span class=\"code\">N</span> transform feedback objects whose names are stored in the array <span class=\"code\">Ids</span> . Unused names in <span class=\"code\">Ids</span> are ignored, as is the name zero. After a transform feedback object is deleted, its name is again unused and it has no contents. If an active transform feedback object is deleted, its name immediately becomes unused, but the underlying object is not deleted until it is no longer active.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDeleteTransformFeedbacks.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-genTransformFeedbacks-1-id537656\"></span><a class=\"title_link\" name=\"genTransformFeedbacks-1\" href=\"/erldoc/docs/#genTransformFeedbacks-1\">genTransformFeedbacks(N) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">N = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"genTransformFeedbacks-1\"></a> </p><p>Reserve transform feedback object names</p> <p><span class=\"code\">gl:genTransformFeedbacks</span> returns <span class=\"code\">N</span> previously unused transform feedback object names in <span class=\"code\">Ids</span> . These names are marked as used, for the purposes of <span class=\"code\">gl:genTransformFeedbacks</span> only, but they acquire transform feedback state only when they are first bound.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGenTransformFeedbacks.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isTransformFeedback-1-id537713\"></span><a class=\"title_link\" name=\"isTransformFeedback-1\" href=\"/erldoc/docs/#isTransformFeedback-1\">isTransformFeedback(Id) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isTransformFeedback-1\"></a> </p><p>Determine if a name corresponds to a transform feedback object</p> <p><span class=\"code\">gl:isTransformFeedback</span> returns <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">Id</span> is currently the name of a transform feedback object. If <span class=\"code\">Id</span> is zero, or if <span class=\"code\">?id</span> is not the name of a transform feedback object, or if an error occurs, <span class=\"code\">gl:isTransformFeedback</span> returns <span class=\"code\">?GL_FALSE</span>. If <span class=\"code\">Id</span> is a name returned by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genTransformFeedbacks-1\">gl:genTransformFeedbacks/1</a></span> , but that has not yet been bound through a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#bindTransformFeedback-2\">gl:bindTransformFeedback/2</a></span> , then the name is not a transform feedback object and <span class=\"code\">gl:isTransformFeedback</span> returns <span class=\"code\">?GL_FALSE</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glIsTransformFeedback.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-pauseTransformFeedback-0-id537805\"></span><a class=\"title_link\" name=\"pauseTransformFeedback-0\" href=\"/erldoc/docs/#pauseTransformFeedback-0\">pauseTransformFeedback() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"pauseTransformFeedback-0\"></a> </p><p>Pause transform feedback operations</p> <p><span class=\"code\">gl:pauseTransformFeedback</span> pauses transform feedback operations on the currently active transform feedback object. When transform feedback operations are paused, transform feedback is still considered active and changing most transform feedback state related to the object results in an error. However, a new transform feedback object may be bound while transform feedback is paused.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glPauseTransformFeedback.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-resumeTransformFeedback-0-id537846\"></span><a class=\"title_link\" name=\"resumeTransformFeedback-0\" href=\"/erldoc/docs/#resumeTransformFeedback-0\">resumeTransformFeedback() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"resumeTransformFeedback-0\"></a> </p><p>Resume transform feedback operations</p> <p><span class=\"code\">gl:resumeTransformFeedback</span> resumes transform feedback operations on the currently active transform feedback object. When transform feedback operations are paused, transform feedback is still considered active and changing most transform feedback state related to the object results in an error. However, a new transform feedback object may be bound while transform feedback is paused.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glResumeTransformFeedback.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawTransformFeedback-2-id537887\"></span><a class=\"title_link\" name=\"drawTransformFeedback-2\" href=\"/erldoc/docs/#drawTransformFeedback-2\">drawTransformFeedback(Mode, Id) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawTransformFeedback-2\"></a> </p><p>Render primitives using a count derived from a transform feedback object</p> <p><span class=\"code\">gl:drawTransformFeedback</span> draws primitives of a type specified by <span class=\"code\">Mode</span> using a count retrieved from the transform feedback specified by <span class=\"code\">Id</span> . Calling <span class=\"code\">gl:drawTransformFeedback</span> is equivalent to calling <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawArrays-3\">gl:drawArrays/3</a></span> with <span class=\"code\">Mode</span> as specified, <span class=\"code\">First</span> set to zero, and <span class=\"code\">Count</span> set to the number of vertices captured on vertex stream zero the last time transform feedback was active on the transform feedback object named by <span class=\"code\">Id</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawTransformFeedback.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawTransformFeedbackStream-3-id537972\"></span><a class=\"title_link\" name=\"drawTransformFeedbackStream-3\" href=\"/erldoc/docs/#drawTransformFeedbackStream-3\">drawTransformFeedbackStream(Mode, Id, Stream) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stream = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawTransformFeedbackStream-3\"></a> </p><p>Render primitives using a count derived from a specifed stream of a transform feedback object</p> <p><span class=\"code\">gl:drawTransformFeedbackStream</span> draws primitives of a type specified by <span class=\"code\">Mode</span> using a count retrieved from the transform feedback stream specified by <span class=\"code\">Stream</span> of the transform feedback object specified by <span class=\"code\">Id</span> . Calling <span class=\"code\">gl:drawTransformFeedbackStream</span> is equivalent to calling <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawArrays-3\">gl:drawArrays/3</a></span> with <span class=\"code\">Mode</span> as specified, <span class=\"code\">First</span> set to zero, and <span class=\"code\">Count</span> set to the number of vertices captured on vertex stream <span class=\"code\">Stream</span> the last time transform feedback was active on the transform feedback object named by <span class=\"code\">Id</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawTransformFeedbackStream.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-beginQueryIndexed-3-id538069\"></span><a class=\"title_link\" name=\"beginQueryIndexed-3\" href=\"/erldoc/docs/#beginQueryIndexed-3\">beginQueryIndexed(Target, Index, Id) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"beginQueryIndexed-3\"></a> </p><p>glBeginQueryIndexe</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-endQueryIndexed-2-id538116\"></span><a class=\"title_link\" name=\"endQueryIndexed-2\" href=\"/erldoc/docs/#endQueryIndexed-2\">endQueryIndexed(Target, Index) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"endQueryIndexed-2\"></a> </p><p>Delimit the boundaries of a query object on an indexed target</p> <p><span class=\"code\">gl:beginQueryIndexed</span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#endQueryIndexed-2\">gl:endQueryIndexed/2</a></span> delimit the boundaries of a query object. <span class=\"code\">Query</span> must be a name previously returned from a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genQueries-1\">gl:genQueries/1</a></span> . If a query object with name <span class=\"code\">Id</span> does not yet exist it is created with the type determined by <span class=\"code\">Target</span> . <span class=\"code\">Target</span> must be one of <span class=\"code\">?GL_SAMPLES_PASSED</span>, <span class=\"code\">?GL_ANY_SAMPLES_PASSED</span> , <span class=\"code\">?GL_PRIMITIVES_GENERATED</span>, <span class=\"code\">?GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN</span>, or <span class=\"code\">?GL_TIME_ELAPSED</span> . The behavior of the query object depends on its type and is as follows.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBeginQueryIndexed.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getQueryIndexediv-3-id538214\"></span><a class=\"title_link\" name=\"getQueryIndexediv-3\" href=\"/erldoc/docs/#getQueryIndexediv-3\">getQueryIndexediv(Target, Index, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getQueryIndexediv-3\"></a> </p><p>Return parameters of an indexed query object target</p> <p><span class=\"code\">gl:getQueryIndexediv</span> returns in <span class=\"code\">Params</span> a selected parameter of the indexed query object target specified by <span class=\"code\">Target</span> and <span class=\"code\">Index</span> . <span class=\"code\">Index</span> specifies the index of the query object target and must be between zero and a target-specific maxiumum.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetQueryIndexed.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-releaseShaderCompiler-0-id538289\"></span><a class=\"title_link\" name=\"releaseShaderCompiler-0\" href=\"/erldoc/docs/#releaseShaderCompiler-0\">releaseShaderCompiler() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"releaseShaderCompiler-0\"></a> </p><p>Release resources consumed by the implementation&apos;s shader compiler</p> <p><span class=\"code\">gl:releaseShaderCompiler</span> provides a hint to the implementation that it may free internal resources associated with its shader compiler. <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#compileShader-1\">gl:compileShader/1</a></span> may subsequently be called and the implementation may at that time reallocate resources previously freed by the call to <span class=\"code\">gl:releaseShaderCompiler</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glReleaseShaderCompiler.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-shaderBinary-3-id538339\"></span><a class=\"title_link\" name=\"shaderBinary-3\" href=\"/erldoc/docs/#shaderBinary-3\">shaderBinary(Shaders, Binaryformat, Binary) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shaders = [integer()]</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Binaryformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Binary = binary()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"shaderBinary-3\"></a> </p><p>Load pre-compiled shader binaries</p> <p><span class=\"code\">gl:shaderBinary</span> loads pre-compiled shader binary code into the <span class=\"code\">Count</span> shader objects whose handles are given in <span class=\"code\">Shaders</span> . <span class=\"code\">Binary</span> points to <span class=\"code\">Length</span> bytes of binary shader code stored in client memory. <span class=\"code\">BinaryFormat</span> specifies the format of the pre-compiled code.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glShaderBinary.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getShaderPrecisionFormat-2-id538412\"></span><a class=\"title_link\" name=\"getShaderPrecisionFormat-2\" href=\"/erldoc/docs/#getShaderPrecisionFormat-2\">getShaderPrecisionFormat(Shadertype, Precisiontype) -&gt; {Range::{integer(), integer()}, Precision::integer()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Shadertype = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Precisiontype = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getShaderPrecisionFormat-2\"></a> </p><p>Retrieve the range and precision for numeric formats supported by the shader compiler</p> <p><span class=\"code\">gl:getShaderPrecisionFormat</span> retrieves the numeric range and precision for the implementation&apos;s representation of quantities in different numeric formats in specified shader type. <span class=\"code\">ShaderType</span> specifies the type of shader for which the numeric precision and range is to be retrieved and must be one of <span class=\"code\">?GL_VERTEX_SHADER</span> or <span class=\"code\">?GL_FRAGMENT_SHADER</span>. <span class=\"code\">PrecisionType</span> specifies the numeric format to query and must be one of <span class=\"code\">?GL_LOW_FLOAT</span>, <span class=\"code\">?GL_MEDIUM_FLOAT</span> <span class=\"code\">?GL_HIGH_FLOAT</span>, <span class=\"code\">?GL_LOW_INT</span>, <span class=\"code\">?GL_MEDIUM_INT</span>, or <span class=\"code\">?GL_HIGH_INT</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetShaderPrecisionFormat.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-depthRangef-2-id538509\"></span><a class=\"title_link\" name=\"depthRangef-2\" href=\"/erldoc/docs/#depthRangef-2\">depthRangef(N, F) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">N = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">F = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"depthRangef-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#depthRange-2\">depthRange/2</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-clearDepthf-1-id538552\"></span><a class=\"title_link\" name=\"clearDepthf-1\" href=\"/erldoc/docs/#clearDepthf-1\">clearDepthf(D) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">D = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"clearDepthf-1\"></a> </p><p>glClearDepthf</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getProgramBinary-2-id538593\"></span><a class=\"title_link\" name=\"getProgramBinary-2\" href=\"/erldoc/docs/#getProgramBinary-2\">getProgramBinary(Program, BufSize) -&gt; {BinaryFormat::enum(), Binary::binary()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BufSize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getProgramBinary-2\"></a> </p><p>Return a binary representation of a program object&apos;s compiled and linked executable source</p> <p><span class=\"code\">gl:getProgramBinary</span> returns a binary representation of the compiled and linked executable for <span class=\"code\">Program</span> into the array of bytes whose address is specified in <span class=\"code\">Binary</span> . The maximum number of bytes that may be written into <span class=\"code\">Binary</span> is specified by <span class=\"code\">BufSize</span> . If the program binary is greater in size than <span class=\"code\">BufSize</span> bytes, then an error is generated, otherwise the actual number of bytes written into <span class=\"code\">Binary</span> is returned in the variable whose address is given by <span class=\"code\">Length</span> . If <span class=\"code\">Length</span> is <span class=\"code\">?NULL</span>, then no length is returned.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetProgramBinary.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programBinary-3-id538683\"></span><a class=\"title_link\" name=\"programBinary-3\" href=\"/erldoc/docs/#programBinary-3\">programBinary(Program, BinaryFormat, Binary) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BinaryFormat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Binary = binary()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programBinary-3\"></a> </p><p>Load a program object with a program binary</p> <p><span class=\"code\">gl:programBinary</span> loads a program object with a program binary previously returned from <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getProgramBinary-2\">gl:getProgramBinary/2</a></span> . <span class=\"code\">BinaryFormat</span> and <span class=\"code\">Binary</span> must be those returned by a previous call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getProgramBinary-2\">gl:getProgramBinary/2</a></span> , and <span class=\"code\">Length</span> must be the length returned by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getProgramBinary-2\">gl:getProgramBinary/2</a></span> , or by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getProgramiv-2\">gl:getProgramiv/2</a></span> when called with <span class=\"code\">Pname</span> set to <span class=\"code\">?GL_PROGRAM_BINARY_LENGTH</span>. If these conditions are not met, loading the program binary will fail and <span class=\"code\">Program</span> &apos;s <span class=\"code\">?GL_LINK_STATUS</span> will be set to <span class=\"code\">?GL_FALSE</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glProgramBinary.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programParameteri-3-id538792\"></span><a class=\"title_link\" name=\"programParameteri-3\" href=\"/erldoc/docs/#programParameteri-3\">programParameteri(Program, Pname, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programParameteri-3\"></a> </p><p>Specify a parameter for a program object</p> <p><span class=\"code\">gl:programParameter</span> specifies a new value for the parameter nameed by <span class=\"code\">Pname</span> for the program object <span class=\"code\">Program</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glProgramParameter.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-useProgramStages-3-id538853\"></span><a class=\"title_link\" name=\"useProgramStages-3\" href=\"/erldoc/docs/#useProgramStages-3\">useProgramStages(Pipeline, Stages, Program) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pipeline = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stages = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"useProgramStages-3\"></a> </p><p>Bind stages of a program object to a program pipeline</p> <p><span class=\"code\">gl:useProgramStages</span> binds executables from a program object associated with a specified set of shader stages to the program pipeline object given by <span class=\"code\">Pipeline</span> . <span class=\"code\">Pipeline</span> specifies the program pipeline object to which to bind the executables. <span class=\"code\">Stages</span> contains a logical combination of bits indicating the shader stages to use within <span class=\"code\">Program</span> with the program pipeline object <span class=\"code\">Pipeline</span> . <span class=\"code\">Stages</span> must be a logical combination of <span class=\"code\">?GL_VERTEX_SHADER_BIT</span>, <span class=\"code\">?GL_TESS_CONTROL_SHADER_BIT</span>, <span class=\"code\">?GL_TESS_EVALUATION_SHADER_BIT</span> , <span class=\"code\">?GL_GEOMETRY_SHADER_BIT</span>, and <span class=\"code\">?GL_FRAGMENT_SHADER_BIT</span>. Additionally, the special value <span class=\"code\">?GL_ALL_SHADER_BITS</span> may be specified to indicate that all executables contained in <span class=\"code\">Program</span> should be installed in <span class=\"code\">Pipeline</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glUseProgramStages.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-activeShaderProgram-2-id538957\"></span><a class=\"title_link\" name=\"activeShaderProgram-2\" href=\"/erldoc/docs/#activeShaderProgram-2\">activeShaderProgram(Pipeline, Program) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pipeline = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"activeShaderProgram-2\"></a> </p><p>Set the active program object for a program pipeline object</p> <p><span class=\"code\">gl:activeShaderProgram</span> sets the linked program named by <span class=\"code\">Program</span> to be the active program for the program pipeline object <span class=\"code\">Pipeline</span> . The active program in the active program pipeline object is the target of calls to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#uniform1f-2\">gl:uniform1f/2</a></span> when no program has been made current through a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#useProgram-1\">gl:useProgram/1</a></span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glActiveShaderProgram.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-createShaderProgramv-2-id539025\"></span><a class=\"title_link\" name=\"createShaderProgramv-2\" href=\"/erldoc/docs/#createShaderProgramv-2\">createShaderProgramv(Type, Strings) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Strings = iolist()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"createShaderProgramv-2\"></a> </p><p>glCreateShaderProgramv</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindProgramPipeline-1-id539069\"></span><a class=\"title_link\" name=\"bindProgramPipeline-1\" href=\"/erldoc/docs/#bindProgramPipeline-1\">bindProgramPipeline(Pipeline) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pipeline = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindProgramPipeline-1\"></a> </p><p>Bind a program pipeline to the current context</p> <p><span class=\"code\">gl:bindProgramPipeline</span> binds a program pipeline object to the current context. <span class=\"code\">Pipeline</span> must be a name previously returned from a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genProgramPipelines-1\">gl:genProgramPipelines/1</a></span> . If no program pipeline exists with name <span class=\"code\">Pipeline</span> then a new pipeline object is created with that name and initialized to the default state vector.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindProgramPipeline.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-deleteProgramPipelines-1-id539128\"></span><a class=\"title_link\" name=\"deleteProgramPipelines-1\" href=\"/erldoc/docs/#deleteProgramPipelines-1\">deleteProgramPipelines(Pipelines) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pipelines = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"deleteProgramPipelines-1\"></a> </p><p>Delete program pipeline objects</p> <p><span class=\"code\">gl:deleteProgramPipelines</span> deletes the <span class=\"code\">N</span> program pipeline objects whose names are stored in the array <span class=\"code\">Pipelines</span> . Unused names in <span class=\"code\">Pipelines</span> are ignored, as is the name zero. After a program pipeline object is deleted, its name is again unused and it has no contents. If program pipeline object that is currently bound is deleted, the binding for that object reverts to zero and no program pipeline object becomes current.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDeleteProgramPipelines.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-genProgramPipelines-1-id539186\"></span><a class=\"title_link\" name=\"genProgramPipelines-1\" href=\"/erldoc/docs/#genProgramPipelines-1\">genProgramPipelines(N) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">N = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"genProgramPipelines-1\"></a> </p><p>Reserve program pipeline object names</p> <p><span class=\"code\">gl:genProgramPipelines</span> returns <span class=\"code\">N</span> previously unused program pipeline object names in <span class=\"code\">Pipelines</span> . These names are marked as used, for the purposes of <span class=\"code\">gl:genProgramPipelines</span> only, but they acquire program pipeline state only when they are first bound.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGenProgramPipelines.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-isProgramPipeline-1-id539242\"></span><a class=\"title_link\" name=\"isProgramPipeline-1\" href=\"/erldoc/docs/#isProgramPipeline-1\">isProgramPipeline(Pipeline) -&gt; 0 | 1</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pipeline = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"isProgramPipeline-1\"></a> </p><p>Determine if a name corresponds to a program pipeline object</p> <p><span class=\"code\">gl:isProgramPipeline</span> returns <span class=\"code\">?GL_TRUE</span> if <span class=\"code\">Pipeline</span> is currently the name of a program pipeline object. If <span class=\"code\">Pipeline</span> is zero, or if <span class=\"code\">?pipeline</span> is not the name of a program pipeline object, or if an error occurs, <span class=\"code\">gl:isProgramPipeline</span> returns <span class=\"code\">?GL_FALSE</span>. If <span class=\"code\">Pipeline</span> is a name returned by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#genProgramPipelines-1\">gl:genProgramPipelines/1</a></span> , but that has not yet been bound through a call to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#bindProgramPipeline-1\">gl:bindProgramPipeline/1</a></span> , then the name is not a program pipeline object and <span class=\"code\">gl:isProgramPipeline</span> returns <span class=\"code\">?GL_FALSE</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glIsProgramPipeline.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getProgramPipelineiv-2-id539334\"></span><a class=\"title_link\" name=\"getProgramPipelineiv-2\" href=\"/erldoc/docs/#getProgramPipelineiv-2\">getProgramPipelineiv(Pipeline, Pname) -&gt; integer()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pipeline = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getProgramPipelineiv-2\"></a> </p><p>Retrieve properties of a program pipeline object</p> <p><span class=\"code\">gl:getProgramPipelineiv</span> retrieves the value of a property of the program pipeline object <span class=\"code\">Pipeline</span> . <span class=\"code\">Pname</span> specifies the name of the parameter whose value to retrieve. The value of the parameter is written to the variable whose address is given by <span class=\"code\">Params</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetProgramPipeline.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform1i-3-id539398\"></span><a class=\"title_link\" name=\"programUniform1i-3\" href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i(Program, Location, V0) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform1i-3\"></a> </p><p>Specify the value of a uniform variable for a specified program object</p> <p><span class=\"code\">gl:programUniform</span> modifies the value of a uniform variable or a uniform variable array. The location of the uniform variable to be modified is specified by <span class=\"code\">Location</span> , which should be a value returned by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#getUniformLocation-2\">gl:getUniformLocation/2</a></span> . <span class=\"code\">gl:programUniform</span> operates on the program object specified by <span class=\"code\">Program</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glProgramUniform.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform1iv-3-id539466\"></span><a class=\"title_link\" name=\"programUniform1iv-3\" href=\"/erldoc/docs/#programUniform1iv-3\">programUniform1iv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform1iv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform1f-3-id539503\"></span><a class=\"title_link\" name=\"programUniform1f-3\" href=\"/erldoc/docs/#programUniform1f-3\">programUniform1f(Program, Location, V0) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform1f-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform1fv-3-id539539\"></span><a class=\"title_link\" name=\"programUniform1fv-3\" href=\"/erldoc/docs/#programUniform1fv-3\">programUniform1fv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [float()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform1fv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform1d-3-id539576\"></span><a class=\"title_link\" name=\"programUniform1d-3\" href=\"/erldoc/docs/#programUniform1d-3\">programUniform1d(Program, Location, V0) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform1d-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform1dv-3-id539613\"></span><a class=\"title_link\" name=\"programUniform1dv-3\" href=\"/erldoc/docs/#programUniform1dv-3\">programUniform1dv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [float()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform1dv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform1ui-3-id539649\"></span><a class=\"title_link\" name=\"programUniform1ui-3\" href=\"/erldoc/docs/#programUniform1ui-3\">programUniform1ui(Program, Location, V0) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform1ui-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform1uiv-3-id539686\"></span><a class=\"title_link\" name=\"programUniform1uiv-3\" href=\"/erldoc/docs/#programUniform1uiv-3\">programUniform1uiv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [integer()]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform1uiv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform2i-4-id539723\"></span><a class=\"title_link\" name=\"programUniform2i-4\" href=\"/erldoc/docs/#programUniform2i-4\">programUniform2i(Program, Location, V0, V1) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform2i-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform2iv-3-id539762\"></span><a class=\"title_link\" name=\"programUniform2iv-3\" href=\"/erldoc/docs/#programUniform2iv-3\">programUniform2iv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{integer(), integer()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform2iv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform2f-4-id539799\"></span><a class=\"title_link\" name=\"programUniform2f-4\" href=\"/erldoc/docs/#programUniform2f-4\">programUniform2f(Program, Location, V0, V1) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform2f-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform2fv-3-id539838\"></span><a class=\"title_link\" name=\"programUniform2fv-3\" href=\"/erldoc/docs/#programUniform2fv-3\">programUniform2fv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform2fv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform2d-4-id539874\"></span><a class=\"title_link\" name=\"programUniform2d-4\" href=\"/erldoc/docs/#programUniform2d-4\">programUniform2d(Program, Location, V0, V1) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform2d-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform2dv-3-id539914\"></span><a class=\"title_link\" name=\"programUniform2dv-3\" href=\"/erldoc/docs/#programUniform2dv-3\">programUniform2dv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform2dv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform2ui-4-id539950\"></span><a class=\"title_link\" name=\"programUniform2ui-4\" href=\"/erldoc/docs/#programUniform2ui-4\">programUniform2ui(Program, Location, V0, V1) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform2ui-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform2uiv-3-id539989\"></span><a class=\"title_link\" name=\"programUniform2uiv-3\" href=\"/erldoc/docs/#programUniform2uiv-3\">programUniform2uiv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{integer(), integer()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform2uiv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform3i-5-id540026\"></span><a class=\"title_link\" name=\"programUniform3i-5\" href=\"/erldoc/docs/#programUniform3i-5\">programUniform3i(Program, Location, V0, V1, V2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform3i-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform3iv-3-id540068\"></span><a class=\"title_link\" name=\"programUniform3iv-3\" href=\"/erldoc/docs/#programUniform3iv-3\">programUniform3iv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{integer(), integer(), integer()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform3iv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform3f-5-id540105\"></span><a class=\"title_link\" name=\"programUniform3f-5\" href=\"/erldoc/docs/#programUniform3f-5\">programUniform3f(Program, Location, V0, V1, V2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform3f-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform3fv-3-id540146\"></span><a class=\"title_link\" name=\"programUniform3fv-3\" href=\"/erldoc/docs/#programUniform3fv-3\">programUniform3fv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform3fv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform3d-5-id540183\"></span><a class=\"title_link\" name=\"programUniform3d-5\" href=\"/erldoc/docs/#programUniform3d-5\">programUniform3d(Program, Location, V0, V1, V2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform3d-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform3dv-3-id540224\"></span><a class=\"title_link\" name=\"programUniform3dv-3\" href=\"/erldoc/docs/#programUniform3dv-3\">programUniform3dv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform3dv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform3ui-5-id540261\"></span><a class=\"title_link\" name=\"programUniform3ui-5\" href=\"/erldoc/docs/#programUniform3ui-5\">programUniform3ui(Program, Location, V0, V1, V2) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform3ui-5\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform3uiv-3-id540303\"></span><a class=\"title_link\" name=\"programUniform3uiv-3\" href=\"/erldoc/docs/#programUniform3uiv-3\">programUniform3uiv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{integer(), integer(), integer()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform3uiv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform4i-6-id540340\"></span><a class=\"title_link\" name=\"programUniform4i-6\" href=\"/erldoc/docs/#programUniform4i-6\">programUniform4i(Program, Location, V0, V1, V2, V3) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V3 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform4i-6\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform4iv-3-id540384\"></span><a class=\"title_link\" name=\"programUniform4iv-3\" href=\"/erldoc/docs/#programUniform4iv-3\">programUniform4iv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{integer(), integer(), integer(), integer()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform4iv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform4f-6-id540420\"></span><a class=\"title_link\" name=\"programUniform4f-6\" href=\"/erldoc/docs/#programUniform4f-6\">programUniform4f(Program, Location, V0, V1, V2, V3) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V3 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform4f-6\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform4fv-3-id540464\"></span><a class=\"title_link\" name=\"programUniform4fv-3\" href=\"/erldoc/docs/#programUniform4fv-3\">programUniform4fv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform4fv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform4d-6-id540501\"></span><a class=\"title_link\" name=\"programUniform4d-6\" href=\"/erldoc/docs/#programUniform4d-6\">programUniform4d(Program, Location, V0, V1, V2, V3) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V3 = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform4d-6\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform4dv-3-id540545\"></span><a class=\"title_link\" name=\"programUniform4dv-3\" href=\"/erldoc/docs/#programUniform4dv-3\">programUniform4dv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform4dv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform4ui-6-id540582\"></span><a class=\"title_link\" name=\"programUniform4ui-6\" href=\"/erldoc/docs/#programUniform4ui-6\">programUniform4ui(Program, Location, V0, V1, V2, V3) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V0 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V1 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V2 = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V3 = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform4ui-6\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniform4uiv-3-id540626\"></span><a class=\"title_link\" name=\"programUniform4uiv-3\" href=\"/erldoc/docs/#programUniform4uiv-3\">programUniform4uiv(Program, Location, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{integer(), integer(), integer(), integer()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniform4uiv-3\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix2fv-4-id540663\"></span><a class=\"title_link\" name=\"programUniformMatrix2fv-4\" href=\"/erldoc/docs/#programUniformMatrix2fv-4\">programUniformMatrix2fv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix2fv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix3fv-4-id540703\"></span><a class=\"title_link\" name=\"programUniformMatrix3fv-4\" href=\"/erldoc/docs/#programUniformMatrix3fv-4\">programUniformMatrix3fv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix3fv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix4fv-4-id540743\"></span><a class=\"title_link\" name=\"programUniformMatrix4fv-4\" href=\"/erldoc/docs/#programUniformMatrix4fv-4\">programUniformMatrix4fv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix4fv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix2dv-4-id540783\"></span><a class=\"title_link\" name=\"programUniformMatrix2dv-4\" href=\"/erldoc/docs/#programUniformMatrix2dv-4\">programUniformMatrix2dv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix2dv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix3dv-4-id540823\"></span><a class=\"title_link\" name=\"programUniformMatrix3dv-4\" href=\"/erldoc/docs/#programUniformMatrix3dv-4\">programUniformMatrix3dv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix3dv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix4dv-4-id540863\"></span><a class=\"title_link\" name=\"programUniformMatrix4dv-4\" href=\"/erldoc/docs/#programUniformMatrix4dv-4\">programUniformMatrix4dv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix4dv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix2x3fv-4-id540904\"></span><a class=\"title_link\" name=\"programUniformMatrix2x3fv-4\" href=\"/erldoc/docs/#programUniformMatrix2x3fv-4\">programUniformMatrix2x3fv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix2x3fv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix3x2fv-4-id540943\"></span><a class=\"title_link\" name=\"programUniformMatrix3x2fv-4\" href=\"/erldoc/docs/#programUniformMatrix3x2fv-4\">programUniformMatrix3x2fv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix3x2fv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix2x4fv-4-id540983\"></span><a class=\"title_link\" name=\"programUniformMatrix2x4fv-4\" href=\"/erldoc/docs/#programUniformMatrix2x4fv-4\">programUniformMatrix2x4fv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix2x4fv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix4x2fv-4-id541023\"></span><a class=\"title_link\" name=\"programUniformMatrix4x2fv-4\" href=\"/erldoc/docs/#programUniformMatrix4x2fv-4\">programUniformMatrix4x2fv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix4x2fv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix3x4fv-4-id541063\"></span><a class=\"title_link\" name=\"programUniformMatrix3x4fv-4\" href=\"/erldoc/docs/#programUniformMatrix3x4fv-4\">programUniformMatrix3x4fv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix3x4fv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix4x3fv-4-id541103\"></span><a class=\"title_link\" name=\"programUniformMatrix4x3fv-4\" href=\"/erldoc/docs/#programUniformMatrix4x3fv-4\">programUniformMatrix4x3fv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix4x3fv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix2x3dv-4-id541143\"></span><a class=\"title_link\" name=\"programUniformMatrix2x3dv-4\" href=\"/erldoc/docs/#programUniformMatrix2x3dv-4\">programUniformMatrix2x3dv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix2x3dv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix3x2dv-4-id541183\"></span><a class=\"title_link\" name=\"programUniformMatrix3x2dv-4\" href=\"/erldoc/docs/#programUniformMatrix3x2dv-4\">programUniformMatrix3x2dv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix3x2dv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix2x4dv-4-id541222\"></span><a class=\"title_link\" name=\"programUniformMatrix2x4dv-4\" href=\"/erldoc/docs/#programUniformMatrix2x4dv-4\">programUniformMatrix2x4dv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix2x4dv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix4x2dv-4-id541262\"></span><a class=\"title_link\" name=\"programUniformMatrix4x2dv-4\" href=\"/erldoc/docs/#programUniformMatrix4x2dv-4\">programUniformMatrix4x2dv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix4x2dv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix3x4dv-4-id541302\"></span><a class=\"title_link\" name=\"programUniformMatrix3x4dv-4\" href=\"/erldoc/docs/#programUniformMatrix3x4dv-4\">programUniformMatrix3x4dv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix3x4dv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-programUniformMatrix4x3dv-4-id541342\"></span><a class=\"title_link\" name=\"programUniformMatrix4x3dv-4\" href=\"/erldoc/docs/#programUniformMatrix4x3dv-4\">programUniformMatrix4x3dv(Program, Location, Transpose, Value) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Program = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Location = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Transpose = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Value = [{float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"programUniformMatrix4x3dv-4\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#programUniform1i-3\">programUniform1i/3</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-validateProgramPipeline-1-id541382\"></span><a class=\"title_link\" name=\"validateProgramPipeline-1\" href=\"/erldoc/docs/#validateProgramPipeline-1\">validateProgramPipeline(Pipeline) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pipeline = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"validateProgramPipeline-1\"></a> </p><p>Validate a program pipeline object against current GL state</p> <p><span class=\"code\">gl:validateProgramPipeline</span> instructs the implementation to validate the shader executables contained in <span class=\"code\">Pipeline</span> against the current GL state. The implementation may use this as an opportunity to perform any internal shader modifications that may be required to ensure correct operation of the installed shaders given the current GL state.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glValidateProgramPipeline.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getProgramPipelineInfoLog-2-id541433\"></span><a class=\"title_link\" name=\"getProgramPipelineInfoLog-2\" href=\"/erldoc/docs/#getProgramPipelineInfoLog-2\">getProgramPipelineInfoLog(Pipeline, BufSize) -&gt; string()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pipeline = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BufSize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getProgramPipelineInfoLog-2\"></a> </p><p>Retrieve the info log string from a program pipeline object</p> <p><span class=\"code\">gl:getProgramPipelineInfoLog</span> retrieves the info log for the program pipeline object <span class=\"code\">Pipeline</span> . The info log, including its null terminator, is written into the array of characters whose address is given by <span class=\"code\">InfoLog</span> . The maximum number of characters that may be written into <span class=\"code\">InfoLog</span> is given by <span class=\"code\">BufSize</span> , and the actual number of characters written into <span class=\"code\">InfoLog</span> is returned in the integer whose address is given by <span class=\"code\">Length</span> . If <span class=\"code\">Length</span> is <span class=\"code\">?NULL</span>, no length is returned.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGetProgramPipelineInfoLog.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribL1d-2-id541513\"></span><a class=\"title_link\" name=\"vertexAttribL1d-2\" href=\"/erldoc/docs/#vertexAttribL1d-2\">vertexAttribL1d(Index, X) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribL1d-2\"></a> </p><p>glVertexAttribL</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribL2d-3-id541552\"></span><a class=\"title_link\" name=\"vertexAttribL2d-3\" href=\"/erldoc/docs/#vertexAttribL2d-3\">vertexAttribL2d(Index, X, Y) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribL2d-3\"></a> </p><p>glVertexAttribL</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribL3d-4-id541594\"></span><a class=\"title_link\" name=\"vertexAttribL3d-4\" href=\"/erldoc/docs/#vertexAttribL3d-4\">vertexAttribL3d(Index, X, Y, Z) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribL3d-4\"></a> </p><p>glVertexAttribL</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribL4d-5-id541638\"></span><a class=\"title_link\" name=\"vertexAttribL4d-5\" href=\"/erldoc/docs/#vertexAttribL4d-5\">vertexAttribL4d(Index, X, Y, Z, W) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Z = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribL4d-5\"></a> </p><p>glVertexAttribL</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribL1dv-2-id541684\"></span><a class=\"title_link\" name=\"vertexAttribL1dv-2\" href=\"/erldoc/docs/#vertexAttribL1dv-2\">vertexAttribL1dv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribL1dv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttribL1d-2\">vertexAttribL1d(Index, X)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribL2dv-2-id541718\"></span><a class=\"title_link\" name=\"vertexAttribL2dv-2\" href=\"/erldoc/docs/#vertexAttribL2dv-2\">vertexAttribL2dv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribL2dv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttribL2d-3\">vertexAttribL2d(Index, X, Y)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribL3dv-2-id541752\"></span><a class=\"title_link\" name=\"vertexAttribL3dv-2\" href=\"/erldoc/docs/#vertexAttribL3dv-2\">vertexAttribL3dv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribL3dv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttribL3d-4\">vertexAttribL3d(Index, X, Y, Z)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribL4dv-2-id541785\"></span><a class=\"title_link\" name=\"vertexAttribL4dv-2\" href=\"/erldoc/docs/#vertexAttribL4dv-2\">vertexAttribL4dv(Index::integer(), V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {X::float(), Y::float(), Z::float(), W::float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribL4dv-2\"></a></p><p>Equivalent to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#vertexAttribL4d-5\">vertexAttribL4d(Index, X, Y, Z, W)</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-vertexAttribLPointer-5-id541819\"></span><a class=\"title_link\" name=\"vertexAttribLPointer-5\" href=\"/erldoc/docs/#vertexAttribLPointer-5\">vertexAttribLPointer(Index, Size, Type, Stride, Pointer) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Size = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stride = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pointer = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"vertexAttribLPointer-5\"></a> </p><p>glVertexAttribLPointer</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getVertexAttribLdv-2-id541881\"></span><a class=\"title_link\" name=\"getVertexAttribLdv-2\" href=\"/erldoc/docs/#getVertexAttribLdv-2\">getVertexAttribLdv(Index, Pname) -&gt; {float(), float(), float(), float()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getVertexAttribLdv-2\"></a> </p><p>glGetVertexAttribL</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-viewportArrayv-2-id541926\"></span><a class=\"title_link\" name=\"viewportArrayv-2\" href=\"/erldoc/docs/#viewportArrayv-2\">viewportArrayv(First, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">First = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = [{float(), float(), float(), float()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"viewportArrayv-2\"></a> </p><p>glViewportArrayv</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-viewportIndexedf-5-id541965\"></span><a class=\"title_link\" name=\"viewportIndexedf-5\" href=\"/erldoc/docs/#viewportIndexedf-5\">viewportIndexedf(Index, X, Y, W, H) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">X = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Y = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">W = float()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">H = float()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"viewportIndexedf-5\"></a> </p><p>Set a specified viewport</p> <p><span class=\"code\">gl:viewportIndexedf</span> and <span class=\"code\">gl:viewportIndexedfv</span> specify the parameters for a single viewport. <span class=\"code\">Index</span> specifies the index of the viewport to modify. <span class=\"code\">Index</span> must be less than the value of <span class=\"code\">?GL_MAX_VIEWPORTS</span>. For <span class=\"code\">gl:viewportIndexedf</span>, <span class=\"code\">X</span> , <span class=\"code\">Y</span> , <span class=\"code\">W</span> , and <span class=\"code\">H</span> specify the left, bottom, width and height of the viewport in pixels, respectively. For <span class=\"code\">gl:viewportIndexedfv</span>, <span class=\"code\">V</span> contains the address of an array of floating point values specifying the left ( x), bottom ( y), width ( w), and height ( h) of each viewport, in that order. x and y give the location of the viewport&apos;s lower left corner, and w and h give the width and height of the viewport, respectively. The viewport specifies the affine transformation of x and y from normalized device coordinates to window coordinates. Let (x nd y nd) be normalized device coordinates. Then the window coordinates (x w y w) are computed as follows:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glViewportIndexed.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-viewportIndexedfv-2-id542065\"></span><a class=\"title_link\" name=\"viewportIndexedfv-2\" href=\"/erldoc/docs/#viewportIndexedfv-2\">viewportIndexedfv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {float(), float(), float(), float()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"viewportIndexedfv-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#viewportIndexedf-5\">viewportIndexedf/5</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-scissorArrayv-2-id542100\"></span><a class=\"title_link\" name=\"scissorArrayv-2\" href=\"/erldoc/docs/#scissorArrayv-2\">scissorArrayv(First, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">First = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = [{integer(), integer(), integer(), integer()}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"scissorArrayv-2\"></a> </p><p>glScissorArrayv</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-scissorIndexed-5-id542139\"></span><a class=\"title_link\" name=\"scissorIndexed-5\" href=\"/erldoc/docs/#scissorIndexed-5\">scissorIndexed(Index, Left, Bottom, Width, Height) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Left = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bottom = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"scissorIndexed-5\"></a> </p><p>glScissorIndexe</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-scissorIndexedv-2-id542186\"></span><a class=\"title_link\" name=\"scissorIndexedv-2\" href=\"/erldoc/docs/#scissorIndexedv-2\">scissorIndexedv(Index, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = {integer(), integer(), integer(), integer()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"scissorIndexedv-2\"></a> </p><p>glScissorIndexe</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-depthRangeArrayv-2-id542226\"></span><a class=\"title_link\" name=\"depthRangeArrayv-2\" href=\"/erldoc/docs/#depthRangeArrayv-2\">depthRangeArrayv(First, V) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">First = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">V = [{<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span>}]</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"depthRangeArrayv-2\"></a> </p><p>glDepthRangeArrayv</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-depthRangeIndexed-3-id542277\"></span><a class=\"title_link\" name=\"depthRangeIndexed-3\" href=\"/erldoc/docs/#depthRangeIndexed-3\">depthRangeIndexed(Index, N, F) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">N = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">F = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"depthRangeIndexed-3\"></a> </p><p>glDepthRangeIndexe</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getFloati_v-2-id542328\"></span><a class=\"title_link\" name=\"getFloati_v-2\" href=\"/erldoc/docs/#getFloati_v-2\">getFloati_v(Target, Index) -&gt; [float()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getFloati_v-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getBooleanv-1\">getBooleanv/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getDoublei_v-2-id542367\"></span><a class=\"title_link\" name=\"getDoublei_v-2\" href=\"/erldoc/docs/#getDoublei_v-2\">getDoublei_v(Target, Index) -&gt; [float()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Index = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getDoublei_v-2\"></a> </p><p> See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#getBooleanv-1\">getBooleanv/1</a></span></p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-debugMessageControlARB-5-id542406\"></span><a class=\"title_link\" name=\"debugMessageControlARB-5\" href=\"/erldoc/docs/#debugMessageControlARB-5\">debugMessageControlARB(Source, Type, Severity, Ids, Enabled) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Source = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Severity = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Ids = [integer()]</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Enabled = 0 | 1</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"debugMessageControlARB-5\"></a> </p><p>glDebugMessageControlARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-debugMessageInsertARB-5-id542467\"></span><a class=\"title_link\" name=\"debugMessageInsertARB-5\" href=\"/erldoc/docs/#debugMessageInsertARB-5\">debugMessageInsertARB(Source, Type, Id, Severity, Buf) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Source = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Severity = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Buf = string()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"debugMessageInsertARB-5\"></a> </p><p>glDebugMessageInsertARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getDebugMessageLogARB-2-id542528\"></span><a class=\"title_link\" name=\"getDebugMessageLogARB-2\" href=\"/erldoc/docs/#getDebugMessageLogARB-2\">getDebugMessageLogARB(Count, Bufsize) -&gt; {integer(), Sources::[enum()], Types::[enum()], Ids::[integer()], Severities::[enum()], MessageLog::[string()]}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Bufsize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getDebugMessageLogARB-2\"></a> </p><p>glGetDebugMessageLogARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getGraphicsResetStatusARB-0-id542586\"></span><a class=\"title_link\" name=\"getGraphicsResetStatusARB-0\" href=\"/erldoc/docs/#getGraphicsResetStatusARB-0\">getGraphicsResetStatusARB() -&gt; enum()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"getGraphicsResetStatusARB-0\"></a> </p><p>glGetGraphicsResetStatusARB</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawArraysInstancedBaseInstance-5-id542622\"></span><a class=\"title_link\" name=\"drawArraysInstancedBaseInstance-5\" href=\"/erldoc/docs/#drawArraysInstancedBaseInstance-5\">drawArraysInstancedBaseInstance(Mode, First, Count, Primcount, Baseinstance) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">First = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Primcount = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Baseinstance = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawArraysInstancedBaseInstance-5\"></a> </p><p>Draw multiple instances of a range of elements with offset applied to instanced attributes</p> <p><span class=\"code\">gl:drawArraysInstancedBaseInstance</span> behaves identically to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawArrays-3\">gl:drawArrays/3</a></span> except that <span class=\"code\">Primcount</span> instances of the range of elements are executed and the value of the internal counter <span class=\"code\">InstanceID</span> advances for each iteration. <span class=\"code\">InstanceID</span> is an internal 32-bit integer counter that may be read by a vertex shader as <span class=\"code\">?gl_InstanceID</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawArraysInstancedBaseInstance.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawElementsInstancedBaseInstance-6-id542704\"></span><a class=\"title_link\" name=\"drawElementsInstancedBaseInstance-6\" href=\"/erldoc/docs/#drawElementsInstancedBaseInstance-6\">drawElementsInstancedBaseInstance(Mode, Count, Type, Indices, Primcount, Baseinstance) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Indices = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Primcount = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Baseinstance = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawElementsInstancedBaseInstance-6\"></a> </p><p>Draw multiple instances of a set of elements with offset applied to instanced attributes</p> <p><span class=\"code\">gl:drawElementsInstancedBaseInstance</span> behaves identically to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawElements-4\">gl:drawElements/4</a></span> except that <span class=\"code\">Primcount</span> instances of the set of elements are executed and the value of the internal counter <span class=\"code\">InstanceID</span> advances for each iteration. <span class=\"code\">InstanceID</span> is an internal 32-bit integer counter that may be read by a vertex shader as <span class=\"code\">?gl_InstanceID</span> .</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawElementsInstancedBaseInstance.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawElementsInstancedBaseVertexBaseInstance-7-id542804\"></span><a class=\"title_link\" name=\"drawElementsInstancedBaseVertexBaseInstance-7\" href=\"/erldoc/docs/#drawElementsInstancedBaseVertexBaseInstance-7\">drawElementsInstancedBaseVertexBaseInstance(Mode, Count, Type, Indices, Primcount, Basevertex, Baseinstance) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Count = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Indices = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-offset\">offset()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mem\">mem()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Primcount = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Basevertex = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Baseinstance = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawElementsInstancedBaseVertexBaseInstance-7\"></a> </p><p>Render multiple instances of a set of primitives from array data with a per-element offset</p> <p><span class=\"code\">gl:drawElementsInstancedBaseVertexBaseInstance</span> behaves identically to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gl#drawElementsInstanced-5\">gl:drawElementsInstanced/5</a></span> except that the <span class=\"code\">i</span>th element transferred by the corresponding draw call will be taken from element <span class=\"code\">Indices</span> [i] + <span class=\"code\">Basevertex</span> of each enabled array. If the resulting value is larger than the maximum value representable by <span class=\"code\">Type</span> , it is as if the calculation were upconverted to 32-bit unsigned integers (with wrapping on overflow conditions). The operation is undefined if the sum would be negative. The <span class=\"code\">Basevertex</span> has no effect on the shader-visible value of <span class=\"code\">?gl_VertexID</span>.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glDrawElementsInstancedBaseVertexBaseInstance.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawTransformFeedbackInstanced-3-id542916\"></span><a class=\"title_link\" name=\"drawTransformFeedbackInstanced-3\" href=\"/erldoc/docs/#drawTransformFeedbackInstanced-3\">drawTransformFeedbackInstanced(Mode, Id, Primcount) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Primcount = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawTransformFeedbackInstanced-3\"></a> </p><p>glDrawTransformFeedbackInstance</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-drawTransformFeedbackStreamInstanced-4-id542963\"></span><a class=\"title_link\" name=\"drawTransformFeedbackStreamInstanced-4\" href=\"/erldoc/docs/#drawTransformFeedbackStreamInstanced-4\">drawTransformFeedbackStreamInstanced(Mode, Id, Stream, Primcount) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Mode = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Id = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Stream = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Primcount = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"drawTransformFeedbackStreamInstanced-4\"></a> </p><p>glDrawTransformFeedbackStreamInstance</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getInternalformativ-4-id543013\"></span><a class=\"title_link\" name=\"getInternalformativ-4\" href=\"/erldoc/docs/#getInternalformativ-4\">getInternalformativ(Target, Internalformat, Pname, BufSize) -&gt; [integer()]</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Pname = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">BufSize = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"getInternalformativ-4\"></a> </p><p>glGetInternalformat</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-bindImageTexture-7-id543071\"></span><a class=\"title_link\" name=\"bindImageTexture-7\" href=\"/erldoc/docs/#bindImageTexture-7\">bindImageTexture(Unit, Texture, Level, Layered, Layer, Access, Format) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Unit = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Texture = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Layered = 0 | 1</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Layer = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Access = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Format = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"bindImageTexture-7\"></a> </p><p>Bind a level of a texture to an image unit</p> <p><span class=\"code\">gl:bindImageTexture</span> binds a single level of a texture to an image unit for the purpose of reading and writing it from shaders. <span class=\"code\">Unit</span> specifies the zero-based index of the image unit to which to bind the texture level. <span class=\"code\">Texture</span> specifies the name of an existing texture object to bind to the image unit. If <span class=\"code\">Texture</span> is zero, then any existing binding to the image unit is broken. <span class=\"code\">Level</span> specifies the level of the texture to bind to the image unit.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindImageTexture.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-memoryBarrier-1-id543157\"></span><a class=\"title_link\" name=\"memoryBarrier-1\" href=\"/erldoc/docs/#memoryBarrier-1\">memoryBarrier(Barriers) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Barriers = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"memoryBarrier-1\"></a> </p><p>Defines a barrier ordering memory transactions</p> <p><span class=\"code\">gl:memoryBarrier</span> defines a barrier ordering the memory transactions issued prior to the command relative to those issued after the barrier. For the purposes of this ordering, memory transactions performed by shaders are considered to be issued by the rendering command that triggered the execution of the shader. <span class=\"code\">Barriers</span> is a bitfield indicating the set of operations that are synchronized with shader stores; the bits used in <span class=\"code\">Barriers</span> are as follows:</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glMemoryBarrier.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texStorage1D-4-id543212\"></span><a class=\"title_link\" name=\"texStorage1D-4\" href=\"/erldoc/docs/#texStorage1D-4\">texStorage1D(Target, Levels, Internalformat, Width) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Levels = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texStorage1D-4\"></a> </p><p>Simultaneously specify storage for all levels of a one-dimensional texture</p> <p><span class=\"code\">gl:texStorage1D</span> specifies the storage requirements for all levels of a one-dimensional texture simultaneously. Once a texture is specified with this command, the format and dimensions of all levels become immutable unless it is a proxy texture. The contents of the image may still be modified, however, its storage requirements may not change. Such a texture is referred to as an <span class=\"code\">immutable-format</span> texture.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glTexStorage1D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texStorage2D-5-id543279\"></span><a class=\"title_link\" name=\"texStorage2D-5\" href=\"/erldoc/docs/#texStorage2D-5\">texStorage2D(Target, Levels, Internalformat, Width, Height) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Levels = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texStorage2D-5\"></a> </p><p>Simultaneously specify storage for all levels of a two-dimensional or one-dimensional array texture</p> <p><span class=\"code\">gl:texStorage2D</span> specifies the storage requirements for all levels of a two-dimensional texture or one-dimensional texture array simultaneously. Once a texture is specified with this command, the format and dimensions of all levels become immutable unless it is a proxy texture. The contents of the image may still be modified, however, its storage requirements may not change. Such a texture is referred to as an <span class=\"code\">immutable-format</span> texture.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glTexStorage2D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-texStorage3D-6-id543350\"></span><a class=\"title_link\" name=\"texStorage3D-6\" href=\"/erldoc/docs/#texStorage3D-6\">texStorage3D(Target, Levels, Internalformat, Width, Height, Depth) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Target = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Levels = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Internalformat = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-enum\">enum()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Width = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Height = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Depth = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"texStorage3D-6\"></a> </p><p>Simultaneously specify storage for all levels of a three-dimensional, two-dimensional array or cube-map array texture</p> <p><span class=\"code\">gl:texStorage3D</span> specifies the storage requirements for all levels of a three-dimensional, two-dimensional array or cube-map array texture simultaneously. Once a texture is specified with this command, the format and dimensions of all levels become immutable unless it is a proxy texture. The contents of the image may still be modified, however, its storage requirements may not change. Such a texture is referred to as an <span class=\"code\">immutable-format</span> texture.</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glTexStorage3D.xhtml\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-depthBoundsEXT-2-id543424\"></span><a class=\"title_link\" name=\"depthBoundsEXT-2\" href=\"/erldoc/docs/#depthBoundsEXT-2\">depthBoundsEXT(Zmin, Zmax) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Zmin = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Zmax = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-clamp\">clamp()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"depthBoundsEXT-2\"></a> </p><p>glDepthBoundsEXT</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-stencilClearTagEXT-2-id543473\"></span><a class=\"title_link\" name=\"stencilClearTagEXT-2\" href=\"/erldoc/docs/#stencilClearTagEXT-2\">stencilClearTagEXT(StencilTagBits, StencilClearTag) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">StencilTagBits = integer()</span><br></div><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">StencilClearTag = integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"stencilClearTagEXT-2\"></a> </p><p>glStencilClearTagEXT</p> <p>See <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.khronos.org/registry/OpenGL-Refpages/\">external</a></span> documentation.</p><p></p></div>"}