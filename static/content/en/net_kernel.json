{"summary":"Erlang networking kernel.","description":"<p> </p><p>The net kernel is a system process, registered as <span class=\"code\">net_kernel</span>, which must be operational for distributed Erlang to work. The purpose of this process is to implement parts of the BIFs <span class=\"code\">spawn/4</span> and <span class=\"code\">spawn_link/4</span>, and to provide monitoring of the network.</p> <p>An Erlang node is started using command-line flag <span class=\"code\">-name</span> or <span class=\"code\">-sname</span>:</p> <div class=\"example\"><pre>$ <span class=\"bold_code bc-12\">erl -sname foobar</span></pre></div> <p>It is also possible to call <span class=\"code\">net_kernel:start([foobar])</span> directly from the normal Erlang shell prompt:</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">net_kernel:start([foobar, shortnames]).</span>{ok,&lt;0.64.0&gt;}(foobar@gringotts)2&gt;</pre></div> <p>If the node is started with command-line flag <span class=\"code\">-sname</span>, the node name is <span class=\"code\">foobar@Host</span>, where <span class=\"code\">Host</span> is the short name of the host (not the fully qualified domain name). If started with flag <span class=\"code\">-name</span>, the node name is <span class=\"code\">foobar@Host</span>, where <span class=\"code\">Host</span> is the fully qualified domain name. For more information, see <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/erl\"><span class=\"code\">erl</span></a></span>.</p> <p>Normally, connections are established automatically when another node is referenced. This functionality can be disabled by setting Kernel configuration parameter <span class=\"code\">dist_auto_connect</span> to <span class=\"code\">never</span>, see <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/kernel_app\"><span class=\"code\">kernel(6)</span></a></span>. In this case, connections must be established explicitly by calling <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#connect_node-1\"><span class=\"code\">connect_node/1</span></a></span>.</p> <p>Which nodes that are allowed to communicate with each other is handled by the magic cookie system, see section <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/../reference_manual/distributed\">Distributed Erlang</a></span> in the Erlang Reference Manual.</p> <div class=\"warning\"><div class=\"label\">Warning</div><div class=\"content\"><p> </p><p> Starting a distributed node without also specifying <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/erl#proto_dist\"><span class=\"code\">-proto_dist inet_tls</span></a></span> will expose the node to attacks that may give the attacker complete access to the node and in extension the cluster. When using un-secure distributed nodes, make sure that the network is configured to keep potential attackers out. See the <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/../apps/ssl/ssl_distribution\">Using SSL for Erlang Distribution</a></span> User&apos;s Guide for details on how to setup a secure distributed node. </p> <p></p></div></div> <p></p>","funcs":" <a name=\"allow-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-allow-1-id217944\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_kernel.xml#L83\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>allow(Nodes) -&gt; ok | error</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Nodes = [node()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Permits access to the specified set of nodes.</p> <p>Before the first call to <span class=\"code\">allow/1</span>, any node with the correct cookie can be connected. When <span class=\"code\">allow/1</span> is called, a list of allowed nodes is established. Any access attempts made from (or to) nodes not in that list will be rejected.</p> <p>Subsequent calls to <span class=\"code\">allow/1</span> will add the specified nodes to the list of allowed nodes. It is not possible to remove nodes from the list.</p> <p>Returns <span class=\"code\">error</span> if any element in <span class=\"code\">Nodes</span> is not an atom.</p> <p></p></div> <a name=\"connect_node-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-connect_node-1-id205726\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_kernel.xml#L100\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>connect_node(Node) -&gt; boolean() | ignored</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Node = node()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Establishes a connection to <span class=\"code\">Node</span>. Returns <span class=\"code\">true</span> if a connection was established or was already established or if <span class=\"code\">Node</span> is the local node itself. Returns <span class=\"code\">false</span> if the connection attempt failed, and <span class=\"code\">ignored</span> if the local node is not alive.</p> <p></p></div> <a name=\"get_net_ticktime-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_net_ticktime-0-id214506\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_kernel.xml#L112\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_net_ticktime() -&gt; Res</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Res = NetTicktime | {ongoing_change_to, NetTicktime} | ignored</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">NetTicktime = integer() &gt;= 1</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Gets <span class=\"code\">net_ticktime</span> (see <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/kernel_app\"><span class=\"code\">kernel(6)</span></a></span>).</p> <p>Defined return values (<span class=\"code\">Res</span>):</p> <dl> <dt><strong><span class=\"code\">NetTicktime</span></strong></dt> <dd><p><span class=\"code\">net_ticktime</span> is <span class=\"code\">NetTicktime</span> seconds.</p></dd> <dt><strong><span class=\"code\">{ongoing_change_to, NetTicktime}</span></strong></dt> <dd><p><span class=\"code\">net_kernel</span> is currently changing <span class=\"code\">net_ticktime</span> to <span class=\"code\">NetTicktime</span> seconds.</p></dd> <dt><strong><span class=\"code\">ignored</span></strong></dt> <dd><p>The local node is not alive.</p></dd> </dl> <p></p></div> <a name=\"getopts-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-getopts-2-id218156\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_kernel.xml#L133\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>getopts(Node, Options) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, OptionValues} | {error, Reason} | ignored</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Node = node()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-socket_getopt\">inet:socket_getopt()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">OptionValues = [<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-socket_setopt\">inet:socket_setopt()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span> | noconnection</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Get one or more options for the distribution socket connected to <span class=\"code\">Node</span>.</p> <p>If <span class=\"code\">Node</span> is a connected node the return value is the same as from <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#getopts-2\"><span class=\"code\">inet:getopts(Sock, Options)</span></a></span> where <span class=\"code\">Sock</span> is the distribution socket for <span class=\"code\">Node</span>.</p> <p>Returns <span class=\"code\">ignored</span> if the local node is not alive or <span class=\"code\">{error, noconnection}</span> if <span class=\"code\">Node</span> is not connected.</p> <p></p></div> <a name=\"monitor_nodes-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-monitor_nodes-1-id218151\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_kernel.xml#L148\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>monitor_nodes(Flag) -&gt; ok | Error</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"monitor_nodes-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-monitor_nodes-2-id218198\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_kernel.xml#L148\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>monitor_nodes(Flag, Options) -&gt; ok | Error</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Flag = boolean()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [Option]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Option = {node_type, NodeType} | nodedown_reason</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">NodeType = visible | hidden | all</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Error = error | {error, term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>The calling process subscribes or unsubscribes to node status change messages. A <span class=\"code\">nodeup</span> message is delivered to all subscribing processes when a new node is connected, and a <span class=\"code\">nodedown</span> message is delivered when a node is disconnected.</p> <p>If <span class=\"code\">Flag</span> is <span class=\"code\">true</span>, a new subscription is started. If <span class=\"code\">Flag</span> is <span class=\"code\">false</span>, all previous subscriptions started with the same <span class=\"code\">Options</span> are stopped. Two option lists are considered the same if they contain the same set of options.</p> <p>As from Kernel version 2.11.4, and ERTS version 5.5.4, the following is guaranteed:</p> <ul> <li><p><span class=\"code\">nodeup</span> messages are delivered before delivery of any message from the remote node passed through the newly established connection.</p></li> <li><p><span class=\"code\">nodedown</span> messages are not delivered until all messages from the remote node that have been passed through the connection have been delivered.</p></li> </ul> <p>Notice that this is <strong>not</strong> guaranteed for Kernel versions before 2.11.4.</p> <p>As from Kernel version 2.11.4, subscriptions can also be made before the <span class=\"code\">net_kernel</span> server is started, that is, <span class=\"code\">net_kernel:monitor_nodes/[1,2]</span> does not return <span class=\"code\">ignored</span>.</p> <p>As from Kernel version 2.13, and ERTS version 5.7, the following is guaranteed:</p> <ul> <li><p><span class=\"code\">nodeup</span> messages are delivered after the corresponding node appears in results from <span class=\"code\">erlang:nodes/X</span>.</p></li> <li><p><span class=\"code\">nodedown</span> messages are delivered after the corresponding node has disappeared in results from <span class=\"code\">erlang:nodes/X</span>.</p></li> </ul> <p>Notice that this is <strong>not</strong> guaranteed for Kernel versions before 2.13.</p> <p>The format of the node status change messages depends on <span class=\"code\">Options</span>. If <span class=\"code\">Options</span> is <span class=\"code\">[]</span>, which is the default, the format is as follows:</p> <div class=\"example example-none\"><pre>{nodeup, Node} | {nodedown, Node} Node = node()</pre></div> <p>If <span class=\"code\">Options</span> is not <span class=\"code\">[]</span>, the format is as follows:</p> <div class=\"example example-none\"><pre>{nodeup, Node, InfoList} | {nodedown, Node, InfoList} Node = node() InfoList = [{Tag, Val}]</pre></div> <p><span class=\"code\">InfoList</span> is a list of tuples. Its contents depends on <span class=\"code\">Options</span>, see below.</p> <p>Also, when <span class=\"code\">OptionList == []</span>, only visible nodes, that is, nodes that appear in the result of <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/erlang#nodes-0\"><span class=\"code\">erlang:nodes/0</span></a></span>, are monitored.</p> <p><span class=\"code\">Option</span> can be any of the following:</p> <dl> <dt><strong><span class=\"code\">{node_type, NodeType}</span></strong></dt> <dd> <p>Valid values for <span class=\"code\">NodeType</span>:</p> <dl> <dt><strong><span class=\"code\">visible</span></strong></dt> <dd><p>Subscribe to node status change messages for visible nodes only. The tuple <span class=\"code\">{node_type, visible}</span> is included in <span class=\"code\">InfoList</span>.</p></dd> <dt><strong><span class=\"code\">hidden</span></strong></dt> <dd><p>Subscribe to node status change messages for hidden nodes only. The tuple <span class=\"code\">{node_type, hidden}</span> is included in <span class=\"code\">InfoList</span>.</p></dd> <dt><strong><span class=\"code\">all</span></strong></dt> <dd><p>Subscribe to node status change messages for both visible and hidden nodes. The tuple <span class=\"code\">{node_type, visible | hidden}</span> is included in <span class=\"code\">InfoList</span>.</p></dd> </dl> </dd> <dt><strong><span class=\"code\">nodedown_reason</span></strong></dt> <dd> <p>The tuple <span class=\"code\">{nodedown_reason, Reason}</span> is included in <span class=\"code\">InfoList</span> in <span class=\"code\">nodedown</span> messages.</p> <p> <span class=\"code\">Reason</span> can, depending on which distribution module or process that is used be any term, but for the standard TCP distribution module it is any of the following: </p> <dl> <dt><strong><span class=\"code\">connection_setup_failed</span></strong></dt> <dd><p>The connection setup failed (after <span class=\"code\">nodeup</span> messages were sent).</p></dd> <dt><strong><span class=\"code\">no_network</span></strong></dt> <dd><p>No network is available.</p></dd> <dt><strong><span class=\"code\">net_kernel_terminated</span></strong></dt> <dd><p>The <span class=\"code\">net_kernel</span> process terminated.</p></dd> <dt><strong><span class=\"code\">shutdown</span></strong></dt> <dd><p>Unspecified connection shutdown.</p></dd> <dt><strong><span class=\"code\">connection_closed</span></strong></dt> <dd><p>The connection was closed.</p></dd> <dt><strong><span class=\"code\">disconnect</span></strong></dt> <dd><p>The connection was disconnected (forced from the current node).</p></dd> <dt><strong><span class=\"code\">net_tick_timeout</span></strong></dt> <dd><p>Net tick time-out.</p></dd> <dt><strong><span class=\"code\">send_net_tick_failed</span></strong></dt> <dd><p>Failed to send net tick over the connection.</p></dd> <dt><strong><span class=\"code\">get_status_failed</span></strong></dt> <dd><p>Status information retrieval from the <span class=\"code\">Port</span> holding the connection failed.</p></dd> </dl> </dd> </dl> <p></p></div> <a name=\"set_net_ticktime-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-set_net_ticktime-1-id219031\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_kernel.xml#L269\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>set_net_ticktime(NetTicktime) -&gt; Res</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"set_net_ticktime-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-set_net_ticktime-2-id219017\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_kernel.xml#L269\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>set_net_ticktime(NetTicktime, TransitionPeriod) -&gt; Res</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">NetTicktime = integer() &gt;= 1</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TransitionPeriod = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Res = <br>&#xA0;&#xA0;&#xA0;&#xA0;unchanged | change_initiated |<br>&#xA0;&#xA0;&#xA0;&#xA0;{ongoing_change_to, NewNetTicktime}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">NewNetTicktime = integer() &gt;= 1</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sets <span class=\"code\">net_ticktime</span> (see <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/kernel_app\"><span class=\"code\">kernel(6)</span></a></span>) to <span class=\"code\">NetTicktime</span> seconds. <span class=\"code\">TransitionPeriod</span> defaults to <span class=\"code\">60</span>.</p> <p>Some definitions:</p> <dl> <dt><strong>Minimum transition traffic interval (<span class=\"code\">MTTI</span>)</strong></dt> <dd><p><span class=\"code\">minimum(NetTicktime, PreviousNetTicktime)*1000 div 4</span> milliseconds.</p></dd> <dt><strong>Transition period</strong></dt> <dd><p>The time of the least number of consecutive <span class=\"code\">MTTI</span>s to cover <span class=\"code\">TransitionPeriod</span> seconds following the call to <span class=\"code\">set_net_ticktime/2</span> (that is, ((<span class=\"code\">TransitionPeriod*1000 - 1) div MTTI + 1)*MTTI</span> milliseconds).</p></dd> </dl> <p>If <span class=\"code\">NetTicktime &lt; PreviousNetTicktime</span>, the <span class=\"code\">net_ticktime</span> change is done at the end of the transition period; otherwise at the beginning. During the transition period, <span class=\"code\">net_kernel</span> ensures that there is outgoing traffic on all connections at least every <span class=\"code\">MTTI</span> millisecond.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>The <span class=\"code\">net_ticktime</span> changes must be initiated on all nodes in the network (with the same <span class=\"code\">NetTicktime</span>) before the end of any transition period on any node; otherwise connections can erroneously be disconnected.</p> <p></p></div></div> <p>Returns one of the following:</p> <dl> <dt><strong><span class=\"code\">unchanged</span></strong></dt> <dd> <p><span class=\"code\">net_ticktime</span> already has the value of <span class=\"code\">NetTicktime</span> and is left unchanged.</p> </dd> <dt><strong><span class=\"code\">change_initiated</span></strong></dt> <dd> <p><span class=\"code\">net_kernel</span> initiated the change of <span class=\"code\">net_ticktime</span> to <span class=\"code\">NetTicktime</span> seconds.</p> </dd> <dt><strong><span class=\"code\">{ongoing_change_to, NewNetTicktime}</span></strong></dt> <dd> <p>The request is <strong>ignored</strong> because <span class=\"code\">net_kernel</span> is busy changing <span class=\"code\">net_ticktime</span> to <span class=\"code\">NewNetTicktime</span> seconds.</p> </dd> </dl> <p></p></div> <a name=\"setopts-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-setopts-2-id219462\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_kernel.xml#L326\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>setopts(Node, Options) -&gt; ok | {error, Reason} | ignored</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Node = node() | new</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-socket_setopt\">inet:socket_setopt()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span> | noconnection</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Set one or more options for distribution sockets. Argument <span class=\"code\">Node</span> can be either one node name or the atom <span class=\"code\">new</span> to affect the distribution sockets of all future connected nodes.</p> <p>The return value is the same as from <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#setopts-2\"><span class=\"code\">inet:setopts/2</span></a></span> or <span class=\"code\">{error, noconnection}</span> if <span class=\"code\">Node</span> is not a connected node or <span class=\"code\">new</span>.</p> <p>If <span class=\"code\">Node</span> is <span class=\"code\">new</span> the <span class=\"code\">Options</span> will then also be added to kernel configration parameters <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/kernel_app#inet_dist_listen_options\">inet_dist_listen_options</a></span> and <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/kernel_app#inet_dist_connect_options\">inet_dist_connect_options</a></span>.</p> <p>Returns <span class=\"code\">ignored</span> if the local node is not alive.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-start-1-id178972\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_kernel.xml#L347\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"start-1\" href=\"/erldoc/docs/#start-1\">start([Name]) -&gt; {ok, pid()} | {error, Reason}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-start-1-id178978\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_kernel.xml#L347\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"start-1\" href=\"/erldoc/docs/#start-1\">start([Name, NameType]) -&gt; {ok, pid()} | {error, Reason}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-start-1-id178985\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_kernel.xml#L347\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"start-1\" href=\"/erldoc/docs/#start-1\">start([Name, NameType, Ticktime]) -&gt; {ok, pid()} | {error, Reason}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Name = atom()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">NameType = shortnames | longnames</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = {already_started, pid()} | term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Turns a non-distributed node into a distributed node by starting <span class=\"code\">net_kernel</span> and other necessary processes.</p> <p>Notice that the argument is a list with exactly one, two, or three arguments. <span class=\"code\">NameType</span> defaults to <span class=\"code\">longnames</span> and <span class=\"code\">Ticktime</span> to <span class=\"code\">15000</span>.</p> <p></p></div> <a name=\"stop-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-stop-0-id219897\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/net_kernel.xml#L366\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>stop() -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = not_allowed | not_found</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Turns a distributed node into a non-distributed node. For other nodes in the network, this is the same as the node going down. Only possible when the net kernel was started using <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#start-1\"><span class=\"code\">start/1</span></a></span>, otherwise <span class=\"code\">{error, not_allowed}</span> is returned. Returns <span class=\"code\">{error, not_found}</span> if the local node is not alive.</p> <p></p></div> "}