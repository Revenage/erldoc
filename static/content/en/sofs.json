{"summary":"Functions for manipulating sets of sets.","description":"<p> </p><p>This module provides operations on finite sets and relations represented as sets. Intuitively, a set is a collection of elements; every element belongs to the set, and the set contains every element.</p> <p>Given a set A and a sentence S(x), where x is a free variable, a new set B whose elements are exactly those elements of A for which S(x) holds can be formed, this is denoted B&#xA0;= {x&#xA0;in&#xA0;A&#xA0;: S(x)}. Sentences are expressed using the logical operators &quot;for some&quot; (or &quot;there exists&quot;), &quot;for all&quot;, &quot;and&quot;, &quot;or&quot;, &quot;not&quot;. If the existence of a set containing all the specified elements is known (as is always the case in this module), this is denoted B&#xA0;= {x&#xA0;: S(x)}.</p> <ul> <li> <p>The <strong>unordered set</strong> containing the elements a, b, and c is denoted {a,&#xA0;b,&#xA0;c}. This notation is not to be confused with tuples.</p> <p>The <strong>ordered pair</strong> of a and b, with first <strong>coordinate</strong> a and second coordinate b, is denoted (a,&#xA0;b). An ordered pair is an <strong>ordered set</strong> of two elements. In this module, ordered sets can contain one, two, or more elements, and parentheses are used to enclose the elements.</p> <p>Unordered sets and ordered sets are orthogonal, again in this module; there is no unordered set equal to any ordered set.</p> </li> <li> <p>The <strong>empty set</strong> contains no elements.</p> <p>Set A is <a name=\"equal\"></a><strong>equal</strong> to set B if they contain the same elements, which is denoted A&#xA0;=&#xA0;B. Two ordered sets are equal if they contain the same number of elements and have equal elements at each coordinate.</p> <p>Set B is a <a name=\"subset\"></a><strong>subset</strong> of set A if A contains all elements that B contains.</p> <p>The <a name=\"union\"></a><strong>union</strong> of two sets A and B is the smallest set that contains all elements of A and all elements of B.</p> <p>The <a name=\"intersection\"></a><strong>intersection</strong> of two sets A and B is the set that contains all elements of A that belong to B.</p> <p>Two sets are <a name=\"disjoint\"></a><strong>disjoint</strong> if their intersection is the empty set.</p> <p>The <a name=\"difference\"></a><strong>difference</strong> of two sets A and B is the set that contains all elements of A that do not belong to B.</p> <p>The <a name=\"symmetric_difference\"></a><strong>symmetric difference</strong> of two sets is the set that contains those element that belong to either of the two sets, but not both.</p> <p>The <a name=\"union_n\"></a><strong>union</strong> of a collection of sets is the smallest set that contains all the elements that belong to at least one set of the collection.</p> <p>The <a name=\"intersection_n\"></a><strong>intersection</strong> of a non-empty collection of sets is the set that contains all elements that belong to every set of the collection.</p> </li> <li> <p>The <a name=\"Cartesian_product\"></a><strong>Cartesian product</strong> of two sets X and Y, denoted X&#xA0;&#xD7;&#xA0;Y, is the set {a&#xA0;: a&#xA0;= (x,&#xA0;y) for some x&#xA0;in&#xA0;X and for some y&#xA0;in&#xA0;Y}.</p> <p>A <a name=\"relation\"></a><strong>relation</strong> is a subset of X&#xA0;&#xD7;&#xA0;Y. Let R be a relation. The fact that (x,&#xA0;y) belongs to R is written as x&#xA0;R&#xA0;y. As relations are sets, the definitions of the last item (subset, union, and so on) apply to relations as well.</p> <p>The <a name=\"domain\"></a><strong>domain</strong> of R is the set {x&#xA0;: x&#xA0;R&#xA0;y for some y&#xA0;in&#xA0;Y}.</p> <p>The <a name=\"range\"></a><strong>range</strong> of R is the set {y&#xA0;: x&#xA0;R&#xA0;y for some x&#xA0;in&#xA0;X}.</p> <p>The <a name=\"converse\"></a><strong>converse</strong> of R is the set {a&#xA0;: a&#xA0;= (y,&#xA0;x) for some (x,&#xA0;y)&#xA0;in&#xA0;R}.</p> <p>If A is a subset of X, the <a name=\"image\"></a><strong>image</strong> of A under R is the set {y&#xA0;: x&#xA0;R&#xA0;y for some x&#xA0;in&#xA0;A}. If B is a subset of Y, the <a name=\"inverse_image\"></a><strong>inverse image</strong> of B is the set {x&#xA0;: x&#xA0;R&#xA0;y for some y&#xA0;in&#xA0;B}.</p> <p>If R is a relation from X to Y, and S is a relation from Y to Z, the <a name=\"relative_product\"></a><strong>relative product</strong> of R and S is the relation T from X to Z defined so that x&#xA0;T&#xA0;z if and only if there exists an element y in Y such that x&#xA0;R&#xA0;y and y&#xA0;S&#xA0;z.</p> <p>The <a name=\"restriction\"></a><strong>restriction</strong> of R to A is the set S defined so that x&#xA0;S&#xA0;y if and only if there exists an element x in A such that x&#xA0;R&#xA0;y.</p> <p>If S is a restriction of R to A, then R is an <a name=\"extension\"></a><strong>extension</strong> of S to X.</p> <p>If X&#xA0;=&#xA0;Y, then R is called a relation <strong>in</strong> X.</p> <p>The <a name=\"field\"></a><strong>field</strong> of a relation R in X is the union of the domain of R and the range of R.</p> <p>If R is a relation in X, and if S is defined so that x&#xA0;S&#xA0;y if x&#xA0;R&#xA0;y and not x&#xA0;=&#xA0;y, then S is the <a name=\"strict_relation\"></a><strong>strict</strong> relation corresponding to R. Conversely, if S is a relation in X, and if R is defined so that x&#xA0;R&#xA0;y if x&#xA0;S&#xA0;y or x&#xA0;=&#xA0;y, then R is the <a name=\"weak_relation\"></a><strong>weak</strong> relation corresponding to S.</p> <p>A relation R in X is <strong>reflexive</strong> if x&#xA0;R&#xA0;x for every element x of X, it is <strong>symmetric</strong> if x&#xA0;R&#xA0;y implies that y&#xA0;R&#xA0;x, and it is <strong>transitive</strong> if x&#xA0;R&#xA0;y and y&#xA0;R&#xA0;z imply that x&#xA0;R&#xA0;z.</p> </li> <li> <p>A <a name=\"function\"></a><strong>function</strong> F is a relation, a subset of X&#xA0;&#xD7;&#xA0;Y, such that the domain of F is equal to X and such that for every x in X there is a unique element y in Y with (x,&#xA0;y) in F. The latter condition can be formulated as follows: if x&#xA0;F&#xA0;y and x&#xA0;F&#xA0;z, then y&#xA0;=&#xA0;z. In this module, it is not required that the domain of F is equal to X for a relation to be considered a function.</p> <p>Instead of writing (x,&#xA0;y)&#xA0;in&#xA0;F or x&#xA0;F&#xA0;y, we write F(x)&#xA0;=&#xA0;y when F is a function, and say that F maps x onto y, or that the value of F at x is y.</p> <p>As functions are relations, the definitions of the last item (domain, range, and so on) apply to functions as well.</p> <p>If the converse of a function F is a function F&apos;, then F&apos; is called the <a name=\"inverse\"></a><strong>inverse</strong> of F.</p> <p>The relative product of two functions F1 and F2 is called the <a name=\"composite\"></a><strong>composite</strong> of F1 and F2 if the range of F1 is a subset of the domain of F2.</p> </li> <li> <p>Sometimes, when the range of a function is more important than the function itself, the function is called a <strong>family</strong>.</p> <p>The domain of a family is called the <strong>index set</strong>, and the range is called the <strong>indexed set</strong>.</p> <p>If x is a family from I to X, then x[i] denotes the value of the function at index i. The notation &quot;a family in X&quot; is used for such a family.</p> <p>When the indexed set is a set of subsets of a set X, we call x a <a name=\"family\"></a><strong>family of subsets</strong> of X.</p> <p>If x is a family of subsets of X, the union of the range of x is called the <strong>union of the family</strong> x.</p> <p>If x is non-empty (the index set is non-empty), the <strong>intersection of the family</strong> x is the intersection of the range of x.</p> <p>In this module, the only families that are considered are families of subsets of some set X; in the following, the word &quot;family&quot; is used for such families of subsets.</p> </li> <li> <p>A <a name=\"partition\"></a><strong>partition</strong> of a set X is a collection S of non-empty subsets of X whose union is X and whose elements are pairwise disjoint.</p> <p>A relation in a set is an <strong>equivalence relation</strong> if it is reflexive, symmetric, and transitive.</p> <p>If R is an equivalence relation in X, and x is an element of X, the <a name=\"equivalence_class\"></a><strong>equivalence class</strong> of x with respect to R is the set of all those elements y of X for which x&#xA0;R&#xA0;y holds. The equivalence classes constitute a partitioning of X. Conversely, if C is a partition of X, the relation that holds for any two elements of X if they belong to the same equivalence class, is an equivalence relation induced by the partition C.</p> <p>If R is an equivalence relation in X, the <a name=\"canonical_map\"></a><strong>canonical map</strong> is the function that maps every element of X onto its equivalence class.</p> </li> <li> <p><a name=\"binary_relation\"></a>Relations as defined above (as sets of ordered pairs) are from now on referred to as <strong>binary relations</strong>.</p> <p>We call a set of ordered sets (x[1],&#xA0;...,&#xA0;x[n]) an <a name=\"n_ary_relation\"></a><strong>(n-ary) relation</strong>, and say that the relation is a subset of the <a name=\"Cartesian_product_tuple\"></a>Cartesian product X[1]&#xA0;&#xD7;&#xA0;...&#xA0;&#xD7;&#xA0;X[n], where x[i] is an element of X[i], 1&#xA0;&lt;=&#xA0;i&#xA0;&lt;=&#xA0;n.</p> <p>The <a name=\"projection\"></a><strong>projection</strong> of an n-ary relation R onto coordinate i is the set {x[i]&#xA0;: (x[1],&#xA0;...,&#xA0;x[i],&#xA0;...,&#xA0;x[n]) in R for some x[j]&#xA0;in&#xA0;X[j], 1&#xA0;&lt;=&#xA0;j&#xA0;&lt;=&#xA0;n and not i&#xA0;=&#xA0;j}. The projections of a binary relation R onto the first and second coordinates are the domain and the range of R, respectively.</p> <p>The relative product of binary relations can be generalized to n-ary relations as follows. Let TR be an ordered set (R[1],&#xA0;...,&#xA0;R[n]) of binary relations from X to Y[i] and S a binary relation from (Y[1]&#xA0;&#xD7;&#xA0;...&#xA0;&#xD7;&#xA0;Y[n]) to Z. The <a name=\"tuple_relative_product\"></a><strong>relative product</strong> of TR and S is the binary relation T from X to Z defined so that x&#xA0;T&#xA0;z if and only if there exists an element y[i] in Y[i] for each 1&#xA0;&lt;=&#xA0;i&#xA0;&lt;=&#xA0;n such that x&#xA0;R[i]&#xA0;y[i] and (y[1],&#xA0;...,&#xA0;y[n])&#xA0;S&#xA0;z. Now let TR be a an ordered set (R[1],&#xA0;...,&#xA0;R[n]) of binary relations from X[i] to Y[i] and S a subset of X[1]&#xA0;&#xD7;&#xA0;...&#xA0;&#xD7;&#xA0;X[n]. The <a name=\"multiple_relative_product\"></a><strong>multiple relative product</strong> of TR and S is defined to be the set {z&#xA0;: z&#xA0;= ((x[1],&#xA0;...,&#xA0;x[n]), (y[1],...,y[n])) for some (x[1],&#xA0;...,&#xA0;x[n])&#xA0;in&#xA0;S and for some (x[i],&#xA0;y[i]) in R[i], 1&#xA0;&lt;=&#xA0;i&#xA0;&lt;=&#xA0;n}.</p> <p>The <a name=\"natural_join\"></a><strong>natural join</strong> of an n-ary relation R and an m-ary relation S on coordinate i and j is defined to be the set {z&#xA0;: z&#xA0;= (x[1],&#xA0;...,&#xA0;x[n],&#xA0; y[1],&#xA0;...,&#xA0;y[j-1],&#xA0;y[j+1],&#xA0;...,&#xA0;y[m]) for some (x[1],&#xA0;...,&#xA0;x[n])&#xA0;in&#xA0;R and for some (y[1],&#xA0;...,&#xA0;y[m])&#xA0;in&#xA0;S such that x[i]&#xA0;=&#xA0;y[j]}.</p> </li> <li> <p><a name=\"sets_definition\"></a>The sets recognized by this module are represented by elements of the relation Sets, which is defined as the smallest set such that:</p> <ul> <li> <p>For every atom T, except &apos;_&apos;, and for every term X, (T,&#xA0;X) belongs to Sets (<strong>atomic sets</strong>).</p> </li> <li> <p>([&apos;_&apos;],&#xA0;[]) belongs to Sets (the <strong>untyped empty set</strong>).</p> </li> <li> <p>For every tuple T&#xA0;= {T[1],&#xA0;...,&#xA0;T[n]} and for every tuple X&#xA0;= {X[1],&#xA0;...,&#xA0;X[n]}, if (T[i],&#xA0;X[i]) belongs to Sets for every 1&#xA0;&lt;=&#xA0;i&#xA0;&lt;=&#xA0;n, then (T,&#xA0;X) belongs to Sets (<strong>ordered sets</strong>).</p> </li> <li> <p>For every term T, if X is the empty list or a non-empty sorted list [X[1],&#xA0;...,&#xA0;X[n]] without duplicates such that (T,&#xA0;X[i]) belongs to Sets for every 1&#xA0;&lt;=&#xA0;i&#xA0;&lt;=&#xA0;n, then ([T],&#xA0;X) belongs to Sets (<strong>typed unordered sets</strong>).</p> </li> </ul> <p>An <a name=\"external_set\"></a><strong>external set</strong> is an element of the range of Sets.</p> <p>A <a name=\"type\"></a><strong>type</strong> is an element of the domain of Sets.</p> <p>If S is an element (T,&#xA0;X) of Sets, then T is a <a name=\"valid_type\"></a><strong>valid type</strong> of X, T is the type of S, and X is the external set of S. <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#from_term-2\"><span class=\"code\">from_term/2</span></a></span> creates a set from a type and an Erlang term turned into an external set.</p> <p>The sets represented by Sets are the elements of the range of function Set from Sets to Erlang terms and sets of Erlang terms:</p> <ul> <li>Set(T,Term)&#xA0;= Term, where T is an atom</li> <li>Set({T[1],&#xA0;...,&#xA0;T[n]},&#xA0;{X[1],&#xA0;..., &#xA0;X[n]})&#xA0;= (Set(T[1],&#xA0;X[1]),&#xA0;...,&#xA0; Set(T[n],&#xA0;X[n]))</li> <li>Set([T],&#xA0;[X[1],&#xA0;...,&#xA0;X[n]])&#xA0;= {Set(T,&#xA0;X[1]),&#xA0;...,&#xA0;Set(T,&#xA0;X[n])}</li> <li>Set([T],&#xA0;[])&#xA0;= {}</li> </ul> <p>When there is no risk of confusion, elements of Sets are identified with the sets they represent. For example, if U is the result of calling <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#union-2\"><span class=\"code\">union/2</span></a></span> with S1 and S2 as arguments, then U is said to be the union of S1 and S2. A more precise formulation is that Set(U) is the union of Set(S1) and Set(S2).</p> </li> </ul> <p>The types are used to implement the various conditions that sets must fulfill. As an example, consider the relative product of two sets R and S, and recall that the relative product of R and S is defined if R is a binary relation to Y and S is a binary relation from Y. The function that implements the relative product, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#relative_product-2\"><span class=\"code\">relative_product/2</span></a></span>, checks that the arguments represent binary relations by matching [{A,B}] against the type of the first argument (Arg1 say), and [{C,D}] against the type of the second argument (Arg2 say). The fact that [{A,B}] matches the type of Arg1 is to be interpreted as Arg1 representing a binary relation from X to Y, where X is defined as all sets Set(x) for some element x in Sets the type of which is A, and similarly for Y. In the same way Arg2 is interpreted as representing a binary relation from W to Z. Finally it is checked that B matches C, which is sufficient to ensure that W is equal to Y. The untyped empty set is handled separately: its type, [&apos;_&apos;], matches the type of any unordered set.</p> <p>A few functions of this module (<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#drestriction-3\"><span class=\"code\">drestriction/3</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family_projection-2\"><span class=\"code\">family_projection/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#partition-2\"><span class=\"code\">partition/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#partition_family-2\"><span class=\"code\">partition_family/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#projection-2\"><span class=\"code\">projection/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#restriction-3\"><span class=\"code\">restriction/3</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#substitution-2\"><span class=\"code\">substitution/2</span></a></span>) accept an Erlang function as a means to modify each element of a given unordered set. <a name=\"set_fun\"></a>Such a function, called SetFun in the following, can be specified as a functional object (fun), a tuple <span class=\"code\">{external,&#xA0;Fun}</span>, or an integer:</p> <ul> <li> <p>If SetFun is specified as a fun, the fun is applied to each element of the given set and the return value is assumed to be a set.</p> </li> <li> <p>If SetFun is specified as a tuple <span class=\"code\">{external, Fun}</span>, Fun is applied to the external set of each element of the given set and the return value is assumed to be an external set. Selecting the elements of an unordered set as external sets and assembling a new unordered set from a list of external sets is in the present implementation more efficient than modifying each element as a set. However, this optimization can only be used when the elements of the unordered set are atomic or ordered sets. It must also be the case that the type of the elements matches some clause of Fun (the type of the created set is the result of applying Fun to the type of the given set), and that Fun does nothing but selecting, duplicating, or rearranging parts of the elements.</p> </li> <li> <p>Specifying a SetFun as an integer I is equivalent to specifying <span class=\"code\">{external, fun(X)&#xA0;-&gt; element(I,&#xA0;X)&#xA0;end}</span>, but is to be preferred, as it makes it possible to handle this case even more efficiently.</p> </li> </ul> <p>Examples of SetFuns:</p> <div class=\"example\"><pre>fun sofs:union/1fun(S) -&gt; sofs:partition(1, S) end{external, fun(A) -&gt; A end}{external, fun({A,_,C}) -&gt; {C,A} end}{external, fun({_,{_,C}}) -&gt; C end}{external, fun({_,{_,{_,E}=C}}) -&gt; {E,{E,C}} end}2</pre></div> <p>The order in which a SetFun is applied to the elements of an unordered set is not specified, and can change in future versions of this module.</p> <p>The execution time of the functions of this module is dominated by the time it takes to sort lists. When no sorting is needed, the execution time is in the worst case proportional to the sum of the sizes of the input arguments and the returned value. A few functions execute in constant time: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#from_external-2\"><span class=\"code\">from_external/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#is_empty_set-1\"><span class=\"code\">is_empty_set/1</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#is_set-1\"><span class=\"code\">is_set/1</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#is_sofs_set-1\"><span class=\"code\">is_sofs_set/1</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#to_external-1\"><span class=\"code\">to_external/1</span></a></span> <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-1\"><span class=\"code\">type/1</span></a></span>.</p> <p>The functions of this module exit the process with a <span class=\"code\">badarg</span>, <span class=\"code\">bad_function</span>, or <span class=\"code\">type_mismatch</span> message when given badly formed arguments or sets the types of which are not compatible.</p> <p>When comparing external sets, operator <span class=\"code\">==/2</span> is used.</p> <p></p>","funcs":" <a name=\"a_function-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-a_function-1-id360292\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L458\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>a_function(Tuples) -&gt; Function</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"a_function-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-a_function-2-id360318\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L458\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>a_function(Tuples, Type) -&gt; Function</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Function = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_function\">a_function()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuples = [tuple()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-type\">type()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#function\">function</a></span>. <span class=\"code\">a_function(F,&#xA0;T)</span> is equivalent to <span class=\"code\">from_term(F,&#xA0;T)</span> if the result is a function. If no <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type\">type</a></span> is explicitly specified, <span class=\"code\">[{atom,&#xA0;atom}]</span> is used as the function type.</p> <p></p></div> <a name=\"canonical_relation-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-canonical_relation-1-id360325\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L472\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>canonical_relation(SetOfSets) -&gt; BinRel</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SetOfSets = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-set_of_sets\">set_of_sets()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the binary relation containing the elements (E,&#xA0;Set) such that Set belongs to <span class=\"code\">SetOfSets</span> and E belongs to Set. If <span class=\"code\">SetOfSets</span> is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#partition\">partition</a></span> of a set X and R is the equivalence relation in X induced by <span class=\"code\">SetOfSets</span>, then the returned relation is the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#canonical_map\">canonical map</a></span> from X onto the equivalence classes with respect to R.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">Ss = sofs:from_term([[a,b],[b,c]]),</span><span class=\"bold_code bc-12\">CR = sofs:canonical_relation(Ss),</span><span class=\"bold_code bc-12\">sofs:to_external(CR).</span>[{a,[a,b]},{b,[a,b]},{b,[b,c]},{c,[b,c]}]</pre></div> <p></p></div> <a name=\"composite-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-composite-2-id360640\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L492\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>composite(Function1, Function2) -&gt; Function3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Function1 = Function2 = Function3 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_function\">a_function()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#composite\">composite</a></span> of the functions <span class=\"code\">Function1</span> and <span class=\"code\">Function2</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">F1 = sofs:a_function([{a,1},{b,2},{c,2}]),</span><span class=\"bold_code bc-12\">F2 = sofs:a_function([{1,x},{2,y},{3,z}]),</span><span class=\"bold_code bc-12\">F = sofs:composite(F1, F2),</span><span class=\"bold_code bc-12\">sofs:to_external(F).</span>[{a,x},{b,y},{c,y}]</pre></div> <p></p></div> <a name=\"constant_function-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-constant_function-2-id360783\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L508\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>constant_function(Set, AnySet) -&gt; Function</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AnySet = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-anyset\">anyset()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Function = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_function\">a_function()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#function\">function</a></span> that maps each element of set <span class=\"code\">Set</span> onto <span class=\"code\">AnySet</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">S = sofs:set([a,b]),</span><span class=\"bold_code bc-12\">E = sofs:from_term(1),</span><span class=\"bold_code bc-12\">R = sofs:constant_function(S, E),</span><span class=\"bold_code bc-12\">sofs:to_external(R).</span>[{a,1},{b,1}]</pre></div> <p></p></div> <a name=\"converse-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-converse-1-id360799\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L524\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>converse(BinRel1) -&gt; BinRel2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel1 = BinRel2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#converse\">converse</a></span> of the binary relation <span class=\"code\">BinRel1</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R1 = sofs:relation([{1,a},{2,b},{3,a}]),</span><span class=\"bold_code bc-12\">R2 = sofs:converse(R1),</span><span class=\"bold_code bc-12\">sofs:to_external(R2).</span>[{a,1},{a,3},{b,2}]</pre></div> <p></p></div> <a name=\"difference-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-difference-2-id361078\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L538\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>difference(Set1, Set2) -&gt; Set3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = Set3 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#difference\">difference</a></span> of the sets <span class=\"code\">Set1</span> and <span class=\"code\">Set2</span>.</p> <p></p></div> <a name=\"digraph_to_family-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-digraph_to_family-1-id361119\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L547\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>digraph_to_family(Graph) -&gt; Family</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"digraph_to_family-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-digraph_to_family-2-id361213\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L547\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>digraph_to_family(Graph, Type) -&gt; Family</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Graph = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/digraph#type-graph\">digraph:graph()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-type\">type()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family</a></span> from the directed graph <span class=\"code\">Graph</span>. Each vertex a of <span class=\"code\">Graph</span> is represented by a pair (a,&#xA0;{b[1],&#xA0;...,&#xA0;b[n]}), where the b[i]:s are the out-neighbors of a. If no type is explicitly specified, [{atom,&#xA0;[atom]}] is used as type of the family. It is assumed that <span class=\"code\">Type</span> is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#valid_type\">valid type</a></span> of the external set of the family.</p> <p>If G is a directed graph, it holds that the vertices and edges of G are the same as the vertices and edges of <span class=\"code\">family_to_digraph(digraph_to_family(G))</span>.</p> <p></p></div> <a name=\"domain-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-domain-1-id360975\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L567\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>domain(BinRel) -&gt; Set</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#domain\">domain</a></span> of the binary relation <span class=\"code\">BinRel</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R = sofs:relation([{1,a},{1,b},{2,b},{2,c}]),</span><span class=\"bold_code bc-12\">S = sofs:domain(R),</span><span class=\"bold_code bc-12\">sofs:to_external(S).</span>[1,2]</pre></div> <p></p></div> <a name=\"drestriction-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-drestriction-2-id361421\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L581\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>drestriction(BinRel1, Set) -&gt; BinRel2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel1 = BinRel2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the difference between the binary relation <span class=\"code\">BinRel1</span> and the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#restriction\">restriction</a></span> of <span class=\"code\">BinRel1</span> to <span class=\"code\">Set</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R1 = sofs:relation([{1,a},{2,b},{3,c}]),</span><span class=\"bold_code bc-12\">S = sofs:set([2,4,6]),</span><span class=\"bold_code bc-12\">R2 = sofs:drestriction(R1, S),</span><span class=\"bold_code bc-12\">sofs:to_external(R2).</span>[{1,a},{3,c}]</pre></div> <p><span class=\"code\">drestriction(R,&#xA0;S)</span> is equivalent to <span class=\"code\">difference(R,&#xA0;restriction(R,&#xA0;S))</span>.</p> <p></p></div> <a name=\"drestriction-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-drestriction-3-id361699\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L600\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>drestriction(SetFun, Set1, Set2) -&gt; Set3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SetFun = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-set_fun\">set_fun()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = Set3 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a subset of <span class=\"code\">Set1</span> containing those elements that do not give an element in <span class=\"code\">Set2</span> as the result of applying <span class=\"code\">SetFun</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">SetFun = {external, fun({_A,B,C}) -&gt; {B,C} end},</span><span class=\"bold_code bc-12\">R1 = sofs:relation([{a,aa,1},{b,bb,2},{c,cc,3}]),</span><span class=\"bold_code bc-12\">R2 = sofs:relation([{bb,2},{cc,3},{dd,4}]),</span><span class=\"bold_code bc-12\">R3 = sofs:drestriction(SetFun, R1, R2),</span><span class=\"bold_code bc-12\">sofs:to_external(R3).</span>[{a,aa,1}]</pre></div> <p><span class=\"code\">drestriction(F,&#xA0;S1,&#xA0;S2)</span> is equivalent to <span class=\"code\">difference(S1,&#xA0;restriction(F,&#xA0;S1,&#xA0;S2))</span>.</p> <p></p></div> <a name=\"empty_set-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-empty_set-0-id361874\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L620\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>empty_set() -&gt; Set</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sets_definition\">untyped empty set</a></span>. <span class=\"code\">empty_set()</span> is equivalent to <span class=\"code\">from_term([],&#xA0;[&apos;_&apos;])</span>.</p> <p></p></div> <a name=\"extension-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-extension-3-id361962\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L630\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>extension(BinRel1, Set, AnySet) -&gt; BinRel2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AnySet = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-anyset\">anyset()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel1 = BinRel2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#extension\">extension</a></span> of <span class=\"code\">BinRel1</span> such that for each element E in <span class=\"code\">Set</span> that does not belong to the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#domain\">domain</a></span> of <span class=\"code\">BinRel1</span>, <span class=\"code\">BinRel2</span> contains the pair (E,&#xA0;<span class=\"code\">AnySet</span>).</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">S = sofs:set([b,c]),</span><span class=\"bold_code bc-12\">A = sofs:empty_set(),</span><span class=\"bold_code bc-12\">R = sofs:family([{a,[1,2]},{b,[3]}]),</span><span class=\"bold_code bc-12\">X = sofs:extension(R, S, A),</span><span class=\"bold_code bc-12\">sofs:to_external(X).</span>[{a,[1,2]},{b,[3]},{c,[]}]</pre></div> <p></p></div> <a name=\"family-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family-1-id362180\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L650\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family(Tuples) -&gt; Family</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"family-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family-2-id362207\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L650\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family(Tuples, Type) -&gt; Family</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuples = [tuple()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-type\">type()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family of subsets</a></span>. <span class=\"code\">family(F,&#xA0;T)</span> is equivalent to <span class=\"code\">from_term(F,&#xA0;T)</span> if the result is a family. If no <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type\">type</a></span> is explicitly specified, <span class=\"code\">[{atom,&#xA0;[atom]}]</span> is used as the family type.</p> <p></p></div> <a name=\"family_difference-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family_difference-2-id362365\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L664\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family_difference(Family1, Family2) -&gt; Family3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family1 = Family2 = Family3 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">Family1</span> and <span class=\"code\">Family2</span> are <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">families</a></span>, then <span class=\"code\">Family3</span> is the family such that the index set is equal to the index set of <span class=\"code\">Family1</span>, and <span class=\"code\">Family3</span>[i] is the difference between <span class=\"code\">Family1</span>[i] and <span class=\"code\">Family2</span>[i] if <span class=\"code\">Family2</span> maps i, otherwise <span class=\"code\">Family1[i]</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">F1 = sofs:family([{a,[1,2]},{b,[3,4]}]),</span><span class=\"bold_code bc-12\">F2 = sofs:family([{b,[4,5]},{c,[6,7]}]),</span><span class=\"bold_code bc-12\">F3 = sofs:family_difference(F1, F2),</span><span class=\"bold_code bc-12\">sofs:to_external(F3).</span>[{a,[1,2]},{b,[3]}]</pre></div> <p></p></div> <a name=\"family_domain-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family_domain-1-id362549\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L685\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family_domain(Family1) -&gt; Family2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family1 = Family2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">Family1</span> is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family</a></span> and <span class=\"code\">Family1</span>[i] is a binary relation for every i in the index set of <span class=\"code\">Family1</span>, then <span class=\"code\">Family2</span> is the family with the same index set as <span class=\"code\">Family1</span> such that <span class=\"code\">Family2</span>[i] is the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#domain\">domain</a></span> of <span class=\"code\">Family1[i]</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">FR = sofs:from_term([{a,[{1,a},{2,b},{3,c}]},{b,[]},{c,[{4,d},{5,e}]}]),</span><span class=\"bold_code bc-12\">F = sofs:family_domain(FR),</span><span class=\"bold_code bc-12\">sofs:to_external(F).</span>[{a,[1,2,3]},{b,[]},{c,[4,5]}]</pre></div> <p></p></div> <a name=\"family_field-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family_field-1-id362719\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L706\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family_field(Family1) -&gt; Family2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family1 = Family2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">Family1</span> is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family</a></span> and <span class=\"code\">Family1</span>[i] is a binary relation for every i in the index set of <span class=\"code\">Family1</span>, then <span class=\"code\">Family2</span> is the family with the same index set as <span class=\"code\">Family1</span> such that <span class=\"code\">Family2</span>[i] is the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#field\">field</a></span> of <span class=\"code\">Family1</span>[i].</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">FR = sofs:from_term([{a,[{1,a},{2,b},{3,c}]},{b,[]},{c,[{4,d},{5,e}]}]),</span><span class=\"bold_code bc-12\">F = sofs:family_field(FR),</span><span class=\"bold_code bc-12\">sofs:to_external(F).</span>[{a,[1,2,3,a,b,c]},{b,[]},{c,[4,5,d,e]}]</pre></div> <p><span class=\"code\">family_field(Family1)</span> is equivalent to <span class=\"code\">family_union(family_domain(Family1), family_range(Family1))</span>.</p> <p></p></div> <a name=\"family_intersection-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family_intersection-1-id362904\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L730\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family_intersection(Family1) -&gt; Family2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family1 = Family2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">Family1</span> is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family</a></span> and <span class=\"code\">Family1</span>[i] is a set of sets for every i in the index set of <span class=\"code\">Family1</span>, then <span class=\"code\">Family2</span> is the family with the same index set as <span class=\"code\">Family1</span> such that <span class=\"code\">Family2</span>[i] is the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#intersection_n\">intersection</a></span> of <span class=\"code\">Family1</span>[i].</p> <p>If <span class=\"code\">Family1</span>[i] is an empty set for some i, the process exits with a <span class=\"code\">badarg</span> message.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">F1 = sofs:from_term([{a,[[1,2,3],[2,3,4]]},{b,[[x,y,z],[x,y]]}]),</span><span class=\"bold_code bc-12\">F2 = sofs:family_intersection(F1),</span><span class=\"bold_code bc-12\">sofs:to_external(F2).</span>[{a,[2,3]},{b,[x,y]}]</pre></div> <p></p></div> <a name=\"family_intersection-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family_intersection-2-id363096\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L754\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family_intersection(Family1, Family2) -&gt; Family3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family1 = Family2 = Family3 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">Family1</span> and <span class=\"code\">Family2</span> are <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">families</a></span>, then <span class=\"code\">Family3</span> is the family such that the index set is the intersection of <span class=\"code\">Family1</span>:s and <span class=\"code\">Family2</span>:s index sets, and <span class=\"code\">Family3</span>[i] is the intersection of <span class=\"code\">Family1</span>[i] and <span class=\"code\">Family2</span>[i].</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">F1 = sofs:family([{a,[1,2]},{b,[3,4]},{c,[5,6]}]),</span><span class=\"bold_code bc-12\">F2 = sofs:family([{b,[4,5]},{c,[7,8]},{d,[9,10]}]),</span><span class=\"bold_code bc-12\">F3 = sofs:family_intersection(F1, F2),</span><span class=\"bold_code bc-12\">sofs:to_external(F3).</span>[{b,[4]},{c,[]}]</pre></div> <p></p></div> <a name=\"family_projection-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family_projection-2-id363278\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L774\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family_projection(SetFun, Family1) -&gt; Family2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SetFun = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-set_fun\">set_fun()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family1 = Family2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">Family1</span> is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family</a></span>, then <span class=\"code\">Family2</span> is the family with the same index set as <span class=\"code\">Family1</span> such that <span class=\"code\">Family2</span>[i] is the result of calling <span class=\"code\">SetFun</span> with <span class=\"code\">Family1</span>[i] as argument.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">F1 = sofs:from_term([{a,[[1,2],[2,3]]},{b,[[]]}]),</span><span class=\"bold_code bc-12\">F2 = sofs:family_projection(fun sofs:union/1, F1),</span><span class=\"bold_code bc-12\">sofs:to_external(F2).</span>[{a,[1,2,3]},{b,[]}]</pre></div> <p></p></div> <a name=\"family_range-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family_range-1-id363454\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L793\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family_range(Family1) -&gt; Family2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family1 = Family2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">Family1</span> is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family</a></span> and <span class=\"code\">Family1</span>[i] is a binary relation for every i in the index set of <span class=\"code\">Family1</span>, then <span class=\"code\">Family2</span> is the family with the same index set as <span class=\"code\">Family1</span> such that <span class=\"code\">Family2</span>[i] is the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#range\">range</a></span> of <span class=\"code\">Family1</span>[i].</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">FR = sofs:from_term([{a,[{1,a},{2,b},{3,c}]},{b,[]},{c,[{4,d},{5,e}]}]),</span><span class=\"bold_code bc-12\">F = sofs:family_range(FR),</span><span class=\"bold_code bc-12\">sofs:to_external(F).</span>[{a,[a,b,c]},{b,[]},{c,[d,e]}]</pre></div> <p></p></div> <a name=\"family_specification-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family_specification-2-id363626\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L814\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family_specification(Fun, Family1) -&gt; Family2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-spec_fun\">spec_fun()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family1 = Family2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">Family1</span> is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family</a></span>, then <span class=\"code\">Family2</span> is the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#restriction\">restriction</a></span> of <span class=\"code\">Family1</span> to those elements i of the index set for which <span class=\"code\">Fun</span> applied to <span class=\"code\">Family1</span>[i] returns <span class=\"code\">true</span>. If <span class=\"code\">Fun</span> is a tuple <span class=\"code\">{external,&#xA0;Fun2}</span>, then <span class=\"code\">Fun2</span> is applied to the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#external_set\">external set</a></span> of <span class=\"code\">Family1</span>[i], otherwise <span class=\"code\">Fun</span> is applied to <span class=\"code\">Family1</span>[i].</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">F1 = sofs:family([{a,[1,2,3]},{b,[1,2]},{c,[1]}]),</span><span class=\"bold_code bc-12\">SpecFun = fun(S) -&gt; sofs:no_elements(S) =:= 2 end,</span><span class=\"bold_code bc-12\">F2 = sofs:family_specification(SpecFun, F1),</span><span class=\"bold_code bc-12\">sofs:to_external(F2).</span>[{b,[1,2]}]</pre></div> <p></p></div> <a name=\"family_to_digraph-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family_to_digraph-1-id363865\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L839\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family_to_digraph(Family) -&gt; Graph</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"family_to_digraph-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family_to_digraph-2-id363898\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L839\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family_to_digraph(Family, GraphType) -&gt; Graph</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Graph = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/digraph#type-graph\">digraph:graph()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">GraphType = [<span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/digraph#type-d_type\">digraph:d_type()</a></span>]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a directed graph from <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family</a></span> <span class=\"code\">Family</span>. For each pair (a,&#xA0;{b[1],&#xA0;...,&#xA0;b[n]}) of <span class=\"code\">Family</span>, vertex a and the edges (a,&#xA0;b[i]) for 1&#xA0;&lt;=&#xA0;i&#xA0;&lt;=&#xA0;n are added to a newly created directed graph.</p> <p>If no graph type is specified, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/digraph#new-0\"><span class=\"code\">digraph:new/0</span></a></span> is used for creating the directed graph, otherwise argument <span class=\"code\">GraphType</span> is passed on as second argument to <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/digraph#new-1\"><span class=\"code\">digraph:new/1</span></a></span>.</p> <p>It F is a family, it holds that F is a subset of <span class=\"code\">digraph_to_family(family_to_digraph(F),&#xA0;type(F))</span>. Equality holds if <span class=\"code\">union_of_family(F)</span> is a subset of <span class=\"code\">domain(F)</span>.</p> <p>Creating a cycle in an acyclic graph exits the process with a <span class=\"code\">cyclic</span> message.</p> <p></p></div> <a name=\"family_to_relation-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family_to_relation-1-id364114\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L865\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family_to_relation(Family) -&gt; BinRel</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">Family</span> is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family</a></span>, then <span class=\"code\">BinRel</span> is the binary relation containing all pairs (i,&#xA0;x) such that i belongs to the index set of <span class=\"code\">Family</span> and x belongs to <span class=\"code\">Family</span>[i].</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">F = sofs:family([{a,[]}, {b,[1]}, {c,[2,3]}]),</span><span class=\"bold_code bc-12\">R = sofs:family_to_relation(F),</span><span class=\"bold_code bc-12\">sofs:to_external(R).</span>[{b,1},{c,2},{c,3}]</pre></div> <p></p></div> <a name=\"family_union-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family_union-1-id364270\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L883\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family_union(Family1) -&gt; Family2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family1 = Family2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">Family1</span> is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family</a></span> and <span class=\"code\">Family1</span>[i] is a set of sets for each i in the index set of <span class=\"code\">Family1</span>, then <span class=\"code\">Family2</span> is the family with the same index set as <span class=\"code\">Family1</span> such that <span class=\"code\">Family2</span>[i] is the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#union_n\">union</a></span> of <span class=\"code\">Family1</span>[i].</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">F1 = sofs:from_term([{a,[[1,2],[2,3]]},{b,[[]]}]),</span><span class=\"bold_code bc-12\">F2 = sofs:family_union(F1),</span><span class=\"bold_code bc-12\">sofs:to_external(F2).</span>[{a,[1,2,3]},{b,[]}]</pre></div> <p><span class=\"code\">family_union(F)</span> is equivalent to <span class=\"code\">family_projection(fun sofs:union/1,&#xA0;F)</span>.</p> <p></p></div> <a name=\"family_union-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-family_union-2-id364456\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L906\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>family_union(Family1, Family2) -&gt; Family3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family1 = Family2 = Family3 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">Family1</span> and <span class=\"code\">Family2</span> are <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">families</a></span>, then <span class=\"code\">Family3</span> is the family such that the index set is the union of <span class=\"code\">Family1</span>:s and <span class=\"code\">Family2</span>:s index sets, and <span class=\"code\">Family3</span>[i] is the union of <span class=\"code\">Family1</span>[i] and <span class=\"code\">Family2</span>[i] if both map i, otherwise <span class=\"code\">Family1</span>[i] or <span class=\"code\">Family2</span>[i].</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">F1 = sofs:family([{a,[1,2]},{b,[3,4]},{c,[5,6]}]),</span><span class=\"bold_code bc-12\">F2 = sofs:family([{b,[4,5]},{c,[7,8]},{d,[9,10]}]),</span><span class=\"bold_code bc-12\">F3 = sofs:family_union(F1, F2),</span><span class=\"bold_code bc-12\">sofs:to_external(F3).</span>[{a,[1,2]},{b,[3,4,5]},{c,[5,6,7,8]},{d,[9,10]}]</pre></div> <p></p></div> <a name=\"field-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-field-1-id364650\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L928\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>field(BinRel) -&gt; Set</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#field\">field</a></span> of the binary relation <span class=\"code\">BinRel</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R = sofs:relation([{1,a},{1,b},{2,b},{2,c}]),</span><span class=\"bold_code bc-12\">S = sofs:field(R),</span><span class=\"bold_code bc-12\">sofs:to_external(S).</span>[1,2,a,b,c]</pre></div> <p><span class=\"code\">field(R)</span> is equivalent to <span class=\"code\">union(domain(R), range(R))</span>.</p> <p></p></div> <a name=\"from_external-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-from_external-2-id364660\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L944\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>from_external(ExternalSet, Type) -&gt; AnySet</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ExternalSet = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-external_set\">external_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AnySet = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-anyset\">anyset()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-type\">type()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a set from the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#external_set\">external set</a></span> <span class=\"code\">ExternalSet</span> and the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type\">type</a></span> <span class=\"code\">Type</span>. It is assumed that <span class=\"code\">Type</span> is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#valid_type\">valid type</a></span> of <span class=\"code\">ExternalSet</span>.</p> <p></p></div> <a name=\"from_sets-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-from_sets-1-id364813\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L957\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>from_sets(ListOfSets) -&gt; Set</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListOfSets = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-anyset\">anyset()</a></span>]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sets_definition\">unordered set</a></span> containing the sets of list <span class=\"code\">ListOfSets</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">S1 = sofs:relation([{a,1},{b,2}]),</span><span class=\"bold_code bc-12\">S2 = sofs:relation([{x,3},{y,4}]),</span><span class=\"bold_code bc-12\">S = sofs:from_sets([S1,S2]),</span><span class=\"bold_code bc-12\">sofs:to_external(S).</span>[[{a,1},{b,2}],[{x,3},{y,4}]]</pre></div> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-from_sets-1-id364999\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L973\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>from_sets(TupleOfSets) -&gt; Ordset</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Ordset = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-ordset\">ordset()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleOfSets = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-tuple_of\">tuple_of</a></span>(<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-anyset\">anyset()</a></span>)</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sets_definition\">ordered set</a></span> containing the sets of the non-empty tuple <span class=\"code\">TupleOfSets</span>.</p> <p></p></div> <a name=\"from_term-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-from_term-1-id365154\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L983\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>from_term(Term) -&gt; AnySet</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"from_term-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-from_term-2-id365148\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L983\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>from_term(Term, Type) -&gt; AnySet</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AnySet = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-anyset\">anyset()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Term = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-type\">type()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p><a name=\"from_term\"></a>Creates an element of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sets_definition\">Sets</a></span> by traversing term <span class=\"code\">Term</span>, sorting lists, removing duplicates, and deriving or verifying a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#valid_type\">valid type</a></span> for the so obtained external set. An explicitly specified <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type\">type</a></span> <span class=\"code\">Type</span> can be used to limit the depth of the traversal; an atomic type stops the traversal, as shown by the following example where <span class=\"code\">&quot;foo&quot;</span> and <span class=\"code\">{&quot;foo&quot;}</span> are left unmodified:</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">S = sofs:from_term([{{&quot;foo&quot;},[1,1]},{&quot;foo&quot;,[2,2]}],[{atom,[atom]}]),</span><span class=\"bold_code bc-12\">sofs:to_external(S).</span>[{{&quot;foo&quot;},[1]},{&quot;foo&quot;,[2]}]</pre></div> <p><span class=\"code\">from_term</span> can be used for creating atomic or ordered sets. The only purpose of such a set is that of later building unordered sets, as all functions in this module that <strong>do</strong> anything operate on unordered sets. Creating unordered sets from a collection of ordered sets can be the way to go if the ordered sets are big and one does not want to waste heap by rebuilding the elements of the unordered set. The following example shows that a set can be built &quot;layer by layer&quot;:</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">A = sofs:from_term(a),</span><span class=\"bold_code bc-12\">S = sofs:set([1,2,3]),</span><span class=\"bold_code bc-12\">P1 = sofs:from_sets({A,S}),</span><span class=\"bold_code bc-12\">P2 = sofs:from_term({b,[6,5,4]}),</span><span class=\"bold_code bc-12\">Ss = sofs:from_sets([P1,P2]),</span><span class=\"bold_code bc-12\">sofs:to_external(Ss).</span>[{a,[1,2,3]},{b,[4,5,6]}]</pre></div> <p>Other functions that create sets are <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#from_external-2\"><span class=\"code\">from_external/2</span></a></span> and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#from_sets-1\"><span class=\"code\">from_sets/1</span></a></span>. Special cases of <span class=\"code\">from_term/2</span> are <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#a_function-1\"><span class=\"code\">a_function/1,2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#empty_set-0\"><span class=\"code\">empty_set/0</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family-1\"><span class=\"code\">family/1,2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#relation-1\"><span class=\"code\">relation/1,2</span></a></span>, and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#set-1\"><span class=\"code\">set/1,2</span></a></span>.</p> <p></p></div> <a name=\"image-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-image-2-id365608\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1033\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>image(BinRel, Set1) -&gt; Set2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#image\">image</a></span> of set <span class=\"code\">Set1</span> under the binary relation <span class=\"code\">BinRel</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R = sofs:relation([{1,a},{2,b},{2,c},{3,d}]),</span><span class=\"bold_code bc-12\">S1 = sofs:set([1,2]),</span><span class=\"bold_code bc-12\">S2 = sofs:image(R, S1),</span><span class=\"bold_code bc-12\">sofs:to_external(S2).</span>[a,b,c]</pre></div> <p></p></div> <a name=\"intersection-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-intersection-1-id365763\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1049\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>intersection(SetOfSets) -&gt; Set</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SetOfSets = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-set_of_sets\">set_of_sets()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#intersection_n\">intersection</a></span> of the set of sets <span class=\"code\">SetOfSets</span>.</p> <p>Intersecting an empty set of sets exits the process with a <span class=\"code\">badarg</span> message.</p> <p></p></div> <a name=\"intersection-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-intersection-2-id365600\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1061\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>intersection(Set1, Set2) -&gt; Set3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = Set3 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#intersection\">intersection</a></span> of <span class=\"code\">Set1</span> and <span class=\"code\">Set2</span>.</p> <p></p></div> <a name=\"intersection_of_family-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-intersection_of_family-1-id365790\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1071\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>intersection_of_family(Family) -&gt; Set</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the intersection of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family</a></span> <span class=\"code\">Family</span>. </p> <p>Intersecting an empty family exits the process with a <span class=\"code\">badarg</span> message.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">F = sofs:family([{a,[0,2,4]},{b,[0,1,2]},{c,[2,3]}]),</span><span class=\"bold_code bc-12\">S = sofs:intersection_of_family(F),</span><span class=\"bold_code bc-12\">sofs:to_external(S).</span>[2]</pre></div> <p></p></div> <a name=\"inverse-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-inverse-1-id365918\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1088\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>inverse(Function1) -&gt; Function2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Function1 = Function2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_function\">a_function()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#inverse\">inverse</a></span> of function <span class=\"code\">Function1</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R1 = sofs:relation([{1,a},{2,b},{3,c}]),</span><span class=\"bold_code bc-12\">R2 = sofs:inverse(R1),</span><span class=\"bold_code bc-12\">sofs:to_external(R2).</span>[{a,1},{b,2},{c,3}]</pre></div> <p></p></div> <a name=\"inverse_image-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-inverse_image-2-id366262\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1102\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>inverse_image(BinRel, Set1) -&gt; Set2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#inverse_image\">inverse image</a></span> of <span class=\"code\">Set1</span> under the binary relation <span class=\"code\">BinRel</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R = sofs:relation([{1,a},{2,b},{2,c},{3,d}]),</span><span class=\"bold_code bc-12\">S1 = sofs:set([c,d,e]),</span><span class=\"bold_code bc-12\">S2 = sofs:inverse_image(R, S1),</span><span class=\"bold_code bc-12\">sofs:to_external(S2).</span>[2,3]</pre></div> <p></p></div> <a name=\"is_a_function-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-is_a_function-1-id366418\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1119\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>is_a_function(BinRel) -&gt; Bool</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bool = boolean()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if the binary relation <span class=\"code\">BinRel</span> is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#function\">function</a></span> or the untyped empty set, otherwise <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"is_disjoint-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-is_disjoint-2-id366518\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1129\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>is_disjoint(Set1, Set2) -&gt; Bool</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bool = boolean()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if <span class=\"code\">Set1</span> and <span class=\"code\">Set2</span> are <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#disjoint\">disjoint</a></span>, otherwise <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"is_empty_set-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-is_empty_set-1-id366521\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1140\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>is_empty_set(AnySet) -&gt; Bool</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AnySet = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-anyset\">anyset()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bool = boolean()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if <span class=\"code\">AnySet</span> is an empty unordered set, otherwise <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"is_equal-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-is_equal-2-id366687\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1149\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>is_equal(AnySet1, AnySet2) -&gt; Bool</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AnySet1 = AnySet2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-anyset\">anyset()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bool = boolean()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if <span class=\"code\">AnySet1</span> and <span class=\"code\">AnySet2</span> are <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#equal\">equal</a></span>, otherwise <span class=\"code\">false</span>. The following example shows that <span class=\"code\">==/2</span> is used when comparing sets for equality:</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">S1 = sofs:set([1.0]),</span><span class=\"bold_code bc-12\">S2 = sofs:set([1]),</span><span class=\"bold_code bc-12\">sofs:is_equal(S1, S2).</span>true</pre></div> <p></p></div> <a name=\"is_set-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-is_set-1-id366918\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1166\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>is_set(AnySet) -&gt; Bool</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AnySet = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-anyset\">anyset()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bool = boolean()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if <span class=\"code\">AnySet</span> is an <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sets_definition\">unordered set</a></span>, and <span class=\"code\">false</span> if <span class=\"code\">AnySet</span> is an ordered set or an atomic set.</p> <p></p></div> <a name=\"is_sofs_set-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-is_sofs_set-1-id366921\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1177\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>is_sofs_set(Term) -&gt; Bool</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bool = boolean()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Term = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if <span class=\"code\">Term</span> is an <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sets_definition\">unordered set</a></span>, an ordered set, or an atomic set, otherwise <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"is_subset-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-is_subset-2-id367142\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1187\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>is_subset(Set1, Set2) -&gt; Bool</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bool = boolean()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if <span class=\"code\">Set1</span> is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#subset\">subset</a></span> of <span class=\"code\">Set2</span>, otherwise <span class=\"code\">false</span>.</p> <p></p></div> <a name=\"is_type-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-is_type-1-id367146\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1197\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>is_type(Term) -&gt; Bool</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bool = boolean()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Term = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if term <span class=\"code\">Term</span> is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type\">type</a></span>.</p> <p></p></div> <a name=\"join-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-join-4-id367369\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1206\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>join(Relation1, I, Relation2, J) -&gt; Relation3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Relation1 = Relation2 = Relation3 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-relation\">relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">I = J = integer() &gt;= 1</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#natural_join\">natural join</a></span> of the relations <span class=\"code\">Relation1</span> and <span class=\"code\">Relation2</span> on coordinates <span class=\"code\">I</span> and <span class=\"code\">J</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R1 = sofs:relation([{a,x,1},{b,y,2}]),</span><span class=\"bold_code bc-12\">R2 = sofs:relation([{1,f,g},{1,h,i},{2,3,4}]),</span><span class=\"bold_code bc-12\">J = sofs:join(R1, 3, R2, 1),</span><span class=\"bold_code bc-12\">sofs:to_external(J).</span>[{a,x,1,f,g},{a,x,1,h,i},{b,y,2,3,4}]</pre></div> <p></p></div> <a name=\"multiple_relative_product-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-multiple_relative_product-2-id367388\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1223\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>multiple_relative_product(TupleOfBinRels, BinRel1) -&gt; BinRel2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleOfBinRels = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-tuple_of\">tuple_of</a></span>(BinRel)</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel = BinRel1 = BinRel2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">TupleOfBinRels</span> is a non-empty tuple {R[1],&#xA0;...,&#xA0;R[n]} of binary relations and <span class=\"code\">BinRel1</span> is a binary relation, then <span class=\"code\">BinRel2</span> is the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#multiple_relative_product\">multiple relative product</a></span> of the ordered set (R[i],&#xA0;...,&#xA0;R[n]) and <span class=\"code\">BinRel1</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">Ri = sofs:relation([{a,1},{b,2},{c,3}]),</span><span class=\"bold_code bc-12\">R = sofs:relation([{a,b},{b,c},{c,a}]),</span><span class=\"bold_code bc-12\">MP = sofs:multiple_relative_product({Ri, Ri}, R),</span><span class=\"bold_code bc-12\">sofs:to_external(sofs:range(MP)).</span>[{1,2},{2,3},{3,1}]</pre></div> <p></p></div> <a name=\"no_elements-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-no_elements-1-id367716\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1244\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>no_elements(ASet) -&gt; NoElements</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ASet = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-ordset\">ordset()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">NoElements = integer() &gt;= 0</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the number of elements of the ordered or unordered set <span class=\"code\">ASet</span>.</p> <p></p></div> <a name=\"partition-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-partition-1-id367720\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1253\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>partition(SetOfSets) -&gt; Partition</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SetOfSets = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-set_of_sets\">set_of_sets()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Partition = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#partition\">partition</a></span> of the union of the set of sets <span class=\"code\">SetOfSets</span> such that two elements are considered equal if they belong to the same elements of <span class=\"code\">SetOfSets</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">Sets1 = sofs:from_term([[a,b,c],[d,e,f],[g,h,i]]),</span><span class=\"bold_code bc-12\">Sets2 = sofs:from_term([[b,c,d],[e,f,g],[h,i,j]]),</span><span class=\"bold_code bc-12\">P = sofs:partition(sofs:union(Sets1, Sets2)),</span><span class=\"bold_code bc-12\">sofs:to_external(P).</span>[[a],[b,c],[d],[e,f],[g],[h,i],[j]]</pre></div> <p></p></div> <a name=\"partition-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-partition-2-id367968\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1270\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>partition(SetFun, Set) -&gt; Partition</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SetFun = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-set_fun\">set_fun()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Partition = Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#partition\">partition</a></span> of <span class=\"code\">Set</span> such that two elements are considered equal if the results of applying <span class=\"code\">SetFun</span> are equal.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">Ss = sofs:from_term([[a],[b],[c,d],[e,f]]),</span><span class=\"bold_code bc-12\">SetFun = fun(S) -&gt; sofs:from_term(sofs:no_elements(S)) end,</span><span class=\"bold_code bc-12\">P = sofs:partition(SetFun, Ss),</span><span class=\"bold_code bc-12\">sofs:to_external(P).</span>[[[a],[b]],[[c,d],[e,f]]]</pre></div> <p></p></div> <a name=\"partition-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-partition-3-id367982\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1286\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>partition(SetFun, Set1, Set2) -&gt; {Set3, Set4}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SetFun = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-set_fun\">set_fun()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = Set3 = Set4 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a pair of sets that, regarded as constituting a set, forms a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#partition\">partition</a></span> of <span class=\"code\">Set1</span>. If the result of applying <span class=\"code\">SetFun</span> to an element of <span class=\"code\">Set1</span> gives an element in <span class=\"code\">Set2</span>, the element belongs to <span class=\"code\">Set3</span>, otherwise the element belongs to <span class=\"code\">Set4</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R1 = sofs:relation([{1,a},{2,b},{3,c}]),</span><span class=\"bold_code bc-12\">S = sofs:set([2,4,6]),</span><span class=\"bold_code bc-12\">{R2,R3} = sofs:partition(1, R1, S),</span><span class=\"bold_code bc-12\">{sofs:to_external(R2),sofs:to_external(R3)}.</span>{[{2,b}],[{1,a},{3,c}]}</pre></div> <p><span class=\"code\">partition(F,&#xA0;S1,&#xA0;S2)</span> is equivalent to <span class=\"code\">{restriction(F,&#xA0;S1,&#xA0;S2), drestriction(F,&#xA0;S1,&#xA0;S2)}</span>.</p> <p></p></div> <a name=\"partition_family-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-partition_family-2-id368332\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1309\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>partition_family(SetFun, Set) -&gt; Family</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SetFun = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-set_fun\">set_fun()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family</a></span> <span class=\"code\">Family</span> where the indexed set is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#partition\">partition</a></span> of <span class=\"code\">Set</span> such that two elements are considered equal if the results of applying <span class=\"code\">SetFun</span> are the same value i. This i is the index that <span class=\"code\">Family</span> maps onto the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#equivalence_class\">equivalence class</a></span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">S = sofs:relation([{a,a,a,a},{a,a,b,b},{a,b,b,b}]),</span><span class=\"bold_code bc-12\">SetFun = {external, fun({A,_,C,_}) -&gt; {A,C} end},</span><span class=\"bold_code bc-12\">F = sofs:partition_family(SetFun, S),</span><span class=\"bold_code bc-12\">sofs:to_external(F).</span>[{{a,a},[{a,a,a,a}]},{{a,b},[{a,a,b,b},{a,b,b,b}]}]</pre></div> <p></p></div> <a name=\"product-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-product-1-id368533\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1330\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>product(TupleOfSets) -&gt; Relation</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Relation = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-relation\">relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TupleOfSets = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-tuple_of\">tuple_of</a></span>(<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span>)</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Cartesian_product_tuple\">Cartesian product</a></span> of the non-empty tuple of sets <span class=\"code\">TupleOfSets</span>. If (x[1],&#xA0;...,&#xA0;x[n]) is an element of the n-ary relation <span class=\"code\">Relation</span>, then x[i] is drawn from element i of <span class=\"code\">TupleOfSets</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">S1 = sofs:set([a,b]),</span><span class=\"bold_code bc-12\">S2 = sofs:set([1,2]),</span><span class=\"bold_code bc-12\">S3 = sofs:set([x,y]),</span><span class=\"bold_code bc-12\">P3 = sofs:product({S1,S2,S3}),</span><span class=\"bold_code bc-12\">sofs:to_external(P3).</span>[{a,1,x},{a,1,y},{a,2,x},{a,2,y},{b,1,x},{b,1,y},{b,2,x},{b,2,y}]</pre></div> <p></p></div> <a name=\"product-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-product-2-id368704\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1349\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>product(Set1, Set2) -&gt; BinRel</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Cartesian_product\">Cartesian product</a></span> of <span class=\"code\">Set1</span> and <span class=\"code\">Set2</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">S1 = sofs:set([1,2]),</span><span class=\"bold_code bc-12\">S2 = sofs:set([a,b]),</span><span class=\"bold_code bc-12\">R = sofs:product(S1, S2),</span><span class=\"bold_code bc-12\">sofs:to_external(R).</span>[{1,a},{1,b},{2,a},{2,b}]</pre></div> <p><span class=\"code\">product(S1,&#xA0;S2)</span> is equivalent to <span class=\"code\">product({S1,&#xA0;S2})</span>.</p> <p></p></div> <a name=\"projection-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-projection-2-id368873\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1367\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>projection(SetFun, Set1) -&gt; Set2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SetFun = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-set_fun\">set_fun()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the set created by substituting each element of <span class=\"code\">Set1</span> by the result of applying <span class=\"code\">SetFun</span> to the element.</p> <p>If <span class=\"code\">SetFun</span> is a number i&#xA0;&gt;=&#xA0;1 and <span class=\"code\">Set1</span> is a relation, then the returned set is the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#projection\">projection</a></span> of <span class=\"code\">Set1</span> onto coordinate i.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">S1 = sofs:from_term([{1,a},{2,b},{3,a}]),</span><span class=\"bold_code bc-12\">S2 = sofs:projection(2, S1),</span><span class=\"bold_code bc-12\">sofs:to_external(S2).</span>[a,b]</pre></div> <p></p></div> <a name=\"range-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-range-1-id369046\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1386\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>range(BinRel) -&gt; Set</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#range\">range</a></span> of the binary relation <span class=\"code\">BinRel</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R = sofs:relation([{1,a},{1,b},{2,b},{2,c}]),</span><span class=\"bold_code bc-12\">S = sofs:range(R),</span><span class=\"bold_code bc-12\">sofs:to_external(S).</span>[a,b,c]</pre></div> <p></p></div> <a name=\"relation-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-relation-1-id369050\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1400\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>relation(Tuples) -&gt; Relation</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"relation-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-relation-2-id369208\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1400\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>relation(Tuples, Type) -&gt; Relation</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = N | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-type\">type()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Relation = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-relation\">relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Tuples = [tuple()]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#relation\">relation</a></span>. <span class=\"code\">relation(R,&#xA0;T)</span> is equivalent to <span class=\"code\">from_term(R,&#xA0;T)</span>, if T is a <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type\">type</a></span> and the result is a relation. If <span class=\"code\">Type</span> is an integer N, then <span class=\"code\">[{atom,&#xA0;...,&#xA0;atom}])</span>, where the tuple size is N, is used as type of the relation. If no type is explicitly specified, the size of the first tuple of <span class=\"code\">Tuples</span> is used if there is such a tuple. <span class=\"code\">relation([])</span> is equivalent to <span class=\"code\">relation([],&#xA0;2)</span>.</p> <p></p></div> <a name=\"relation_to_family-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-relation_to_family-1-id369399\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1419\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>relation_to_family(BinRel) -&gt; Family</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family</a></span> <span class=\"code\">Family</span> such that the index set is equal to the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#domain\">domain</a></span> of the binary relation <span class=\"code\">BinRel</span>, and <span class=\"code\">Family</span>[i] is the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#image\">image</a></span> of the set of i under <span class=\"code\">BinRel</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R = sofs:relation([{b,1},{c,2},{c,3}]),</span><span class=\"bold_code bc-12\">F = sofs:relation_to_family(R),</span><span class=\"bold_code bc-12\">sofs:to_external(F).</span>[{b,[1]},{c,[2,3]}]</pre></div> <p></p></div> <a name=\"relative_product-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-relative_product-1-id369568\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1437\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>relative_product(ListOfBinRels) -&gt; BinRel2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"relative_product-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-relative_product-2-id369596\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1437\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>relative_product(ListOfBinRels, BinRel1) -&gt; BinRel2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ListOfBinRels = [BinRel, ...]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel = BinRel1 = BinRel2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">ListOfBinRels</span> is a non-empty list [R[1],&#xA0;...,&#xA0;R[n]] of binary relations and <span class=\"code\">BinRel1</span> is a binary relation, then <span class=\"code\">BinRel2</span> is the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#tuple_relative_product\">relative product</a></span> of the ordered set (R[i],&#xA0;...,&#xA0;R[n]) and <span class=\"code\">BinRel1</span>.</p> <p>If <span class=\"code\">BinRel1</span> is omitted, the relation of equality between the elements of the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Cartesian_product_tuple\">Cartesian product</a></span> of the ranges of R[i], range&#xA0;R[1]&#xA0;&#xD7;&#xA0;...&#xA0;&#xD7;&#xA0;range&#xA0;R[n], is used instead (intuitively, nothing is &quot;lost&quot;).</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">TR = sofs:relation([{1,a},{1,aa},{2,b}]),</span><span class=\"bold_code bc-12\">R1 = sofs:relation([{1,u},{2,v},{3,c}]),</span><span class=\"bold_code bc-12\">R2 = sofs:relative_product([TR, R1]),</span><span class=\"bold_code bc-12\">sofs:to_external(R2).</span>[{1,{a,u}},{1,{aa,u}},{2,{b,v}}]</pre></div> <p>Notice that <span class=\"code\">relative_product([R1],&#xA0;R2)</span> is different from <span class=\"code\">relative_product(R1,&#xA0;R2)</span>; the list of one element is not identified with the element itself.</p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-relative_product-2-id369807\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1468\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>relative_product(BinRel1, BinRel2) -&gt; BinRel3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel1 = BinRel2 = BinRel3 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#relative_product\">relative product</a></span> of the binary relations <span class=\"code\">BinRel1</span> and <span class=\"code\">BinRel2</span>.</p> <p></p></div> <a name=\"relative_product1-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-relative_product1-2-id369814\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1479\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>relative_product1(BinRel1, BinRel2) -&gt; BinRel3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel1 = BinRel2 = BinRel3 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#relative_product\">relative product</a></span> of the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#converse\">converse</a></span> of the binary relation <span class=\"code\">BinRel1</span> and the binary relation <span class=\"code\">BinRel2</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R1 = sofs:relation([{1,a},{1,aa},{2,b}]),</span><span class=\"bold_code bc-12\">R2 = sofs:relation([{1,u},{2,v},{3,c}]),</span><span class=\"bold_code bc-12\">R3 = sofs:relative_product1(R1, R2),</span><span class=\"bold_code bc-12\">sofs:to_external(R3).</span>[{a,u},{aa,u},{b,v}]</pre></div> <p><span class=\"code\">relative_product1(R1,&#xA0;R2)</span> is equivalent to <span class=\"code\">relative_product(converse(R1),&#xA0;R2)</span>.</p> <p></p></div> <a name=\"restriction-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-restriction-2-id370093\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1500\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>restriction(BinRel1, Set) -&gt; BinRel2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel1 = BinRel2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#restriction\">restriction</a></span> of the binary relation <span class=\"code\">BinRel1</span> to <span class=\"code\">Set</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R1 = sofs:relation([{1,a},{2,b},{3,c}]),</span><span class=\"bold_code bc-12\">S = sofs:set([1,2,4]),</span><span class=\"bold_code bc-12\">R2 = sofs:restriction(R1, S),</span><span class=\"bold_code bc-12\">sofs:to_external(R2).</span>[{1,a},{2,b}]</pre></div> <p></p></div> <a name=\"restriction-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-restriction-3-id370086\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1516\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>restriction(SetFun, Set1, Set2) -&gt; Set3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SetFun = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-set_fun\">set_fun()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = Set3 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a subset of <span class=\"code\">Set1</span> containing those elements that gives an element in <span class=\"code\">Set2</span> as the result of applying <span class=\"code\">SetFun</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">S1 = sofs:relation([{1,a},{2,b},{3,c}]),</span><span class=\"bold_code bc-12\">S2 = sofs:set([b,c,d]),</span><span class=\"bold_code bc-12\">S3 = sofs:restriction(2, S1, S2),</span><span class=\"bold_code bc-12\">sofs:to_external(S3).</span>[{2,b},{3,c}]</pre></div> <p></p></div> <a name=\"set-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-set-1-id370085\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1532\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>set(Terms) -&gt; Set</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"set-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-set-2-id370082\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1532\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>set(Terms, Type) -&gt; Set</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Terms = [term()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-type\">type()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates an <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#sets_definition\">unordered set</a></span>. <span class=\"code\">set(L,&#xA0;T)</span> is equivalent to <span class=\"code\">from_term(L,&#xA0;T)</span>, if the result is an unordered set. If no <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type\">type</a></span> is explicitly specified, <span class=\"code\">[atom]</span> is used as the set type.</p> <p></p></div> <a name=\"specification-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-specification-2-id372142\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1545\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>specification(Fun, Set1) -&gt; Set2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-spec_fun\">spec_fun()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the set containing every element of <span class=\"code\">Set1</span> for which <span class=\"code\">Fun</span> returns <span class=\"code\">true</span>. If <span class=\"code\">Fun</span> is a tuple <span class=\"code\">{external,&#xA0;Fun2}</span>, <span class=\"code\">Fun2</span> is applied to the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#external_set\">external set</a></span> of each element, otherwise <span class=\"code\">Fun</span> is applied to each element.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R1 = sofs:relation([{a,1},{b,2}]),</span><span class=\"bold_code bc-12\">R2 = sofs:relation([{x,1},{x,2},{y,3}]),</span><span class=\"bold_code bc-12\">S1 = sofs:from_sets([R1,R2]),</span><span class=\"bold_code bc-12\">S2 = sofs:specification(fun sofs:is_a_function/1, S1),</span><span class=\"bold_code bc-12\">sofs:to_external(S2).</span>[[{a,1},{b,2}]]</pre></div> <p></p></div> <a name=\"strict_relation-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-strict_relation-1-id372417\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1566\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>strict_relation(BinRel1) -&gt; BinRel2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel1 = BinRel2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#strict_relation\">strict relation</a></span> corresponding to the binary relation <span class=\"code\">BinRel1</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R1 = sofs:relation([{1,1},{1,2},{2,1},{2,2}]),</span><span class=\"bold_code bc-12\">R2 = sofs:strict_relation(R1),</span><span class=\"bold_code bc-12\">sofs:to_external(R2).</span>[{1,2},{2,1}]</pre></div> <p></p></div> <a name=\"substitution-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-substitution-2-id372435\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1582\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>substitution(SetFun, Set1) -&gt; Set2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SetFun = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-set_fun\">set_fun()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a function, the domain of which is <span class=\"code\">Set1</span>. The value of an element of the domain is the result of applying <span class=\"code\">SetFun</span> to the element.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">L = [{a,1},{b,2}].</span>[{a,1},{b,2}]2&gt; <span class=\"bold_code bc-12\">sofs:to_external(sofs:projection(1,sofs:relation(L))).</span>[a,b]3&gt; <span class=\"bold_code bc-12\">sofs:to_external(sofs:substitution(1,sofs:relation(L))).</span>[{{a,1},a},{{b,2},b}]4&gt; <span class=\"bold_code bc-12\">SetFun = {external, fun({A,_}=E) -&gt; {E,A} end},</span><span class=\"bold_code bc-12\">sofs:to_external(sofs:projection(SetFun,sofs:relation(L))).</span>[{{a,1},a},{{b,2},b}]</pre></div> <p>The relation of equality between the elements of {a,b,c}:</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">I = sofs:substitution(fun(A) -&gt; A end, sofs:set([a,b,c])),</span><span class=\"bold_code bc-12\">sofs:to_external(I).</span>[{a,a},{b,b},{c,c}]</pre></div> <p>Let <span class=\"code\">SetOfSets</span> be a set of sets and <span class=\"code\">BinRel</span> a binary relation. The function that maps each element <span class=\"code\">Set</span> of <span class=\"code\">SetOfSets</span> onto the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#image\">image</a></span> of <span class=\"code\">Set</span> under <span class=\"code\">BinRel</span> is returned by the following function:</p> <div class=\"example\"><pre>images(SetOfSets, BinRel) -&gt; Fun = fun(Set) -&gt; sofs:image(BinRel, Set) end, sofs:substitution(Fun, SetOfSets).</pre></div> <p>External unordered sets are represented as sorted lists. So, creating the image of a set under a relation R can traverse all elements of R (to that comes the sorting of results, the image). In <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#image-2\"><span class=\"code\">image/2</span></a></span>, <span class=\"code\">BinRel</span> is traversed once for each element of <span class=\"code\">SetOfSets</span>, which can take too long. The following efficient function can be used instead under the assumption that the image of each element of <span class=\"code\">SetOfSets</span> under <span class=\"code\">BinRel</span> is non-empty:</p> <div class=\"example\"><pre>images2(SetOfSets, BinRel) -&gt; CR = sofs:canonical_relation(SetOfSets), R = sofs:relative_product1(CR, BinRel), sofs:relation_to_family(R).</pre></div> <p></p></div> <a name=\"symdiff-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-symdiff-2-id370122\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1631\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>symdiff(Set1, Set2) -&gt; Set3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = Set3 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#symmetric_difference\">symmetric difference</a></span> (or the Boolean sum) of <span class=\"code\">Set1</span> and <span class=\"code\">Set2</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">S1 = sofs:set([1,2,3]),</span><span class=\"bold_code bc-12\">S2 = sofs:set([2,3,4]),</span><span class=\"bold_code bc-12\">P = sofs:symdiff(S1, S2),</span><span class=\"bold_code bc-12\">sofs:to_external(P).</span>[1,4]</pre></div> <p></p></div> <a name=\"symmetric_partition-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-symmetric_partition-2-id370266\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1647\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>symmetric_partition(Set1, Set2) -&gt; {Set3, Set4, Set5}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = Set3 = Set4 = Set5 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a triple of sets:</p> <ul> <li><span class=\"code\">Set3</span> contains the elements of <span class=\"code\">Set1</span> that do not belong to <span class=\"code\">Set2</span>. </li> <li><span class=\"code\">Set4</span> contains the elements of <span class=\"code\">Set1</span> that belong to <span class=\"code\">Set2</span>. </li> <li><span class=\"code\">Set5</span> contains the elements of <span class=\"code\">Set2</span> that do not belong to <span class=\"code\">Set1</span>. </li> </ul> <p></p></div> <a name=\"to_external-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-to_external-1-id370446\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1668\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>to_external(AnySet) -&gt; ExternalSet</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ExternalSet = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-external_set\">external_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AnySet = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-anyset\">anyset()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#external_set\">external set</a></span> of an atomic, ordered, or unordered set.</p> <p></p></div> <a name=\"to_sets-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-to_sets-1-id370552\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1677\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>to_sets(ASet) -&gt; Sets</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ASet = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-ordset\">ordset()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Sets = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-tuple_of\">tuple_of</a></span>(AnySet) | [AnySet]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AnySet = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-anyset\">anyset()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the elements of the ordered set <span class=\"code\">ASet</span> as a tuple of sets, and the elements of the unordered set <span class=\"code\">ASet</span> as a sorted list of sets without duplicates.</p> <p></p></div> <a name=\"type-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-type-1-id370541\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1688\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>type(AnySet) -&gt; Type</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AnySet = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-anyset\">anyset()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-type\">type()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type\">type</a></span> of an atomic, ordered, or unordered set.</p> <p></p></div> <a name=\"union-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-union-1-id370464\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1697\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>union(SetOfSets) -&gt; Set</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SetOfSets = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-set_of_sets\">set_of_sets()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#union_n\">union</a></span> of the set of sets <span class=\"code\">SetOfSets</span>.</p> <p></p></div> <a name=\"union-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-union-2-id370275\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1706\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>union(Set1, Set2) -&gt; Set3</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set1 = Set2 = Set3 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#union\">union</a></span> of <span class=\"code\">Set1</span> and <span class=\"code\">Set2</span>.</p> <p></p></div> <a name=\"union_of_family-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-union_of_family-1-id370798\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1715\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>union_of_family(Family) -&gt; Set</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Family = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-family\">family()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Set = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-a_set\">a_set()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the union of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#family\">family</a></span> <span class=\"code\">Family</span>.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">F = sofs:family([{a,[0,2,4]},{b,[0,1,2]},{c,[2,3]}]),</span><span class=\"bold_code bc-12\">S = sofs:union_of_family(F),</span><span class=\"bold_code bc-12\">sofs:to_external(S).</span>[0,1,2,3,4]</pre></div> <p></p></div> <a name=\"weak_relation-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-weak_relation-1-id371142\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/sofs.xml#L1729\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>weak_relation(BinRel1) -&gt; BinRel2</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BinRel1 = BinRel2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-binary_relation\">binary_relation()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a subset S of the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#weak_relation\">weak relation</a></span> W corresponding to the binary relation <span class=\"code\">BinRel1</span>. Let F be the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#field\">field</a></span> of <span class=\"code\">BinRel1</span>. The subset S is defined so that x S y if x W y for some x in F and for some y in F.</p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">R1 = sofs:relation([{1,1},{1,2},{3,1}]),</span><span class=\"bold_code bc-12\">R2 = sofs:weak_relation(R1),</span><span class=\"bold_code bc-12\">sofs:to_external(R2).</span>[{1,1},{1,2},{2,2},{3,1},{3,3}]</pre></div> <p></p></div> ","name":"sofs"}