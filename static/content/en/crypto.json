{"summary":"Crypto Functions","description":"<p> </p><p>This module provides a set of cryptographic functions. </p> <dl> <dt><strong>Hash functions</strong></dt> <dd> <p></p> <dl> <dt><strong>SHA1, SHA2</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\"> Secure Hash Standard [FIPS PUB 180-4] </a></span> </dd> <dt><strong>SHA3</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.nist.gov/publications/sha-3-standard-permutation-based-hash-and-extendable-output-functions?pub_id=919061\"> SHA-3 Standard: Permutation-Based Hash and Extendable-Output Functions [FIPS PUB 202] </a></span> </dd> <dt><strong>BLAKE2</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://blake2.net/\">BLAKE2 &#x2014; fast secure hashing</a></span> </dd> <dt><strong>MD5</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.ietf.org/rfc/rfc1321.txt\">The MD5 Message Digest Algorithm [RFC 1321]</a></span> </dd> <dt><strong>MD4</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.ietf.org/rfc/rfc1320.txt\">The MD4 Message Digest Algorithm [RFC 1320]</a></span> </dd> </dl> <p></p> </dd> <dt><strong>MACs - Message Authentication Codes</strong></dt> <dd> <p></p> <dl> <dt><strong>Hmac functions</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.ietf.org/rfc/rfc2104.txt\"> Keyed-Hashing for Message Authentication [RFC 2104] </a></span> </dd> <dt><strong>Cmac functions</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.ietf.org/rfc/rfc4493.txt\"> The AES-CMAC Algorithm [RFC 4493] </a></span> </dd> <dt><strong>POLY1305</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.ietf.org/rfc/rfc7539.txt\"> ChaCha20 and Poly1305 for IETF Protocols [RFC 7539] </a></span> </dd> </dl> <p></p> </dd> <dt><strong>Symmetric Ciphers</strong></dt> <dd> <p></p> <dl> <dt><strong>DES, 3DES and AES</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://csrc.nist.gov/projects/block-cipher-techniques\">Block Cipher Techniques [NIST]</a></span> </dd> <dt><strong>Blowfish</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://www.schneier.com/academic/archives/1994/09/description_of_a_new\"> Fast Software Encryption, Cambridge Security Workshop Proceedings (December 1993), Springer-Verlag, 1994, pp. 191-204. </a></span> </dd> <dt><strong>Chacha20</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.ietf.org/rfc/rfc7539.txt\"> ChaCha20 and Poly1305 for IETF Protocols [RFC 7539] </a></span> </dd> <dt><strong>Chacha20_poly1305</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.ietf.org/rfc/rfc7539.txt\"> ChaCha20 and Poly1305 for IETF Protocols [RFC 7539] </a></span> </dd> </dl> <p></p> </dd> <dt><strong>Modes</strong></dt> <dd> <p></p> <dl> <dt><strong>ECB, CBC, CFB, OFB and CTR</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://csrc.nist.gov/publications/detail/sp/800-38a/final\"> Recommendation for Block Cipher Modes of Operation: Methods and Techniques [NIST SP 800-38A] </a></span> </dd> <dt><strong>GCM</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://csrc.nist.gov/publications/detail/sp/800-38d/final\"> Recommendation for Block Cipher Modes of Operation: Galois/Counter Mode (GCM) and GMAC [NIST SP 800-38D] </a></span> </dd> <dt><strong>CCM</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-38c.pdf\"> Recommendation for Block Cipher Modes of Operation: The CCM Mode for Authentication and Confidentiality [NIST SP 800-38C] </a></span> </dd> </dl> <p></p> </dd> <dt><strong>Asymetric Ciphers - Public Key Techniques</strong></dt> <dd> <p></p> <dl> <dt><strong>RSA</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.ietf.org/rfc/rfc3447.txt\"> PKCS #1: RSA Cryptography Specifications [RFC 3447] </a></span> </dd> <dt><strong>DSS</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/https://csrc.nist.gov/publications/detail/fips/186/4/final\"> Digital Signature Standard (DSS) [FIPS 186-4] </a></span> </dd> <dt><strong>ECDSA</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://csrc.nist.gov/groups/STM/cavp/documents/dss2/ecdsa2vs.pdf\"> Elliptic Curve Digital Signature Algorithm [ECDSA] </a></span> </dd> <dt><strong>SRP</strong></dt> <dd> <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.ietf.org/rfc/rfc2945.txt\"> The SRP Authentication and Key Exchange System [RFC 2945] </a></span> </dd> </dl> <p></p> </dd> </dl> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>The actual supported algorithms and features depends on their availability in the actual libcrypto used. See the <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/crypto_app\">crypto (App)</a></span> about dependencies. </p> <p>Enabling FIPS mode will also disable algorithms and features. </p> <p></p></div></div> <p>The <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/../apps/crypto/users_guide\">CRYPTO User&apos;s Guide</a></span> has more information on FIPS, Engines and Algorithm Details like key lengths. </p> <p></p>","funcs":" <a name=\"crypto_init-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-crypto_init-3-id96171\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L673\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>crypto_init(Cipher, Key, EncryptFlag) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;State | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cipher = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-cipher_no_iv\">cipher_no_iv()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">EncryptFlag = boolean()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">State = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-crypto_state\">crypto_state()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>As <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#crypto_init-4\">crypto_init/4</a></span> but for ciphers without IVs.</p> <p></p></div> <a name=\"crypto_init-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-crypto_init-4-id96316\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L681\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>crypto_init(Cipher, Key, IV, EncryptFlag) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;State | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cipher = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-cipher_iv\">cipher_iv()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = IV = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">EncryptFlag = boolean()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">State = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-crypto_state\">crypto_state()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Part of the <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/crypto/new_api#the-new-api\">new API</a></span>. Initializes a series of encryptions or decryptions and creates an internal state with a reference that is returned. The actual encryption or decryption is done by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/crypto#crypto_update-2\">crypto_update/2</a></span>. </p> <p>For encryption, set the <span class=\"code\">EncryptFlag</span> to <span class=\"code\">true</span>. For decryption, set it to <span class=\"code\">false</span>. </p> <p>See <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/crypto/new_api#examples-of-crypto_init-4-and-crypto_update-2\">examples in the User&apos;s Guide.</a></span> </p> <p></p></div> <a name=\"crypto_update-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-crypto_update-2-id96182\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L699\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>crypto_update(State, Data) -&gt; Result | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">State = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-crypto_state\">crypto_state()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Data = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Part of the <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/crypto/new_api#the-new-api\">new API</a></span>. It does an actual crypto operation on a part of the full text. If the part is less than a number of full blocks, only the full blocks (possibly none) are encrypted or decrypted and the remaining bytes are saved to the next <span class=\"code\">crypto_update</span> operation. The <span class=\"code\">State</span> should be created with <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/crypto#crypto_init-3\">crypto_init/3</a></span> or <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/crypto#crypto_init-4\">crypto_init/4</a></span>. </p> <p>See <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/crypto/new_api#examples-of-crypto_init-4-and-crypto_update-2\">examples in the User&apos;s Guide.</a></span> </p> <p></p></div> <a name=\"crypto_dyn_iv_init-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-crypto_dyn_iv_init-3-id96687\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L718\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>crypto_dyn_iv_init(Cipher, Key, EncryptFlag) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;State | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cipher = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-cipher_iv\">cipher_iv()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">EncryptFlag = boolean()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">State = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-crypto_state\">crypto_state()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Part of the <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/crypto/new_api#the-new-api\">new API</a></span>. Initializes a series of encryptions or decryptions where the IV is provided later. The actual encryption or decryption is done by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/crypto#crypto_dyn_iv_update-3\">crypto_dyn_iv_update/3</a></span>. </p> <p>For encryption, set the <span class=\"code\">EncryptFlag</span> to <span class=\"code\">true</span>. For decryption, set it to <span class=\"code\">false</span>. </p> <p></p></div> <a name=\"crypto_dyn_iv_update-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-crypto_dyn_iv_update-3-id96681\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L732\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>crypto_dyn_iv_update(State, Data, IV) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Result | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">State = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-crypto_state\">crypto_state()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Data = IV = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Part of the <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/crypto/new_api#the-new-api\">new API</a></span>. Do an actual crypto operation on a part of the full text and the IV is supplied for each part. The <span class=\"code\">State</span> should be created with <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/crypto#crypto_dyn_iv_init-3\">crypto_dyn_iv_init/3</a></span>. </p> <p></p></div> <a name=\"crypto_one_time-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-crypto_one_time-4-id96896\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L744\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>crypto_one_time(Cipher, Key, Data, EncryptFlag) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Result | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cipher = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-cipher_no_iv\">cipher_no_iv()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = Data = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">EncryptFlag = boolean()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>As <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#crypto_one_time-5\">crypto_one_time/5</a></span> but for ciphers without IVs.</p> <p></p></div> <a name=\"crypto_one_time-5\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-crypto_one_time-5-id97155\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L752\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>crypto_one_time(Cipher, Key, IV, Data, EncryptFlag) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Result | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cipher = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-cipher_iv\">cipher_iv()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = IV = Data = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">EncryptFlag = boolean()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Part of the <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/crypto/new_api#the-new-api\">new API</a></span>. Do a complete encrypt or decrypt of the full text in the argument <span class=\"code\">Data</span>. </p> <p>For encryption, set the <span class=\"code\">EncryptFlag</span> to <span class=\"code\">true</span>. For decryption, set it to <span class=\"code\">false</span>. </p> <p>See <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/crypto/new_api#example-of-crypto_one_time-5\">examples in the User&apos;s Guide.</a></span> </p> <p></p></div> <a name=\"crypto_one_time_aead-6\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-crypto_one_time_aead-6-id96897\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L766\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>crypto_one_time_aead(Cipher, Key, IV, InText, AAD,<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;EncFlag :: true) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Result | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.0</span></td></tr></tbody></table><a name=\"crypto_one_time_aead-7\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-crypto_one_time_aead-7-id97487\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L766\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>crypto_one_time_aead(Cipher, Key, IV, InText, AAD, TagOrTagLength,<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;EncFlag) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Result | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Cipher = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-cipher_aead\">cipher_aead()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = IV = InText = AAD = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">TagOrTagLength = EncryptTagLength | DecryptTag</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">EncryptTagLength = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DecryptTag = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">EncFlag = boolean()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = EncryptResult | DecryptResult</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">EncryptResult = {OutCryptoText, OutTag}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DecryptResult = OutPlainText | error</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">OutCryptoText = OutTag = OutPlainText = binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Part of the <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/crypto/new_api#the-new-api\">new API</a></span>. Do a complete encrypt or decrypt with an AEAD cipher of the full text. </p> <p>For encryption, set the <span class=\"code\">EncryptFlag</span> to <span class=\"code\">true</span> and set the <span class=\"code\">TagOrTagLength</span> to the wanted size of the tag, that is, the tag length. If the default length is wanted, the <span class=\"code\">crypto_aead/6</span> form may be used. </p> <p>For decryption, set the <span class=\"code\">EncryptFlag</span> to <span class=\"code\">false</span> and put the tag to be checked in the argument\t<span class=\"code\">TagOrTagLength</span>. </p> <p>See <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/crypto/new_api#example-of-crypto_one_time_aead-6\">examples in the User&apos;s Guide.</a></span> </p> <p></p></div> <a name=\"supports-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-supports-1-id97483\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L786\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>supports(Type) -&gt; Support</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = hashs | ciphers | public_keys | macs | curves | rsa_opts</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Support = Hashs | Ciphers | PKs | Macs | Curves | RSAopts</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Hashs = <br>&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sha1\">sha1()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sha2\">sha2()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-sha3\">sha3()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-blake2\">blake2()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ripemd160 |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-compatibility_only_hash\">compatibility_only_hash()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Ciphers = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-cipher\">cipher()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">PKs = [rsa | dss | ecdsa | dh | ecdh | ec_gf2m]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Macs = [hmac | cmac | poly1305]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Curves = <br>&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-ec_named_curve\">ec_named_curve()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-edwards_curve_dh\">edwards_curve_dh()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-edwards_curve_ed\">edwards_curve_ed()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RSAopts = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-rsa_sign_verify_opt\">rsa_sign_verify_opt()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-rsa_opt\">rsa_opt()</a></span>]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p> Can be used to determine which crypto algorithms that are supported by the underlying libcrypto library</p> <p>See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#hash_info-1\">hash_info/1</a></span> and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#cipher_info-1\">cipher_info/1</a></span> for information about the hash and cipher algorithms. </p> <p></p></div> <a name=\"mac-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-mac-3-id96901\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L798\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>mac(Type :: poly1305, Key, Data) -&gt; Mac | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = Data = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Mac = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Short for <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mac-4\">mac(Type, undefined, Key, Data)</a></span>. </p> <p></p></div> <a name=\"mac-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-mac-4-id97442\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L807\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>mac(Type, SubType, Key, Data) -&gt; Mac | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = hmac | cmac | poly1305</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SubType = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-hmac_hash_algorithm\">hmac_hash_algorithm()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-cmac_cipher_algorithm\">cmac_cipher_algorithm()</a></span> | undefined</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = Data = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Mac = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Computes a MAC (Message Authentication Code) of type <span class=\"code\">Type</span> from <span class=\"code\">Data</span>. </p> <p><span class=\"code\">SubType</span> depends on the MAC <span class=\"code\">Type</span>: </p> <ul> <li>For <span class=\"code\">hmac</span> it is a hash algorithm, see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/crypto/algorithm_details#hmac\">Algorithm Details</a></span> in the User&apos;s Guide. </li> <li>For <span class=\"code\">cmac</span> it is a cipher suitable for cmac, see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/crypto/algorithm_details#cmac\">Algorithm Details</a></span> in the User&apos;s Guide. </li> <li>For <span class=\"code\">poly1305</span> it should be set to <span class=\"code\">undefined</span> or the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mac_init-2\">mac/2</a></span> function could be used instead, see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/crypto/algorithm_details#poly1305\">Algorithm Details</a></span> in the User&apos;s Guide. </li> </ul> <p><span class=\"code\">Key</span> is the authentication key with a length according to the <span class=\"code\">Type</span> and <span class=\"code\">SubType</span>. The key length could be found with the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#hash_info-1\">hash_info/1</a></span> (<span class=\"code\">hmac</span>) for and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#cipher_info-1\">cipher_info/1</a></span> (<span class=\"code\">cmac</span>) functions. For <span class=\"code\">poly1305</span> the key length is 32 bytes. Note that the cryptographic quality of the key is not checked. </p> <p>The <span class=\"code\">Mac</span> result will have a default length depending on the <span class=\"code\">Type</span> and <span class=\"code\">SubType</span>. To set a shorter length, use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#macN-4\">macN/4</a></span> or <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#macN-5\">macN/5</a></span> instead. The default length is documented in <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/crypto/algorithm_details#message-authentication-codes--macs-\">Algorithm Details</a></span> in the User&apos;s Guide. </p> <p></p></div> <a name=\"macN-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-macN-4-id90695\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L848\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>macN(Type :: poly1305, Key, Data, MacLength) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Mac | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = Data = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Mac = binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">MacLength = integer() &gt;= 1</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Short for <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#macN-5\">macN(Type, undefined, Key, Data, MacLength)</a></span>. </p> <p></p></div> <a name=\"macN-5\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-macN-5-id90826\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L857\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>macN(Type, SubType, Key, Data, MacLength) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Mac | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = hmac | cmac | poly1305</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SubType = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-hmac_hash_algorithm\">hmac_hash_algorithm()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-cmac_cipher_algorithm\">cmac_cipher_algorithm()</a></span> | undefined</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = Data = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Mac = binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">MacLength = integer() &gt;= 1</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Computes a MAC (Message Authentication Code) as <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mac-3\">mac/3</a></span> and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mac-4\">mac/4</a></span> but <span class=\"code\">MacLength</span> will limit the size of the resultant <span class=\"code\">Mac</span> to at most <span class=\"code\">MacLength</span> bytes. Note that if <span class=\"code\">MacLength</span> is greater than the actual number of bytes returned from the underlying hash, the returned hash will have that shorter length instead. </p> <p>The max <span class=\"code\">MacLength</span> is documented in <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/crypto/algorithm_details#message-authentication-codes--macs-\">Algorithm Details</a></span> in the User&apos;s Guide. </p> <p></p></div> <a name=\"mac_init-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-mac_init-2-id90870\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L876\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>mac_init(Type :: poly1305, Key) -&gt; State | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">State = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mac_state\">mac_state()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Short for <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mac_init-3\">mac_init(Type, undefined, Key)</a></span>. </p> <p></p></div> <a name=\"mac_init-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-mac_init-3-id91128\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L885\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>mac_init(Type, SubType, Key) -&gt; State | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Type = hmac | cmac | poly1305</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">SubType = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-hmac_hash_algorithm\">hmac_hash_algorithm()</a></span> | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-cmac_cipher_algorithm\">cmac_cipher_algorithm()</a></span> | undefined</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">State = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mac_state\">mac_state()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Initializes the context for streaming MAC operations. </p> <p><span class=\"code\">Type</span> determines which mac algorithm to use in the MAC operation. </p> <p><span class=\"code\">SubType</span> depends on the MAC <span class=\"code\">Type</span>: </p> <ul> <li>For <span class=\"code\">hmac</span> it is a hash algorithm, see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/crypto/algorithm_details#hmac\">Algorithm Details</a></span> in the User&apos;s Guide. </li> <li>For <span class=\"code\">cmac</span> it is a cipher suitable for cmac, see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/crypto/algorithm_details#cmac\">Algorithm Details</a></span> in the User&apos;s Guide. </li> <li>For <span class=\"code\">poly1305</span> it should be set to <span class=\"code\">undefined</span> or the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mac_init-2\">mac/2</a></span> function could be used instead, see <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/crypto/algorithm_details#poly1305\">Algorithm Details</a></span> in the User&apos;s Guide. </li> </ul> <p><span class=\"code\">Key</span> is the authentication key with a length according to the <span class=\"code\">Type</span> and <span class=\"code\">SubType</span>. The key length could be found with the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#hash_info-1\">hash_info/1</a></span> (<span class=\"code\">hmac</span>) for and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#cipher_info-1\">cipher_info/1</a></span> (<span class=\"code\">cmac</span>) functions. For <span class=\"code\">poly1305</span> the key length is 32 bytes. Note that the cryptographic quality of the key is not checked. </p> <p>The returned <span class=\"code\">State</span> should be used in one or more subsequent calls to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mac_update-2\">mac_update/2</a></span>. The MAC value is finally returned by calling <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mac_final-1\">mac_final/1</a></span> or <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mac_finalN-2\">mac_finalN/2</a></span>. </p> <p>See <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/crypto/new_api#example-of-mac_init-mac_update-and-mac_final\">examples in the User&apos;s Guide.</a></span> </p> <p></p></div> <a name=\"mac_update-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-mac_update-2-id91487\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L931\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>mac_update(State0, Data) -&gt; State | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Data = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">State0 = State = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mac_state\">mac_state()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Updates the MAC represented by <span class=\"code\">State0</span> using the given <span class=\"code\">Data</span> which could be of any length. </p> <p>The <span class=\"code\">State0</span> is the State value originally from a MAC init function, that is <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mac_init-2\">mac_init/2</a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mac_init-3\">mac_init/3</a></span> or a previous call of <span class=\"code\">mac_update/2</span>. The value <span class=\"code\">State0</span> is returned unchanged by the function as <span class=\"code\">State</span>. </p> <p></p></div> <a name=\"mac_final-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-mac_final-1-id91656\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L947\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>mac_final(State) -&gt; Mac | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">State = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mac_state\">mac_state()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Mac = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Finalizes the MAC operation referenced by <span class=\"code\">State</span>. The <span class=\"code\">Mac</span> result will have a default length depending on the <span class=\"code\">Type</span> and <span class=\"code\">SubType</span> in the <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mac_init-3\">mac_init/2,3</a></span> call. To set a shorter length, use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#mac_finalN-2\">mac_finalN/2</a></span> instead. The default length is documented in <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/crypto/algorithm_details#message-authentication-codes--macs-\">Algorithm Details</a></span> in the User&apos;s Guide. </p> <p></p></div> <a name=\"mac_finalN-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-mac_finalN-2-id91806\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/crypto/doc/src/crypto.xml#L962\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>mac_finalN(State, MacLength) -&gt; Mac | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-descriptive_error\">descriptive_error()</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 22.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">State = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mac_state\">mac_state()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">MacLength = integer() &gt;= 1</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Mac = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Finalizes the MAC operation referenced by <span class=\"code\">State</span>. </p> <p><span class=\"code\">Mac</span> will be a binary with at most <span class=\"code\">MacLength</span> bytes. Note that if <span class=\"code\">MacLength</span> is greater than the actual number of bytes returned from the underlying hash, the returned hash will have that shorter length instead. </p> <p>The max <span class=\"code\">MacLength</span> is documented in <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/../apps/crypto/algorithm_details#message-authentication-codes--macs-\">Algorithm Details</a></span> in the User&apos;s Guide. </p> <p></p></div> ","name":"crypto"}