{"summary":"File interface module.","description":"<p> </p><p>This module provides an interface to the file system.</p> <div class=\"warning\"><div class=\"label\">Warning</div><div class=\"content\"><p> </p><p>File operations are only guaranteed to appear atomic when going through the same file server. A NIF or other OS process may observe intermediate steps on certain operations on some operating systems, eg. renaming an existing file on Windows, or <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#write_file_info-2\"><span class=\"code\">write_file_info/2</span></a></span> on any OS at the time of writing.</p> <p></p></div></div> <p>Regarding filename encoding, the Erlang VM can operate in two modes. The current mode can be queried using function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#native_name_encoding-0\"><span class=\"code\">native_name_encoding/0</span></a></span>. It returns <span class=\"code\">latin1</span> or <span class=\"code\">utf8</span>.</p> <p>In <span class=\"code\">latin1</span> mode, the Erlang VM does not change the encoding of filenames. In <span class=\"code\">utf8</span> mode, filenames can contain Unicode characters greater than 255 and the VM converts filenames back and forth to the native filename encoding (usually UTF-8, but UTF-16 on Windows).</p> <p>The default mode depends on the operating system. Windows and MacOS X enforce consistent filename encoding and therefore the VM uses <span class=\"code\">utf8</span> mode.</p> <p>On operating systems with transparent naming (for example, all Unix systems except MacOS X), default is <span class=\"code\">utf8</span> if the terminal supports UTF-8, otherwise <span class=\"code\">latin1</span>. The default can be overridden using <span class=\"code\">+fnl</span> (to force <span class=\"code\">latin1</span> mode) or <span class=\"code\">+fnu</span> (to force <span class=\"code\">utf8</span> mode) when starting <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/erl\"><span class=\"code\">erl</span></a></span>.</p> <p>On operating systems with transparent naming, files can be inconsistently named, for example, some files are encoded in UTF-8 while others are encoded in ISO Latin-1. The concept of <strong>raw filenames</strong> is introduced to handle file systems with inconsistent naming when running in <span class=\"code\">utf8</span> mode.</p> <p>A <strong>raw filename</strong> is a filename specified as a binary. The Erlang VM does not translate a filename specified as a binary on systems with transparent naming.</p> <p>When running in <span class=\"code\">utf8</span> mode, functions <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#list_dir-1\"><span class=\"code\">list_dir/1</span></a></span> and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#read_link-1\"><span class=\"code\">read_link/1</span></a></span> never return raw filenames. To return all filenames including raw filenames, use functions <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#list_dir_all\"><span class=\"code\">list_dir_all/1</span></a></span> and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#read_link_all\"><span class=\"code\">read_link_all/1</span></a></span>.</p> <p>See also section <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/../apps/stdlib/unicode_usage#notes-about-raw-filenames\">Notes About Raw Filenames</a></span> in the STDLIB User&apos;s Guide.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p></p><p> File operations used to accept filenames containing null characters (integer value zero). This caused the name to be truncated and in some cases arguments to primitive operations to be mixed up. Filenames containing null characters inside the filename are now <strong>rejected</strong> and will cause primitive file operations fail. </p><p></p></div></div> <p></p>","funcs":" <a name=\"advise-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-advise-4-id218849\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L188\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>advise(IoDevice, Offset, Length, Advise) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Offset = Length = integer()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Advise = posix_file_advise()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div><div class=\"REFTYPES rt-2\"> <span class=\"bold_code bc-5\">posix_file_advise() = <br>&#xA0;&#xA0;&#xA0;&#xA0;normal | sequential | random | no_reuse | will_need |<br>&#xA0;&#xA0;&#xA0;&#xA0;dont_need</span><br></div></div><div class=\"REFBODY rb-7\"><p> </p><p><span class=\"code\">advise/4</span> can be used to announce an intention to access file data in a specific pattern in the future, thus allowing the operating system to perform appropriate optimizations.</p> <p>On some platforms, this function might have no effect.</p> <p></p></div> <a name=\"allocate-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-allocate-3-id218893\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L199\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>allocate(File, Offset, Length) -&gt; ok | {error, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span>}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">File = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Offset = Length = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p><span class=\"code\">allocate/3</span> can be used to preallocate space for a file.</p> <p>This function only succeeds in platforms that provide this feature. When it succeeds, space is preallocated for the file but the file size might not be updated. This behaviour depends on the preallocation implementation. To guarantee that the file size is updated, truncate the file to the new size.</p> <p></p></div> <a name=\"change_group-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-change_group-2-id219112\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L211\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>change_group(Filename, Gid) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Gid = integer()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Changes group of a file. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#write_file_info-2\"><span class=\"code\">write_file_info/2</span></a></span>.</p> <p></p></div> <a name=\"change_mode-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-change_mode-2-id218988\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L219\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>change_mode(Filename, Mode) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Mode = integer()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Changes permissions of a file. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#write_file_info-2\"><span class=\"code\">write_file_info/2</span></a></span>.</p> <p></p></div> <a name=\"change_owner-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-change_owner-2-id219307\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L227\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>change_owner(Filename, Uid) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Uid = integer()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Changes owner of a file. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#write_file_info-2\"><span class=\"code\">write_file_info/2</span></a></span>.</p> <p></p></div> <a name=\"change_owner-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-change_owner-3-id219119\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L235\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>change_owner(Filename, Uid, Gid) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Uid = Gid = integer()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Changes owner and group of a file. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#write_file_info-2\"><span class=\"code\">write_file_info/2</span></a></span>.</p> <p></p></div> <a name=\"change_time-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-change_time-2-id219528\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L243\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>change_time(Filename, Mtime) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Mtime = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-date_time\">date_time()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Changes the modification and access times of a file. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#write_file_info-2\"><span class=\"code\">write_file_info/2</span></a></span>.</p> <p></p></div> <a name=\"change_time-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-change_time-3-id219308\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L251\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>change_time(Filename, Atime, Mtime) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Atime = Mtime = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-date_time\">date_time()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Changes the modification and last access times of a file. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#write_file_info-2\"><span class=\"code\">write_file_info/2</span></a></span>.</p> <p></p></div> <a name=\"close-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-close-1-id219186\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L259\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>close(IoDevice) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | terminated</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Closes the file referenced by <span class=\"code\">IoDevice</span>. It mostly returns <span class=\"code\">ok</span>, except for some severe errors such as out of memory.</p> <p>Notice that if option <span class=\"code\">delayed_write</span> was used when opening the file, <span class=\"code\">close/1</span> can return an old write error and not even try to close the file. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-2\"><span class=\"code\">open/2</span></a></span>.</p> <p></p></div> <a name=\"consult-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-consult-1-id219994\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L272\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>consult(Filename) -&gt; {ok, Terms} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Terms = [term()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;badarg | terminated | system_limit |<br>&#xA0;&#xA0;&#xA0;&#xA0;{Line :: integer(), Mod :: module(), Term :: term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Reads Erlang terms, separated by &apos;.&apos;, from <span class=\"code\">Filename</span>. Returns one of the following:</p> <dl> <dt><strong><span class=\"code\">{ok, Terms}</span></strong></dt> <dd> <p>The file was successfully read.</p> </dd> <dt><strong><span class=\"code\">{error, atom()}</span></strong></dt> <dd> <p>An error occurred when opening the file or reading it. For a list of typical error codes, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-2\"><span class=\"code\">open/2</span></a></span>.</p> </dd> <dt><strong><span class=\"code\">{error, {Line, Mod, Term}}</span></strong></dt> <dd> <p>An error occurred when interpreting the Erlang terms in the file. To convert the three-element tuple to an English description of the error, use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#format_error-1\"><span class=\"code\">format_error/1</span></a></span>.</p> </dd> </dl> <p><strong>Example:</strong></p><div class=\"example example-none\"><pre>f.txt: {person, &quot;kalle&quot;, 25}. {person, &quot;pelle&quot;, 30}.</pre></div><div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">file:consult(&quot;f.txt&quot;).</span>{ok,[{person,&quot;kalle&quot;,25},{person,&quot;pelle&quot;,30}]}</pre></div> <p>The encoding of <span class=\"code\">Filename</span> can be set by a comment, as described in <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/epp#encoding\"><span class=\"code\">epp(3)</span></a></span>.</p> <p></p></div> <a name=\"copy-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-copy-2-id220280\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L310\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>copy(Source, Destination) -&gt; {ok, BytesCopied} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"copy-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-copy-3-id220366\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L310\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>copy(Source, Destination, ByteCount) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, BytesCopied} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Source = Destination = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span> | Filename | {Filename, Modes}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Modes = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mode\">mode()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ByteCount = integer() &gt;= 0 | infinity</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">BytesCopied = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | terminated</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Copies <span class=\"code\">ByteCount</span> bytes from <span class=\"code\">Source</span> to <span class=\"code\">Destination</span>. <span class=\"code\">Source</span> and <span class=\"code\">Destination</span> refer to either filenames or IO devices from, for example, <span class=\"code\">open/2</span>. <span class=\"code\">ByteCount</span> defaults to <span class=\"code\">infinity</span>, denoting an infinite number of bytes.</p> <p>Argument <span class=\"code\">Modes</span> is a list of possible modes, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-2\"><span class=\"code\">open/2</span></a></span>, and defaults to <span class=\"code\">[]</span>.</p> <p>If both <span class=\"code\">Source</span> and <span class=\"code\">Destination</span> refer to filenames, the files are opened with <span class=\"code\">[read, binary]</span> and <span class=\"code\">[write, binary]</span> prepended to their mode lists, respectively, to optimize the copy.</p> <p>If <span class=\"code\">Source</span> refers to a filename, it is opened with <span class=\"code\">read</span> mode prepended to the mode list before the copy, and closed when done.</p> <p>If <span class=\"code\">Destination</span> refers to a filename, it is opened with <span class=\"code\">write</span> mode prepended to the mode list before the copy, and closed when done.</p> <p>Returns <span class=\"code\">{ok, BytesCopied}</span>, where <span class=\"code\">BytesCopied</span> is the number of bytes that was copied, which can be less than <span class=\"code\">ByteCount</span> if end of file was encountered on the source. If the operation fails, <span class=\"code\">{error, Reason}</span> is returned.</p> <p>Typical error reasons: as for <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-2\"><span class=\"code\">open/2</span></a></span> if a file had to be opened, and as for <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#read-2\"><span class=\"code\">read/2</span></a></span> and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#write-2\"><span class=\"code\">write/2</span></a></span>.</p> <p></p></div> <a name=\"datasync-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-datasync-1-id220692\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L348\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>datasync(IoDevice) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | terminated</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Ensures that any buffers kept by the operating system (not by the Erlang runtime system) are written to disk. In many ways it resembles <span class=\"code\">fsync</span> but it does not update some of the metadata of the file, such as the access time. On some platforms this function has no effect.</p> <p>Applications that access databases or log files often write a tiny data fragment (for example, one line in a log file) and then call <span class=\"code\">fsync()</span> immediately to ensure that the written data is physically stored on the hard disk. Unfortunately, <span class=\"code\">fsync()</span> always initiates two write operations: one for the newly written data and another one to update the modification time stored in the <span class=\"code\">inode</span>. If the modification time is not a part of the transaction concept, <span class=\"code\">fdatasync()</span> can be used to avoid unnecessary <span class=\"code\">inode</span> disk write operations.</p> <p>Available only in some POSIX systems, this call results in a call to <span class=\"code\">fsync()</span>, or has no effect in systems not providing the <span class=\"code\">fdatasync()</span> syscall.</p> <p></p></div> <a name=\"del_dir-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-del_dir-1-id220853\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L371\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>del_dir(Dir) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Tries to delete directory <span class=\"code\">Dir</span>. The directory must be empty before it can be deleted. Returns <span class=\"code\">ok</span> if successful.</p> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing search or write permissions for the parent directories of <span class=\"code\">Dir</span>.</p> </dd> <dt><strong><span class=\"code\">eexist</span></strong></dt> <dd> <p>The directory is not empty.</p> </dd> <dt><strong><span class=\"code\">enoent</span></strong></dt> <dd> <p>The directory does not exist.</p> </dd> <dt><strong><span class=\"code\">enotdir</span></strong></dt> <dd> <p>A component of <span class=\"code\">Dir</span> is not a directory. On some platforms, <span class=\"code\">enoent</span> is returned instead.</p> </dd> <dt><strong><span class=\"code\">einval</span></strong></dt> <dd> <p>Attempt to delete the current directory. On some platforms, <span class=\"code\">eacces</span> is returned instead.</p> </dd> </dl> <p></p></div> <a name=\"delete-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-delete-1-id221066\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L407\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>delete(Filename) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Tries to delete file <span class=\"code\">Filename</span>. Returns <span class=\"code\">ok</span> if successful.</p> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">enoent</span></strong></dt> <dd> <p>The file does not exist.</p> </dd> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing permission for the file or one of its parents.</p> </dd> <dt><strong><span class=\"code\">eperm</span></strong></dt> <dd> <p>The file is a directory and the user is not superuser.</p> </dd> <dt><strong><span class=\"code\">enotdir</span></strong></dt> <dd> <p>A component of the filename is not a directory. On some platforms, <span class=\"code\">enoent</span> is returned instead.</p> </dd> <dt><strong><span class=\"code\">einval</span></strong></dt> <dd> <p><span class=\"code\">Filename</span> has an improper type, such as tuple.</p> </dd> </dl> <div class=\"warning\"><div class=\"label\">Warning</div><div class=\"content\"><p> </p><p>In a future release, a bad type for argument <span class=\"code\">Filename</span> will probably generate an exception.</p> <p></p></div></div> <p></p></div> <a name=\"eval-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-eval-1-id221295\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L444\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>eval(Filename) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;badarg | terminated | system_limit |<br>&#xA0;&#xA0;&#xA0;&#xA0;{Line :: integer(), Mod :: module(), Term :: term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Reads and evaluates Erlang expressions, separated by &apos;.&apos; (or &apos;,&apos;, a sequence of expressions is also an expression) from <span class=\"code\">Filename</span>. The result of the evaluation is not returned; any expression sequence in the file must be there for its side effect. Returns one of the following:</p> <dl> <dt><strong><span class=\"code\">ok</span></strong></dt> <dd> <p>The file was read and evaluated.</p> </dd> <dt><strong><span class=\"code\">{error, atom()}</span></strong></dt> <dd> <p>An error occurred when opening the file or reading it. For a list of typical error codes, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-2\"><span class=\"code\">open/2</span></a></span>.</p> </dd> <dt><strong><span class=\"code\">{error, {Line, Mod, Term}}</span></strong></dt> <dd> <p>An error occurred when interpreting the Erlang expressions in the file. To convert the three-element tuple to an English description of the error, use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#format_error-1\"><span class=\"code\">format_error/1</span></a></span>.</p> </dd> </dl> <p>The encoding of <span class=\"code\">Filename</span> can be set by a comment, as described in <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/epp#encoding\"><span class=\"code\">epp(3)</span></a></span>.</p> <p></p></div> <a name=\"eval-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-eval-2-id221516\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L478\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>eval(Filename, Bindings) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bindings = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/erl_eval#type-binding_struct\">erl_eval:binding_struct()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;badarg | terminated | system_limit |<br>&#xA0;&#xA0;&#xA0;&#xA0;{Line :: integer(), Mod :: module(), Term :: term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>The same as <span class=\"code\">eval/1</span>, but the variable bindings <span class=\"code\">Bindings</span> are used in the evaluation. For information about the variable bindings, see <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/erl_eval\"><span class=\"code\">erl_eval(3)</span></a></span>.</p> <p></p></div> <a name=\"format_error-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-format_error-1-id221589\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L488\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>format_error(Reason) -&gt; Chars</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;badarg | terminated | system_limit |<br>&#xA0;&#xA0;&#xA0;&#xA0;{Line :: integer(), Mod :: module(), Term :: term()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Chars = string()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Given the error reason returned by any function in this module, returns a descriptive string of the error in English.</p> <p></p></div> <a name=\"get_cwd-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_cwd-0-id221556\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L496\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_cwd() -&gt; {ok, Dir} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-filename\">filename()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">{ok, Dir}</span>, where <span class=\"code\">Dir</span> is the current working directory of the file server.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>In rare circumstances, this function can fail on Unix. It can occur if read permission does not exist for the parent directories of the current directory.</p> <p></p></div></div> <p>A typical error reason:</p> <dl> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing read permission for one of the parents of the current directory.</p> </dd> </dl> <p></p></div> <a name=\"get_cwd-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get_cwd-1-id221921\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L518\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get_cwd(Drive) -&gt; {ok, Dir} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Drive = string()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-filename\">filename()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">{ok, Dir}</span> or <span class=\"code\">{error, Reason}</span>, where <span class=\"code\">Dir</span> is the current working directory of the specified drive.</p> <p><span class=\"code\">Drive</span> is to be of the form &quot;<span class=\"code\">Letter</span><span class=\"code\">:</span>&quot;, for example, &quot;c:&quot;.</p> <p>Returns <span class=\"code\">{error, enotsup}</span> on platforms that have no concept of current drive (Unix, for example).</p> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">enotsup</span></strong></dt> <dd> <p>The operating system has no concept of drives.</p> </dd> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>The drive does not exist.</p> </dd> <dt><strong><span class=\"code\">einval</span></strong></dt> <dd> <p>The format of <span class=\"code\">Drive</span> is invalid.</p> </dd> </dl> <p></p></div> <a name=\"list_dir-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-list_dir-1-id222135\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L549\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>list_dir(Dir) -&gt; {ok, Filenames} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filenames = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-filename\">filename()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;badarg |<br>&#xA0;&#xA0;&#xA0;&#xA0;{no_translation, Filename :: <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/unicode#type-latin1_binary\">unicode:latin1_binary()</a></span>}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Lists all files in a directory, <strong>except</strong> files with raw filenames. Returns <span class=\"code\">{ok, Filenames}</span> if successful, otherwise <span class=\"code\">{error, Reason}</span>. <span class=\"code\">Filenames</span> is a list of the names of all the files in the directory. The names are not sorted.</p> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing search or write permissions for <span class=\"code\">Dir</span> or one of its parent directories.</p> </dd> <dt><strong><span class=\"code\">enoent</span></strong></dt> <dd> <p>The directory does not exist.</p> </dd> <dt><strong><span class=\"code\">{no_translation, Filename}</span></strong></dt> <dd> <p><span class=\"code\">Filename</span> is a <span class=\"code\">binary()</span> with characters coded in ISO Latin-1 and the VM was started with parameter <span class=\"code\">+fnue</span>.</p> </dd> </dl> <p></p></div> <a name=\"list_dir_all-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-list_dir_all-1-id222383\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L580\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>list_dir_all(Dir) -&gt; {ok, Filenames} | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filenames = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-filename_all\">filename_all()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p><a name=\"list_dir_all\"></a>Lists all the files in a directory, including files with raw filenames. Returns <span class=\"code\">{ok, Filenames}</span> if successful, otherwise <span class=\"code\">{error, Reason}</span>. <span class=\"code\">Filenames</span> is a list of the names of all the files in the directory. The names are not sorted.</p> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing search or write permissions for <span class=\"code\">Dir</span> or one of its parent directories.</p> </dd> <dt><strong><span class=\"code\">enoent</span></strong></dt> <dd> <p>The directory does not exist.</p> </dd> </dl> <p></p></div> <a name=\"make_dir-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-make_dir-1-id222573\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L605\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>make_dir(Dir) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Tries to create directory <span class=\"code\">Dir</span>. Missing parent directories are <strong>not</strong> created. Returns <span class=\"code\">ok</span> if successful.</p> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing search or write permissions for the parent directories of <span class=\"code\">Dir</span>.</p> </dd> <dt><strong><span class=\"code\">eexist</span></strong></dt> <dd> <p>A file or directory named <span class=\"code\">Dir</span> exists already.</p> </dd> <dt><strong><span class=\"code\">enoent</span></strong></dt> <dd> <p>A component of <span class=\"code\">Dir</span> does not exist.</p> </dd> <dt><strong><span class=\"code\">enospc</span></strong></dt> <dd> <p>No space is left on the device.</p> </dd> <dt><strong><span class=\"code\">enotdir</span></strong></dt> <dd> <p>A component of <span class=\"code\">Dir</span> is not a directory. On some platforms, <span class=\"code\">enoent</span> is returned instead.</p> </dd> </dl> <p></p></div> <a name=\"make_link-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-make_link-2-id222804\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L639\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>make_link(Existing, New) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Existing = New = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Makes a hard link from <span class=\"code\">Existing</span> to <span class=\"code\">New</span> on platforms supporting links (Unix and Windows). This function returns <span class=\"code\">ok</span> if the link was successfully created, otherwise <span class=\"code\">{error, Reason}</span>. On platforms not supporting links, <span class=\"code\">{error,enotsup}</span> is returned.</p> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing read or write permissions for the parent directories of <span class=\"code\">Existing</span> or <span class=\"code\">New</span>.</p> </dd> <dt><strong><span class=\"code\">eexist</span></strong></dt> <dd> <p><span class=\"code\">New</span> already exists.</p> </dd> <dt><strong><span class=\"code\">enotsup</span></strong></dt> <dd> <p>Hard links are not supported on this platform.</p> </dd> </dl> <p></p></div> <a name=\"make_symlink-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-make_symlink-2-id223364\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L668\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>make_symlink(Existing, New) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Existing = New = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Creates a symbolic link <span class=\"code\">New</span> to the file or directory <span class=\"code\">Existing</span> on platforms supporting symbolic links (most Unix systems and Windows, beginning with Vista). <span class=\"code\">Existing</span> does not need to exist. Returns <span class=\"code\">ok</span> if the link is successfully created, otherwise <span class=\"code\">{error, Reason}</span>. On platforms not supporting symbolic links, <span class=\"code\">{error, enotsup}</span> is returned.</p> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing read or write permissions for the parent directories of <span class=\"code\">Existing</span> or <span class=\"code\">New</span>.</p> </dd> <dt><strong><span class=\"code\">eexist</span></strong></dt> <dd> <p><span class=\"code\">New</span> already exists.</p> </dd> <dt><strong><span class=\"code\">enotsup</span></strong></dt> <dd> <p>Symbolic links are not supported on this platform.</p> </dd> <dt><strong><span class=\"code\">eperm</span></strong></dt> <dd> <p>User does not have privileges to create symbolic links (<span class=\"code\">SeCreateSymbolicLinkPrivilege</span> on Windows).</p> </dd> </dl> <p></p></div> <a name=\"native_name_encoding-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-native_name_encoding-0-id223590\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L704\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>native_name_encoding() -&gt; latin1 | utf8</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R14B01</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p><a name=\"native_name_encoding\"></a>Returns the filename encoding mode. If it is <span class=\"code\">latin1</span>, the system translates no filenames. If it is <span class=\"code\">utf8</span>, filenames are converted back and forth to the native filename encoding (usually UTF-8, but UTF-16 on Windows).</p> <p></p></div> <a name=\"open-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-open-2-id223662\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L716\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>open(File, Modes) -&gt; {ok, IoDevice} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">File = Filename | iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Modes = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mode\">mode()</a></span> | ram]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | system_limit</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Opens file <span class=\"code\">File</span> in the mode determined by <span class=\"code\">Modes</span>, which can contain one or more of the following options:</p> <dl> <dt><strong><span class=\"code\">read</span></strong></dt> <dd> <p>The file, which must exist, is opened for reading.</p> </dd> <dt><strong><span class=\"code\">write</span></strong></dt> <dd> <p>The file is opened for writing. It is created if it does not exist. If the file exists and <span class=\"code\">write</span> is not combined with <span class=\"code\">read</span>, the file is truncated.</p> </dd> <dt><strong><span class=\"code\">append</span></strong></dt> <dd> <p>The file is opened for writing. It is created if it does not exist. Every write operation to a file opened with <span class=\"code\">append</span> takes place at the end of the file.</p> </dd> <dt><strong><span class=\"code\">exclusive</span></strong></dt> <dd> <p>The file is opened for writing. It is created if it does not exist. If the file exists, <span class=\"code\">{error, eexist}</span> is returned.</p> <div class=\"warning\"><div class=\"label\">Warning</div><div class=\"content\"><p></p><p>This option does not guarantee exclusiveness on file systems not supporting <span class=\"code\">O_EXCL</span> properly, such as NFS. Do not depend on this option unless you know that the file system supports it (in general, local file systems are safe).</p><p></p></div></div> </dd> <dt><strong><span class=\"code\">raw</span></strong></dt> <dd> <p><a name=\"raw\"></a> Allows faster access to a file, as no Erlang process is needed to handle the file. However, a file opened in this way has the following limitations:</p> <ul> <li><p>The functions in the <span class=\"code\">io</span> module cannot be used, as they can only talk to an Erlang process. Instead, use functions <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#read-2\"><span class=\"code\">read/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#read_line-1\"><span class=\"code\">read_line/1</span></a></span>, and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#write-2\"><span class=\"code\">write/2</span></a></span>.</p></li> <li><p>Especially if <span class=\"code\">read_line/1</span> is to be used on a <span class=\"code\">raw</span> file, it is recommended to combine this option with option <span class=\"code\">{read_ahead, Size}</span> as line-oriented I/O is inefficient without buffering.</p></li> <li><p>Only the Erlang process that opened the file can use it.</p></li> <li><p>A remote Erlang file server cannot be used. The computer on which the Erlang node is running must have access to the file system (directly or through NFS).</p></li> </ul> </dd> <dt><strong><span class=\"code\">binary</span></strong></dt> <dd> <p>Read operations on the file return binaries rather than lists.</p> </dd> <dt><strong><span class=\"code\">{delayed_write, Size, Delay}</span></strong></dt> <dd> <p>Data in subsequent <span class=\"code\">write/2</span> calls is buffered until at least <span class=\"code\">Size</span> bytes are buffered, or until the oldest buffered data is <span class=\"code\">Delay</span> milliseconds old. Then all buffered data is written in one operating system call. The buffered data is also flushed before some other file operation than <span class=\"code\">write/2</span> is executed.</p> <p>The purpose of this option is to increase performance by reducing the number of operating system calls. Thus, the <span class=\"code\">write/2</span> calls must be for sizes significantly less than <span class=\"code\">Size</span>, and not interspersed by too many other file operations.</p> <p>When this option is used, the result of <span class=\"code\">write/2</span> calls can prematurely be reported as successful, and if a write error occurs, the error is reported as the result of the next file operation, which is not executed.</p> <p>For example, when <span class=\"code\">delayed_write</span> is used, after a number of <span class=\"code\">write/2</span> calls, <span class=\"code\">close/1</span> can return <span class=\"code\">{error, enospc}</span>, as there is not enough space on the disc for previously written data. <span class=\"code\">close/1</span> must probably be called again, as the file is still open.</p> </dd> <dt><strong><span class=\"code\">delayed_write</span></strong></dt> <dd> <p>The same as <span class=\"code\">{delayed_write, Size, Delay}</span> with reasonable default values for <span class=\"code\">Size</span> and <span class=\"code\">Delay</span> (roughly some 64 KB, 2 seconds).</p> </dd> <dt><strong><span class=\"code\">{read_ahead, Size}</span></strong></dt> <dd> <p>Activates read data buffering. If <span class=\"code\">read/2</span> calls are for significantly less than <span class=\"code\">Size</span> bytes, read operations to the operating system are still performed for blocks of <span class=\"code\">Size</span> bytes. The extra data is buffered and returned in subsequent <span class=\"code\">read/2</span> calls, giving a performance gain as the number of operating system calls is reduced.</p> <p>The <span class=\"code\">read_ahead</span> buffer is also highly used by function <span class=\"code\">read_line/1</span> in <span class=\"code\">raw</span> mode, therefore this option is recommended (for performance reasons) when accessing raw files using that function.</p> <p>If <span class=\"code\">read/2</span> calls are for sizes not significantly less than, or even greater than <span class=\"code\">Size</span> bytes, no performance gain can be expected.</p> </dd> <dt><strong><span class=\"code\">read_ahead</span></strong></dt> <dd> <p>The same as <span class=\"code\">{read_ahead, Size}</span> with a reasonable default value for <span class=\"code\">Size</span> (roughly some 64 KB).</p> </dd> <dt><strong><span class=\"code\">compressed</span></strong></dt> <dd> <p>Makes it possible to read or write gzip compressed files. Option <span class=\"code\">compressed</span> must be combined with <span class=\"code\">read</span> or <span class=\"code\">write</span>, but not both. Notice that the file size obtained with <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#read_file_info-1\"><span class=\"code\">read_file_info/1</span></a></span> does probably not match the number of bytes that can be read from a compressed file.</p> </dd> <dt><strong><span class=\"code\">{encoding, Encoding}</span></strong></dt> <dd> <p>Makes the file perform automatic translation of characters to and from a specific (Unicode) encoding. Notice that the data supplied to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#write-2\"><span class=\"code\">write/2</span></a></span> or returned by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#read-2\"><span class=\"code\">read/2</span></a></span> still is byte-oriented; this option denotes only how data is stored in the disk file.</p> <p>Depending on the encoding, different methods of reading and writing data is preferred. The default encoding of <span class=\"code\">latin1</span> implies using this module (<span class=\"code\">file</span>) for reading and writing data as the interfaces provided here work with byte-oriented data. Using other (Unicode) encodings makes the <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/io\"><span class=\"code\">io(3)</span></a></span> functions <span class=\"code\">get_chars</span>, <span class=\"code\">get_line</span>, and <span class=\"code\">put_chars</span> more suitable, as they can work with the full Unicode range.</p> <p>If data is sent to an <span class=\"code\">io_device()</span> in a format that cannot be converted to the specified encoding, or if data is read by a function that returns data in a format that cannot cope with the character range of the data, an error occurs and the file is closed.</p> <p>Allowed values for <span class=\"code\">Encoding</span>:</p> <dl> <dt><strong><span class=\"code\">latin1</span></strong></dt> <dd> <p>The default encoding. Bytes supplied to the file, that is, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#write-2\"><span class=\"code\">write/2</span></a></span> are written &quot;as is&quot; on the file. Likewise, bytes read from the file, that is, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#read-2\"><span class=\"code\">read/2</span></a></span> are returned &quot;as is&quot;. If module <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/io\"><span class=\"code\">io(3)</span></a></span> is used for writing, the file can only cope with Unicode characters up to code point 255 (the ISO Latin-1 range).</p> </dd> <dt><strong><span class=\"code\">unicode or utf8</span></strong></dt> <dd> <p>Characters are translated to and from UTF-8 encoding before they are written to or read from the file. A file opened in this way can be readable using function <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#read-2\"><span class=\"code\">read/2</span></a></span>, as long as no data stored on the file lies beyond the ISO Latin-1 range (0..255), but failure occurs if the data contains Unicode code points beyond that range. The file is best read with the functions in the Unicode aware module <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/io\"><span class=\"code\">io(3)</span></a></span>.</p> <p>Bytes written to the file by any means are translated to UTF-8 encoding before being stored on the disk file.</p> </dd> <dt><strong><span class=\"code\">utf16 or {utf16,big}</span></strong></dt> <dd> <p>Works like <span class=\"code\">unicode</span>, but translation is done to and from big endian UTF-16 instead of UTF-8.</p> </dd> <dt><strong><span class=\"code\">{utf16,little}</span></strong></dt> <dd> <p>Works like <span class=\"code\">unicode</span>, but translation is done to and from little endian UTF-16 instead of UTF-8.</p> </dd> <dt><strong><span class=\"code\">utf32 or {utf32,big}</span></strong></dt> <dd> <p>Works like <span class=\"code\">unicode</span>, but translation is done to and from big endian UTF-32 instead of UTF-8.</p> </dd> <dt><strong><span class=\"code\">{utf32,little}</span></strong></dt> <dd> <p>Works like <span class=\"code\">unicode</span>, but translation is done to and from little endian UTF-32 instead of UTF-8.</p> </dd> </dl> <p>The Encoding can be changed for a file &quot;on the fly&quot; by using function <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/io#setopts-2\"><span class=\"code\">io:setopts/2</span></a></span>. So a file can be analyzed in latin1 encoding for, for example, a BOM, positioned beyond the BOM and then be set for the right encoding before further reading. For functions identifying BOMs, see module <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/unicode\"><span class=\"code\">unicode(3)</span></a></span>. </p> <p>This option is not allowed on <span class=\"code\">raw</span> files.</p> </dd> <dt><strong><span class=\"code\">ram</span></strong></dt> <dd> <p><span class=\"code\">File</span> must be <span class=\"code\">iodata()</span>. Returns an <span class=\"code\">fd()</span>, which lets module <span class=\"code\">file</span> operate on the data in-memory as if it is a file.</p> </dd> <dt><strong><span class=\"code\">sync</span></strong></dt> <dd> <p>On platforms supporting it, enables the POSIX <span class=\"code\">O_SYNC</span> synchronous I/O flag or its platform-dependent equivalent (for example, <span class=\"code\">FILE_FLAG_WRITE_THROUGH</span> on Windows) so that writes to the file block until the data is physically written to disk. However, be aware that the exact semantics of this flag differ from platform to platform. For example, none of Linux or Windows guarantees that all file metadata are also written before the call returns. For precise semantics, check the details of your platform documentation. On platforms with no support for POSIX <span class=\"code\">O_SYNC</span> or equivalent, use of the <span class=\"code\">sync</span> flag causes <span class=\"code\">open</span> to return <span class=\"code\">{error, enotsup}</span>.</p> </dd> </dl> <p>Returns:</p> <dl> <dt><strong><span class=\"code\">{ok, IoDevice}</span></strong></dt> <dd> <p>The file is opened in the requested mode. <span class=\"code\">IoDevice</span> is a reference to the file.</p> </dd> <dt><strong><span class=\"code\">{error, Reason}</span></strong></dt> <dd> <p>The file cannot be opened.</p> </dd> </dl> <p><span class=\"code\">IoDevice</span> is really the pid of the process that handles the file. This process is linked to the process that originally opened the file. If any process to which the <span class=\"code\">IoDevice</span> is linked terminates, the file is closed and the process itself is terminated. An <span class=\"code\">IoDevice</span> returned from this call can be used as an argument to the I/O functions (see <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/io\"><span class=\"code\">io(3)</span></a></span>).</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>In previous versions of <span class=\"code\">file</span>, modes were specified as one of the atoms <span class=\"code\">read</span>, <span class=\"code\">write</span>, or <span class=\"code\">read_write</span> instead of a list. This is still allowed for reasons of backwards compatibility, but is not to be used for new code. Also note that <span class=\"code\">read_write</span> is not allowed in a mode list.</p> <p></p></div></div> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">enoent</span></strong></dt> <dd> <p>The file does not exist.</p> </dd> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing permission for reading the file or searching one of the parent directories.</p> </dd> <dt><strong><span class=\"code\">eisdir</span></strong></dt> <dd> <p>The named file is a directory.</p> </dd> <dt><strong><span class=\"code\">enotdir</span></strong></dt> <dd> <p>A component of the filename is not a directory. On some platforms, <span class=\"code\">enoent</span> is returned instead.</p> </dd> <dt><strong><span class=\"code\">enospc</span></strong></dt> <dd> <p>There is no space left on the device (if <span class=\"code\">write</span> access was specified).</p> </dd> </dl> <p></p></div> <a name=\"path_consult-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-path_consult-2-id225019\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L999\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>path_consult(Path, Filename) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, Terms, FullName} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Path = [Dir]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Terms = [term()]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FullName = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-filename_all\">filename_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;badarg | terminated | system_limit |<br>&#xA0;&#xA0;&#xA0;&#xA0;{Line :: integer(), Mod :: module(), Term :: term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Searches the path <span class=\"code\">Path</span> (a list of directory names) until the file <span class=\"code\">Filename</span> is found. If <span class=\"code\">Filename</span> is an absolute filename, <span class=\"code\">Path</span> is ignored. Then reads Erlang terms, separated by &apos;.&apos;, from the file.</p> <p>Returns one of the following:</p> <dl> <dt><strong><span class=\"code\">{ok, Terms, FullName}</span></strong></dt> <dd> <p>The file is successfully read. <span class=\"code\">FullName</span> is the full name of the file.</p> </dd> <dt><strong><span class=\"code\">{error, enoent}</span></strong></dt> <dd> <p>The file cannot be found in any of the directories in <span class=\"code\">Path</span>.</p> </dd> <dt><strong><span class=\"code\">{error, atom()}</span></strong></dt> <dd> <p>An error occurred when opening the file or reading it. For a list of typical error codes, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-2\"><span class=\"code\">open/2</span></a></span>.</p> </dd> <dt><strong><span class=\"code\">{error, {Line, Mod, Term}}</span></strong></dt> <dd> <p>An error occurred when interpreting the Erlang terms in the file. Use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#format_error-1\"><span class=\"code\">format_error/1</span></a></span> to convert the three-element tuple to an English description of the error.</p> </dd> </dl> <p>The encoding of <span class=\"code\">Filename</span> can be set by a comment as described in <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/epp#encoding\"><span class=\"code\">epp(3)</span></a></span>.</p> <p></p></div> <a name=\"path_eval-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-path_eval-2-id225344\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1041\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>path_eval(Path, Filename) -&gt; {ok, FullName} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Path = [Dir :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FullName = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-filename_all\">filename_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;badarg | terminated | system_limit |<br>&#xA0;&#xA0;&#xA0;&#xA0;{Line :: integer(), Mod :: module(), Term :: term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Searches the path <span class=\"code\">Path</span> (a list of directory names) until the file <span class=\"code\">Filename</span> is found. If <span class=\"code\">Filename</span> is an absolute filename, <span class=\"code\">Path</span> is ignored. Then reads and evaluates Erlang expressions, separated by &apos;.&apos; (or &apos;,&apos;, a sequence of expressions is also an expression), from the file. The result of evaluation is not returned; any expression sequence in the file must be there for its side effect.</p> <p>Returns one of the following:</p> <dl> <dt><strong><span class=\"code\">{ok, FullName}</span></strong></dt> <dd> <p>The file is read and evaluated. <span class=\"code\">FullName</span> is the full name of the file.</p> </dd> <dt><strong><span class=\"code\">{error, enoent}</span></strong></dt> <dd> <p>The file cannot be found in any of the directories in <span class=\"code\">Path</span>.</p> </dd> <dt><strong><span class=\"code\">{error, atom()}</span></strong></dt> <dd> <p>An error occurred when opening the file or reading it. For a list of typical error codes, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-2\"><span class=\"code\">open/2</span></a></span>.</p> </dd> <dt><strong><span class=\"code\">{error, {Line, Mod, Term}}</span></strong></dt> <dd> <p>An error occurred when interpreting the Erlang expressions in the file. Use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#format_error-1\"><span class=\"code\">format_error/1</span></a></span> to convert the three-element tuple to an English description of the error.</p> </dd> </dl> <p>The encoding of <span class=\"code\">Filename</span> can be set by a comment as described in <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/epp#encoding\"><span class=\"code\">epp(3)</span></a></span>.</p> <p></p></div> <a name=\"path_open-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-path_open-3-id225654\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1087\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>path_open(Path, Filename, Modes) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, IoDevice, FullName} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Path = [Dir :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Modes = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mode\">mode()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FullName = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-filename_all\">filename_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | system_limit</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Searches the path <span class=\"code\">Path</span> (a list of directory names) until the file <span class=\"code\">Filename</span> is found. If <span class=\"code\">Filename</span> is an absolute filename, <span class=\"code\">Path</span> is ignored. Then opens the file in the mode determined by <span class=\"code\">Modes</span>.</p> <p>Returns one of the following:</p> <dl> <dt><strong><span class=\"code\">{ok, IoDevice, FullName}</span></strong></dt> <dd> <p>The file is opened in the requested mode. <span class=\"code\">IoDevice</span> is a reference to the file and <span class=\"code\">FullName</span> is the full name of the file.</p> </dd> <dt><strong><span class=\"code\">{error, enoent}</span></strong></dt> <dd> <p>The file cannot be found in any of the directories in <span class=\"code\">Path</span>.</p> </dd> <dt><strong><span class=\"code\">{error, atom()}</span></strong></dt> <dd> <p>The file cannot be opened.</p> </dd> </dl> <p></p></div> <a name=\"path_script-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-path_script-2-id225728\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1116\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>path_script(Path, Filename) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, Value, FullName} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Path = [Dir :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Value = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FullName = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-filename_all\">filename_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;badarg | terminated | system_limit |<br>&#xA0;&#xA0;&#xA0;&#xA0;{Line :: integer(), Mod :: module(), Term :: term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Searches the path <span class=\"code\">Path</span> (a list of directory names) until the file <span class=\"code\">Filename</span> is found. If <span class=\"code\">Filename</span> is an absolute filename, <span class=\"code\">Path</span> is ignored. Then reads and evaluates Erlang expressions, separated by &apos;.&apos; (or &apos;,&apos;, a sequence of expressions is also an expression), from the file.</p> <p>Returns one of the following:</p> <dl> <dt><strong><span class=\"code\">{ok, Value, FullName}</span></strong></dt> <dd> <p>The file is read and evaluated. <span class=\"code\">FullName</span> is the full name of the file and <span class=\"code\">Value</span> the value of the last expression.</p> </dd> <dt><strong><span class=\"code\">{error, enoent}</span></strong></dt> <dd> <p>The file cannot be found in any of the directories in <span class=\"code\">Path</span>.</p> </dd> <dt><strong><span class=\"code\">{error, atom()}</span></strong></dt> <dd> <p>An error occurred when opening the file or reading it. For a list of typical error codes, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-2\"><span class=\"code\">open/2</span></a></span>.</p> </dd> <dt><strong><span class=\"code\">{error, {Line, Mod, Term}}</span></strong></dt> <dd> <p>An error occurred when interpreting the Erlang expressions in the file. Use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#format_error-1\"><span class=\"code\">format_error/1</span></a></span> to convert the three-element tuple to an English description of the error.</p> </dd> </dl> <p>The encoding of <span class=\"code\">Filename</span> can be set by a comment as described in <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/epp#encoding\"><span class=\"code\">epp(3)</span></a></span>.</p> <p></p></div> <a name=\"path_script-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-path_script-3-id226271\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1160\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>path_script(Path, Filename, Bindings) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, Value, FullName} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Path = [Dir :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bindings = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/erl_eval#type-binding_struct\">erl_eval:binding_struct()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Value = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FullName = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-filename_all\">filename_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;badarg | terminated | system_limit |<br>&#xA0;&#xA0;&#xA0;&#xA0;{Line :: integer(), Mod :: module(), Term :: term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>The same as <span class=\"code\">path_script/2</span> but the variable bindings <span class=\"code\">Bindings</span> are used in the evaluation. See <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/erl_eval\"><span class=\"code\">erl_eval(3)</span></a></span> about variable bindings.</p> <p></p></div> <a name=\"pid2name-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pid2name-1-id226466\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1170\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pid2name(Pid) -&gt; {ok, Filename} | undefined</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-filename_all\">filename_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Pid = pid()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">Pid</span> is an I/O device, that is, a pid returned from <span class=\"code\">open/2</span>, this function returns the filename, or rather:</p> <dl> <dt><strong><span class=\"code\">{ok, Filename}</span></strong></dt> <dd> <p>If the file server of this node is not a slave, the file was opened by the file server of this node (this implies that <span class=\"code\">Pid</span> must be a local pid) and the file is not closed. <span class=\"code\">Filename</span> is the filename in flat string format.</p> </dd> <dt><strong><span class=\"code\">undefined</span></strong></dt> <dd> <p>In all other cases.</p> </dd> </dl> <div class=\"warning\"><div class=\"label\">Warning</div><div class=\"content\"><p> </p><p>This function is intended for debugging only.</p> <p></p></div></div> <p></p></div> <a name=\"position-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-position-2-id226630\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1195\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>position(IoDevice, Location) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, NewPosition} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Location = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-location\">location()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">NewPosition = integer()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | terminated</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sets the position of the file referenced by <span class=\"code\">IoDevice</span> to <span class=\"code\">Location</span>. Returns <span class=\"code\">{ok, NewPosition}</span> (as absolute offset) if successful, otherwise <span class=\"code\">{error, Reason}</span>. <span class=\"code\">Location</span> is one of the following:</p> <dl> <dt><strong><span class=\"code\">Offset</span></strong></dt> <dd> <p>The same as <span class=\"code\">{bof, Offset}</span>.</p> </dd> <dt><strong><span class=\"code\">{bof, Offset}</span></strong></dt> <dd> <p>Absolute offset.</p> </dd> <dt><strong><span class=\"code\">{cur, Offset}</span></strong></dt> <dd> <p>Offset from the current position.</p> </dd> <dt><strong><span class=\"code\">{eof, Offset}</span></strong></dt> <dd> <p>Offset from the end of file.</p> </dd> <dt><strong><span class=\"code\">bof | cur | eof</span></strong></dt> <dd> <p>The same as above with <span class=\"code\">Offset</span> 0.</p> </dd> </dl> <p>Notice that offsets are counted in bytes, not in characters. If the file is opened using some other <span class=\"code\">encoding</span> than <span class=\"code\">latin1</span>, one byte does not correspond to one character. Positioning in such a file can only be done to known character boundaries. That is, to a position earlier retrieved by getting a current position, to the beginning/end of the file or to some other position <strong>known</strong> to be on a correct character boundary by some other means (typically beyond a byte order mark in the file, which has a known byte-size).</p> <p>A typical error reason is:</p> <dl> <dt><strong><span class=\"code\">einval</span></strong></dt> <dd> <p>Either <span class=\"code\">Location</span> is illegal, or it is evaluated to a negative offset in the file. Notice that if the resulting position is a negative value, the result is an error, and after the call the file position is undefined.</p> </dd> </dl> <p></p></div> <a name=\"pread-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pread-2-id226930\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1247\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pread(IoDevice, LocNums) -&gt; {ok, DataL} | eof | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">LocNums = <br>&#xA0;&#xA0;&#xA0;&#xA0;[{Location :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-location\">location()</a></span>, Number :: integer() &gt;= 0}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">DataL = [Data]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Data = string() | binary() | eof</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | terminated</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Performs a sequence of <span class=\"code\">pread/3</span> in one operation, which is more efficient than calling them one at a time. Returns <span class=\"code\">{ok, [Data, ...]}</span> or <span class=\"code\">{error, Reason}</span>, where each <span class=\"code\">Data</span>, the result of the corresponding <span class=\"code\">pread</span>, is either a list or a binary depending on the mode of the file, or <span class=\"code\">eof</span> if the requested position is beyond end of file.</p> <p>As the position is specified as a byte-offset, take special caution when working with files where <span class=\"code\">encoding</span> is set to something else than <span class=\"code\">latin1</span>, as not every byte position is a valid character boundary on such a file.</p> <p></p></div> <a name=\"pread-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pread-3-id226986\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1265\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pread(IoDevice, Location, Number) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, Data} | eof | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Location = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-location\">location()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Number = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Data = string() | binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | terminated</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Combines <span class=\"code\">position/2</span> and <span class=\"code\">read/2</span> in one operation, which is more efficient than calling them one at a time. If <span class=\"code\">IoDevice</span> is opened in <span class=\"code\">raw</span> mode, some restrictions apply:</p> <ul> <li><span class=\"code\">Location</span> is only allowed to be an integer.</li> <li>The current position of the file is undefined after the operation.</li> </ul> <p>As the position is specified as a byte-offset, take special caution when working with files where <span class=\"code\">encoding</span> is set to something else than <span class=\"code\">latin1</span>, as not every byte position is a valid character boundary on such a file.</p> <p></p></div> <a name=\"pwrite-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pwrite-2-id227182\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1285\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pwrite(IoDevice, LocBytes) -&gt; ok | {error, {N, Reason}}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">LocBytes = [{Location :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-location\">location()</a></span>, Bytes :: iodata()}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">N = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | terminated</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Performs a sequence of <span class=\"code\">pwrite/3</span> in one operation, which is more efficient than calling them one at a time. Returns <span class=\"code\">ok</span> or <span class=\"code\">{error, {N, Reason}}</span>, where <span class=\"code\">N</span> is the number of successful writes done before the failure.</p> <p>When positioning in a file with other <span class=\"code\">encoding</span> than <span class=\"code\">latin1</span>, caution must be taken to set the position on a correct character boundary. For details, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#position-2\"><span class=\"code\">position/2</span></a></span>.</p> <p></p></div> <a name=\"pwrite-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-pwrite-3-id227503\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1300\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>pwrite(IoDevice, Location, Bytes) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Location = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-location\">location()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bytes = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | terminated</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Combines <span class=\"code\">position/2</span> and <span class=\"code\">write/2</span> in one operation, which is more efficient than calling them one at a time. If <span class=\"code\">IoDevice</span> has been opened in <span class=\"code\">raw</span> mode, some restrictions apply:</p> <ul> <li><span class=\"code\">Location</span> is only allowed to be an integer.</li> <li>The current position of the file is undefined after the operation.</li> </ul> <p>When positioning in a file with other <span class=\"code\">encoding</span> than <span class=\"code\">latin1</span>, caution must be taken to set the position on a correct character boundary. For details, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#position-2\"><span class=\"code\">position/2</span></a></span>.</p> <p></p></div> <a name=\"read-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-read-2-id227180\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1319\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>read(IoDevice, Number) -&gt; {ok, Data} | eof | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span> | atom()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Number = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Data = string() | binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;badarg | terminated |<br>&#xA0;&#xA0;&#xA0;&#xA0;{no_translation, unicode, latin1}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Reads <span class=\"code\">Number</span> bytes/characters from the file referenced by <span class=\"code\">IoDevice</span>. The functions <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#read-2\"><span class=\"code\">read/2</span></a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#pread-3\"><span class=\"code\">pread/3</span></a></span>, and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#read_line-1\"><span class=\"code\">read_line/1</span></a></span> are the only ways to read from a file opened in <span class=\"code\">raw</span> mode (although they work for normally opened files, too).</p> <p>For files where <span class=\"code\">encoding</span> is set to something else than <span class=\"code\">latin1</span>, one character can be represented by more than one byte on the file. The parameter <span class=\"code\">Number</span> always denotes the number of <strong>characters</strong> read from the file, while the position in the file can be moved much more than this number when reading a Unicode file.</p> <p>Also, if <span class=\"code\">encoding</span> is set to something else than <span class=\"code\">latin1</span>, the <span class=\"code\">read/3</span> call fails if the data contains characters larger than 255, which is why module <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/io\"><span class=\"code\">io(3)</span></a></span> is to be preferred when reading such a file.</p> <p>The function returns:</p> <dl> <dt><strong><span class=\"code\">{ok, Data}</span></strong></dt> <dd> <p>If the file was opened in binary mode, the read bytes are returned in a binary, otherwise in a list. The list or binary is shorter than the number of bytes requested if end of file was reached.</p> </dd> <dt><strong><span class=\"code\">eof</span></strong></dt> <dd> <p>Returned if <span class=\"code\">Number&gt;0</span> and end of file was reached before anything at all could be read.</p> </dd> <dt><strong><span class=\"code\">{error, Reason}</span></strong></dt> <dd> <p>An error occurred.</p> </dd> </dl> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">ebadf</span></strong></dt> <dd> <p>The file is not opened for reading.</p> </dd> <dt><strong><span class=\"code\">{no_translation, unicode, latin1}</span></strong></dt> <dd> <p>The file is opened with another <span class=\"code\">encoding</span> than <span class=\"code\">latin1</span> and the data in the file cannot be translated to the byte-oriented data that this function returns.</p> </dd> </dl> <p></p></div> <a name=\"read_file-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-read_file-1-id228043\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1373\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>read_file(Filename) -&gt; {ok, Binary} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Binary = binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | terminated | system_limit</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">{ok, Binary}</span>, where <span class=\"code\">Binary</span> is a binary data object that contains the contents of <span class=\"code\">Filename</span>, or <span class=\"code\">{error, Reason}</span> if an error occurs.</p> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">enoent</span></strong></dt> <dd> <p>The file does not exist.</p> </dd> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing permission for reading the file, or for searching one of the parent directories.</p> </dd> <dt><strong><span class=\"code\">eisdir</span></strong></dt> <dd> <p>The named file is a directory.</p> </dd> <dt><strong><span class=\"code\">enotdir</span></strong></dt> <dd> <p>A component of the filename is not a directory. On some platforms, <span class=\"code\">enoent</span> is returned instead.</p> </dd> <dt><strong><span class=\"code\">enomem</span></strong></dt> <dd> <p>There is not enough memory for the contents of the file.</p> </dd> </dl> <p></p></div> <a name=\"read_file_info-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-read_file_info-1-id228268\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1409\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>read_file_info(Filename) -&gt; {ok, FileInfo} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"read_file_info-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-read_file_info-2-id228315\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1409\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>read_file_info(Filename, Opts) -&gt; {ok, FileInfo} | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Opts = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-file_info_option\">file_info_option()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FileInfo = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-file_info\">file_info()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Retrieves information about a file. Returns <span class=\"code\">{ok, FileInfo}</span> if successful, otherwise <span class=\"code\">{error, Reason}</span>. <span class=\"code\">FileInfo</span> is a record <span class=\"code\">file_info</span>, defined in the Kernel include file <span class=\"code\">file.hrl</span>. Include the following directive in the module from which the function is called:</p> <div class=\"example example-none\"><pre> -include_lib(&quot;kernel/include/file.hrl&quot;).</pre></div> <p>The time type returned in <span class=\"code\">atime</span>, <span class=\"code\">mtime</span>, and <span class=\"code\">ctime</span> is dependent on the time type set in <span class=\"code\">Opts :: {time, Type}</span> as follows:</p> <dl> <dt><strong><span class=\"code\">local</span></strong></dt> <dd><p>Returns local time.</p></dd> <dt><strong><span class=\"code\">universal</span></strong></dt> <dd><p>Returns universal time.</p></dd> <dt><strong><span class=\"code\">posix</span></strong></dt> <dd><p>Returns seconds since or before Unix time epoch, which is 1970-01-01 00:00 UTC.</p></dd> </dl> <p>Default is <span class=\"code\">{time, local}</span>.</p> <p>If the option <span class=\"code\">raw</span> is set, the file server is not called and only information about local files is returned. Note that this will break this module&apos;s atomicity guarantees as it can race with a concurrent call to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#write_file_info-2\"><span class=\"code\">write_file_info/1,2</span></a></span></p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>As file times are stored in POSIX time on most OS, it is faster to query file information with option <span class=\"code\">posix</span>.</p> <p></p></div></div> <p>The record <span class=\"code\">file_info</span> contains the following fields:</p> <dl> <dt><strong><span class=\"code\">size = integer() &gt;= 0</span></strong></dt> <dd> <p>Size of file in bytes.</p> </dd> <dt><strong><span class=\"code\">type = device | directory | other | regular | symlink</span></strong></dt> <dd> <p>The type of the file.</p> </dd> <dt><strong><span class=\"code\">access = read | write | read_write | none</span></strong></dt> <dd> <p>The current system access to the file.</p> </dd> <dt><strong><span class=\"code\">atime = </span> <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-date_time\"><span class=\"code\">date_time()</span></a></span><span class=\"code\"> | integer() &gt;= 0</span></strong></dt> <dd> <p>The last time the file was read.</p> </dd> <dt><strong><span class=\"code\">mtime = </span> <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-date_time\"><span class=\"code\">date_time()</span></a></span><span class=\"code\"> | integer() &gt;= 0</span></strong></dt> <dd> <p>The last time the file was written.</p> </dd> <dt><strong><span class=\"code\">ctime = </span> <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-date_time\"><span class=\"code\">date_time()</span></a></span><span class=\"code\"> | integer() &gt;=0</span></strong></dt> <dd> <p>The interpretation of this time field depends on the operating system. On Unix, it is the last time the file or the <span class=\"code\">inode</span> was changed. In Windows, it is the create time.</p> </dd> <dt><strong><span class=\"code\">mode = integer() &gt;= 0</span></strong></dt> <dd> <p>The file permissions as the sum of the following bit values:</p> <dl> <dt><strong><span class=\"code\">8#00400</span></strong></dt> <dd><p>read permission: owner</p></dd> <dt><strong><span class=\"code\">8#00200</span></strong></dt> <dd><p>write permission: owner</p></dd> <dt><strong><span class=\"code\">8#00100</span></strong></dt> <dd><p>execute permission: owner</p></dd> <dt><strong><span class=\"code\">8#00040</span></strong></dt> <dd><p>read permission: group</p></dd> <dt><strong><span class=\"code\">8#00020</span></strong></dt> <dd><p>write permission: group</p></dd> <dt><strong><span class=\"code\">8#00010</span></strong></dt> <dd><p>execute permission: group</p></dd> <dt><strong><span class=\"code\">8#00004</span></strong></dt> <dd><p>read permission: other</p></dd> <dt><strong><span class=\"code\">8#00002</span></strong></dt> <dd><p>write permission: other</p></dd> <dt><strong><span class=\"code\">8#00001</span></strong></dt> <dd><p>execute permission: other</p></dd> <dt><strong><span class=\"code\">16#800</span></strong></dt> <dd><p>set user id on execution</p></dd> <dt><strong><span class=\"code\">16#400</span></strong></dt> <dd><p>set group id on execution</p></dd> </dl> <p>On Unix platforms, other bits than those listed above may be set.</p> </dd> <dt><strong><span class=\"code\">links = integer() &gt;= 0</span></strong></dt> <dd> <p>Number of links to the file (this is always 1 for file systems that have no concept of links).</p> </dd> <dt><strong><span class=\"code\">major_device = integer() &gt;= 0</span></strong></dt> <dd> <p>Identifies the file system where the file is located. In Windows, the number indicates a drive as follows: 0 means A:, 1 means B:, and so on.</p> </dd> <dt><strong><span class=\"code\">minor_device = integer() &gt;= 0</span></strong></dt> <dd> <p>Only valid for character devices on Unix. In all other cases, this field is zero.</p> </dd> <dt><strong><span class=\"code\">inode = integer() &gt;= 0</span></strong></dt> <dd> <p>Gives the <span class=\"code\">inode</span> number. On non-Unix file systems, this field is zero.</p> </dd> <dt><strong><span class=\"code\">uid = integer() &gt;= 0</span></strong></dt> <dd> <p>Indicates the owner of the file. On non-Unix file systems, this field is zero.</p> </dd> <dt><strong><span class=\"code\">gid = integer() &gt;= 0</span></strong></dt> <dd> <p>Gives the group that the owner of the file belongs to. On non-Unix file systems, this field is zero.</p> </dd> </dl> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing search permission for one of the parent directories of the file.</p> </dd> <dt><strong><span class=\"code\">enoent</span></strong></dt> <dd> <p>The file does not exist.</p> </dd> <dt><strong><span class=\"code\">enotdir</span></strong></dt> <dd> <p>A component of the filename is not a directory. On some platforms, <span class=\"code\">enoent</span> is returned instead.</p> </dd> </dl> <p></p></div> <a name=\"read_line-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-read_line-1-id229113\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1564\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>read_line(IoDevice) -&gt; {ok, Data} | eof | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span> | atom()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Data = string() | binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;badarg | terminated |<br>&#xA0;&#xA0;&#xA0;&#xA0;{no_translation, unicode, latin1}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Reads a line of bytes/characters from the file referenced by <span class=\"code\">IoDevice</span>. Lines are defined to be delimited by the linefeed (LF, <span class=\"code\">\\n</span>) character, but any carriage return (CR, <span class=\"code\">\\r</span>) followed by a newline is also treated as a single LF character (the carriage return is silently ignored). The line is returned <strong>including</strong> the LF, but excluding any CR immediately followed by an LF. This behaviour is consistent with the behaviour of <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/io#get_line-2\"><span class=\"code\">io:get_line/2</span></a></span>. If end of file is reached without any LF ending the last line, a line with no trailing LF is returned.</p> <p>The function can be used on files opened in <span class=\"code\">raw</span> mode. However, it is inefficient to use it on <span class=\"code\">raw</span> files if the file is not opened with option <span class=\"code\">{read_ahead, Size}</span> specified. Thus, combining <span class=\"code\">raw</span> and <span class=\"code\">{read_ahead, Size}</span> is highly recommended when opening a text file for raw line-oriented reading.</p> <p>If <span class=\"code\">encoding</span> is set to something else than <span class=\"code\">latin1</span>, the <span class=\"code\">read_line/1</span> call fails if the data contains characters larger than 255, why module <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/io\"><span class=\"code\">io(3)</span></a></span> is to be preferred when reading such a file.</p> <p>The function returns:</p> <dl> <dt><strong><span class=\"code\">{ok, Data}</span></strong></dt> <dd> <p>One line from the file is returned, including the trailing LF, but with CRLF sequences replaced by a single LF (see above).</p> <p>If the file is opened in binary mode, the read bytes are returned in a binary, otherwise in a list.</p> </dd> <dt><strong><span class=\"code\">eof</span></strong></dt> <dd> <p>Returned if end of file was reached before anything at all could be read.</p> </dd> <dt><strong><span class=\"code\">{error, Reason}</span></strong></dt> <dd> <p>An error occurred.</p> </dd> </dl> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">ebadf</span></strong></dt> <dd> <p>The file is not opened for reading.</p> </dd> <dt><strong><span class=\"code\">{no_translation, unicode, latin1}</span></strong></dt> <dd> <p>The file is opened with another <span class=\"code\">encoding</span> than <span class=\"code\">latin1</span> and the data on the file cannot be translated to the byte-oriented data that this function returns.</p> </dd> </dl> <p></p></div> <a name=\"read_link-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-read_link-1-id229470\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1621\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>read_link(Name) -&gt; {ok, Filename} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Name = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-filename\">filename()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p><a name=\"read_link_all\"></a>Returns <span class=\"code\">{ok, Filename}</span> if <span class=\"code\">Name</span> refers to a symbolic link that is not a raw filename, or <span class=\"code\">{error, Reason}</span> otherwise. On platforms that do not support symbolic links, the return value is <span class=\"code\">{error,enotsup}</span>.</p> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">einval</span></strong></dt> <dd> <p><span class=\"code\">Name</span> does not refer to a symbolic link or the name of the file that it refers to does not conform to the expected encoding.</p> </dd> <dt><strong><span class=\"code\">enoent</span></strong></dt> <dd> <p>The file does not exist.</p> </dd> <dt><strong><span class=\"code\">enotsup</span></strong></dt> <dd> <p>Symbolic links are not supported on this platform.</p> </dd> </dl> <p></p></div> <a name=\"read_link_all-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-read_link_all-1-id229682\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1651\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>read_link_all(Name) -&gt; {ok, Filename} | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R16B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Name = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-filename_all\">filename_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">{ok, Filename}</span> if <span class=\"code\">Name</span> refers to a symbolic link or <span class=\"code\">{error, Reason}</span> otherwise. On platforms that do not support symbolic links, the return value is <span class=\"code\">{error,enotsup}</span>.</p> <p>Notice that <span class=\"code\">Filename</span> can be either a list or a binary.</p> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">einval</span></strong></dt> <dd> <p><span class=\"code\">Name</span> does not refer to a symbolic link.</p> </dd> <dt><strong><span class=\"code\">enoent</span></strong></dt> <dd> <p>The file does not exist.</p> </dd> <dt><strong><span class=\"code\">enotsup</span></strong></dt> <dd> <p>Symbolic links are not supported on this platform.</p> </dd> </dl> <p></p></div> <a name=\"read_link_info-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-read_link_info-1-id229898\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1679\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>read_link_info(Name) -&gt; {ok, FileInfo} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"read_link_info-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-read_link_info-2-id229898\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1679\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>read_link_info(Name, Opts) -&gt; {ok, FileInfo} | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Name = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Opts = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-file_info_option\">file_info_option()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FileInfo = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-file_info\">file_info()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Works like <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#read_file_info-2\"><span class=\"code\">read_file_info/1,2</span></a></span> except that if <span class=\"code\">Name</span> is a symbolic link, information about the link is returned in the <span class=\"code\">file_info</span> record and the <span class=\"code\">type</span> field of the record is set to <span class=\"code\">symlink</span>.</p> <p>If the option <span class=\"code\">raw</span> is set, the file server is not called and only information about local files is returned. Note that this will break this module&apos;s atomicity guarantees as it can race with a concurrent call to <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#write_file_info-2\"><span class=\"code\">write_file_info/1,2</span></a></span></p> <p>If <span class=\"code\">Name</span> is not a symbolic link, this function returns the same result as <span class=\"code\">read_file_info/1</span>. On platforms that do not support symbolic links, this function is always equivalent to <span class=\"code\">read_file_info/1</span>.</p> <p></p></div> <a name=\"rename-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-rename-2-id230164\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1701\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>rename(Source, Destination) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Source = Destination = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Tries to rename the file <span class=\"code\">Source</span> to <span class=\"code\">Destination</span>. It can be used to move files (and directories) between directories, but it is not sufficient to specify the destination only. The destination filename must also be specified. For example, if <span class=\"code\">bar</span> is a normal file and <span class=\"code\">foo</span> and <span class=\"code\">baz</span> are directories, <span class=\"code\">rename(&quot;foo/bar&quot;, &quot;baz&quot;)</span> returns an error, but <span class=\"code\">rename(&quot;foo/bar&quot;, &quot;baz/bar&quot;)</span> succeeds. Returns <span class=\"code\">ok</span> if it is successful.</p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>Renaming of open files is not allowed on most platforms (see <span class=\"code\">eacces</span> below).</p> <p></p></div></div> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing read or write permissions for the parent directories of <span class=\"code\">Source</span> or <span class=\"code\">Destination</span>. On some platforms, this error is given if either <span class=\"code\">Source</span> or <span class=\"code\">Destination</span> is open.</p> </dd> <dt><strong><span class=\"code\">eexist</span></strong></dt> <dd> <p><span class=\"code\">Destination</span> is not an empty directory. On some platforms, also given when <span class=\"code\">Source</span> and <span class=\"code\">Destination</span> are not of the same type.</p> </dd> <dt><strong><span class=\"code\">einval</span></strong></dt> <dd> <p><span class=\"code\">Source</span> is a root directory, or <span class=\"code\">Destination</span> is a subdirectory of <span class=\"code\">Source</span>.</p> </dd> <dt><strong><span class=\"code\">eisdir</span></strong></dt> <dd> <p><span class=\"code\">Destination</span> is a directory, but <span class=\"code\">Source</span> is not.</p> </dd> <dt><strong><span class=\"code\">enoent</span></strong></dt> <dd> <p><span class=\"code\">Source</span> does not exist.</p> </dd> <dt><strong><span class=\"code\">enotdir</span></strong></dt> <dd> <p><span class=\"code\">Source</span> is a directory, but <span class=\"code\">Destination</span> is not.</p> </dd> <dt><strong><span class=\"code\">exdev</span></strong></dt> <dd> <p><span class=\"code\">Source</span> and <span class=\"code\">Destination</span> are on different file systems.</p> </dd> </dl> <p></p></div> <a name=\"script-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-script-1-id230564\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1764\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>script(Filename) -&gt; {ok, Value} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Value = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;badarg | terminated | system_limit |<br>&#xA0;&#xA0;&#xA0;&#xA0;{Line :: integer(), Mod :: module(), Term :: term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Reads and evaluates Erlang expressions, separated by &apos;.&apos; (or &apos;,&apos;, a sequence of expressions is also an expression), from the file.</p> <p>Returns one of the following:</p> <dl> <dt><strong><span class=\"code\">{ok, Value}</span></strong></dt> <dd> <p>The file is read and evaluated. <span class=\"code\">Value</span> is the value of the last expression.</p> </dd> <dt><strong><span class=\"code\">{error, atom()}</span></strong></dt> <dd> <p>An error occurred when opening the file or reading it. For a list of typical error codes, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-2\"><span class=\"code\">open/2</span></a></span>.</p> </dd> <dt><strong><span class=\"code\">{error, {Line, Mod, Term}}</span></strong></dt> <dd> <p>An error occurred when interpreting the Erlang expressions in the file. Use <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#format_error-1\"><span class=\"code\">format_error/1</span></a></span> to convert the three-element tuple to an English description of the error.</p> </dd> </dl> <p>The encoding of <span class=\"code\">Filename</span> can be set by a comment as described in <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/epp#encoding\"><span class=\"code\">epp(3)</span></a></span>.</p> <p></p></div> <a name=\"script-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-script-2-id230797\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1799\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>script(Filename, Bindings) -&gt; {ok, Value} | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bindings = <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/erl_eval#type-binding_struct\">erl_eval:binding_struct()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Value = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> |<br>&#xA0;&#xA0;&#xA0;&#xA0;badarg | terminated | system_limit |<br>&#xA0;&#xA0;&#xA0;&#xA0;{Line :: integer(), Mod :: module(), Term :: term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>The same as <span class=\"code\">script/1</span> but the variable bindings <span class=\"code\">Bindings</span> are used in the evaluation. See <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/erl_eval\"><span class=\"code\">erl_eval(3)</span></a></span> about variable bindings.</p> <p></p></div> <a name=\"sendfile-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sendfile-2-id230619\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1809\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sendfile(Filename, Socket) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, integer() &gt;= 0} |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span> | closed | badarg | not_owner}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-socket\">inet:socket()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sends the file <span class=\"code\">Filename</span> to <span class=\"code\">Socket</span>. Returns <span class=\"code\">{ok, BytesSent}</span> if successful, otherwise <span class=\"code\">{error, Reason}</span>.</p> <p></p></div> <a name=\"sendfile-5\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sendfile-5-id231087\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1818\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sendfile(RawFile, Socket, Offset, Bytes, Opts) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, integer() &gt;= 0} |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-posix\">inet:posix()</a></span> | closed | badarg | not_owner}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">RawFile = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-fd\">fd()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Socket = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/inet#type-socket\">inet:socket()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Offset = Bytes = integer() &gt;= 0</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Opts = [sendfile_option()]</span></div><div class=\"REFTYPES rt-2\"> <span class=\"bold_code bc-5\">sendfile_option() = <br>&#xA0;&#xA0;&#xA0;&#xA0;{chunk_size, integer() &gt;= 0} | {use_threads, boolean()}</span><br></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sends <span class=\"code\">Bytes</span> from the file referenced by <span class=\"code\">RawFile</span> beginning at <span class=\"code\">Offset</span> to <span class=\"code\">Socket</span>. Returns <span class=\"code\">{ok, BytesSent}</span> if successful, otherwise <span class=\"code\">{error, Reason}</span>. If <span class=\"code\">Bytes</span> is set to <span class=\"code\">0</span> all data after the specified <span class=\"code\">Offset</span> is sent.</p> <p>The file used must be opened using the <span class=\"code\">raw</span> flag, and the process calling <span class=\"code\">sendfile</span> must be the controlling process of the socket. See <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gen_tcp#controlling_process-2\"><span class=\"code\">gen_tcp:controlling_process/2</span></a></span>.</p> <p>If the OS used does not support non-blocking <span class=\"code\">sendfile</span>, an Erlang fallback using <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#read-2\"><span class=\"code\">read/2</span></a></span> and <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/gen_tcp#send-2\"><span class=\"code\">gen_tcp:send/2</span></a></span> is used.</p> <p>The option list can contain the following options:</p> <dl> <dt><strong><span class=\"code\">chunk_size</span></strong></dt> <dd><p>The chunk size used by the Erlang fallback to send data. If using the fallback, set this to a value that comfortably fits in the systems memory. Default is 20 MB.</p></dd> </dl> <p></p></div> <a name=\"set_cwd-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-set_cwd-1-id231392\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1845\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>set_cwd(Dir) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name\">name()</a></span> | EncodedBinary</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">EncodedBinary = binary()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | no_translation</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Sets the current working directory of the file server to <span class=\"code\">Dir</span>. Returns <span class=\"code\">ok</span> if successful.</p> <p>The functions in the module <span class=\"code\">file</span> usually treat binaries as raw filenames, that is, they are passed &quot;as is&quot; even when the encoding of the binary does not agree with <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#native_name_encoding-0\"><span class=\"code\">native_name_encoding()</span></a></span>. However, this function expects binaries to be encoded according to the value returned by <span class=\"code\">native_name_encoding()</span>.</p> <p>Typical error reasons are:</p> <dl> <dt><strong><span class=\"code\">enoent</span></strong></dt> <dd> <p>The directory does not exist.</p> </dd> <dt><strong><span class=\"code\">enotdir</span></strong></dt> <dd> <p>A component of <span class=\"code\">Dir</span> is not a directory. On some platforms, <span class=\"code\">enoent</span> is returned.</p> </dd> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing permission for the directory or one of its parents.</p> </dd> <dt><strong><span class=\"code\">badarg</span></strong></dt> <dd> <p><span class=\"code\">Dir</span> has an improper type, such as tuple.</p> </dd> <dt><strong><span class=\"code\">no_translation</span></strong></dt> <dd> <p><span class=\"code\">Dir</span> is a <span class=\"code\">binary()</span> with characters coded in ISO-latin-1 and the VM is operating with unicode filename encoding.</p> </dd> </dl> <div class=\"warning\"><div class=\"label\">Warning</div><div class=\"content\"><p> </p><p>In a future release, a bad type for argument <span class=\"code\">Dir</span> will probably generate an exception.</p> <p></p></div></div> <p></p></div> <a name=\"sync-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-sync-1-id231684\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1892\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>sync(IoDevice) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | terminated</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Ensures that any buffers kept by the operating system (not by the Erlang runtime system) are written to disk. On some platforms, this function might have no effect.</p> <p>A typical error reason is:</p> <dl> <dt><strong><span class=\"code\">enospc</span></strong></dt> <dd> <p>Not enough space left to write the file.</p> </dd> </dl> <p></p></div> <a name=\"truncate-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-truncate-1-id231682\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1908\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>truncate(IoDevice) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | terminated</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Truncates the file referenced by <span class=\"code\">IoDevice</span> at the current position. Returns <span class=\"code\">ok</span> if successful, otherwise <span class=\"code\">{error, Reason}</span>.</p> <p></p></div> <a name=\"write-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-write-2-id231689\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1917\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>write(IoDevice, Bytes) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">IoDevice = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-io_device\">io_device()</a></span> | atom()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bytes = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | terminated</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Writes <span class=\"code\">Bytes</span> to the file referenced by <span class=\"code\">IoDevice</span>. This function is the only way to write to a file opened in <span class=\"code\">raw</span> mode (although it works for normally opened files too). Returns <span class=\"code\">ok</span> if successful, and <span class=\"code\">{error, Reason}</span> otherwise.</p> <p>If the file is opened with <span class=\"code\">encoding</span> set to something else than <span class=\"code\">latin1</span>, each byte written can result in many bytes being written to the file, as the byte range 0..255 can represent anything between one and four bytes depending on value and UTF encoding type.</p> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">ebadf</span></strong></dt> <dd> <p>The file is not opened for writing.</p> </dd> <dt><strong><span class=\"code\">enospc</span></strong></dt> <dd> <p>No space is left on the device.</p> </dd> </dl> <p></p></div> <a name=\"write_file-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-write_file-2-id232106\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1943\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>write_file(Filename, Bytes) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bytes = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | terminated | system_limit</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Writes the contents of the <span class=\"code\">iodata</span> term <span class=\"code\">Bytes</span> to file <span class=\"code\">Filename</span>. The file is created if it does not exist. If it exists, the previous contents are overwritten. Returns <span class=\"code\">ok</span> if successful, otherwise <span class=\"code\">{error, Reason}</span>.</p> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">enoent</span></strong></dt> <dd> <p>A component of the filename does not exist.</p> </dd> <dt><strong><span class=\"code\">enotdir</span></strong></dt> <dd> <p>A component of the filename is not a directory. On some platforms, <span class=\"code\">enoent</span> is returned instead.</p> </dd> <dt><strong><span class=\"code\">enospc</span></strong></dt> <dd> <p>No space is left on the device.</p> </dd> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing permission for writing the file or searching one of the parent directories.</p> </dd> <dt><strong><span class=\"code\">eisdir</span></strong></dt> <dd> <p>The named file is a directory.</p> </dd> </dl> <p></p></div> <a name=\"write_file-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-write_file-3-id232336\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1980\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>write_file(Filename, Bytes, Modes) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Bytes = iodata()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Modes = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-mode\">mode()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg | terminated | system_limit</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Same as <span class=\"code\">write_file/2</span>, but takes a third argument <span class=\"code\">Modes</span>, a list of possible modes, see <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#open-2\"><span class=\"code\">open/2</span></a></span>. The mode flags <span class=\"code\">binary</span> and <span class=\"code\">write</span> are implicit, so they are not to be used.</p> <p></p></div> <a name=\"write_file_info-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-write_file_info-2-id232533\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1991\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>write_file_info(Filename, FileInfo) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><a name=\"write_file_info-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-write_file_info-3-id232382\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/kernel/doc/src/file.xml#L1991\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>write_file_info(Filename, FileInfo, Opts) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP R15B</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Filename = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-name_all\">name_all()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Opts = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-file_info_option\">file_info_option()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">FileInfo = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-file_info\">file_info()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-posix\">posix()</a></span> | badarg</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Changes file information. Returns <span class=\"code\">ok</span> if successful, otherwise <span class=\"code\">{error, Reason}</span>. <span class=\"code\">FileInfo</span> is a record <span class=\"code\">file_info</span>, defined in the Kernel include file <span class=\"code\">file.hrl</span>. Include the following directive in the module from which the function is called:</p> <div class=\"example example-none\"><pre> -include_lib(&quot;kernel/include/file.hrl&quot;).</pre></div> <p>The time type set in <span class=\"code\">atime</span>, <span class=\"code\">mtime</span>, and <span class=\"code\">ctime</span> depends on the time type set in <span class=\"code\">Opts :: {time, Type}</span> as follows:</p> <dl> <dt><strong><span class=\"code\">local</span></strong></dt> <dd><p>Interprets the time set as local.</p></dd> <dt><strong><span class=\"code\">universal</span></strong></dt> <dd><p>Interprets it as universal time.</p></dd> <dt><strong><span class=\"code\">posix</span></strong></dt> <dd><p>Must be seconds since or before Unix time epoch, which is 1970-01-01 00:00 UTC.</p></dd> </dl> <p>Default is <span class=\"code\">{time, local}</span>.</p> <p>If the option <span class=\"code\">raw</span> is set, the file server is not called and only information about local files is returned.</p> <p>The following fields are used from the record, if they are specified:</p> <dl> <dt><strong><span class=\"code\">atime = </span> <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-date_time\"><span class=\"code\">date_time()</span></a></span><span class=\"code\"> | integer() &gt;= 0</span></strong></dt> <dd> <p>The last time the file was read.</p> </dd> <dt><strong><span class=\"code\">mtime = </span> <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-date_time\"><span class=\"code\">date_time()</span></a></span><span class=\"code\"> | integer() &gt;= 0</span></strong></dt> <dd> <p>The last time the file was written.</p> </dd> <dt><strong><span class=\"code\">ctime = </span> <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-date_time\"><span class=\"code\">date_time()</span></a></span><span class=\"code\"> | integer() &gt;= 0</span></strong></dt> <dd> <p>On Unix, any value specified for this field is ignored (the &quot;ctime&quot; for the file is set to the current time). On Windows, this field is the new creation time to set for the file.</p> </dd> <dt><strong><span class=\"code\">mode = integer() &gt;= 0</span></strong></dt> <dd> <p>The file permissions as the sum of the following bit values:</p> <dl> <dt><strong><span class=\"code\">8#00400</span></strong></dt> <dd><p>Read permission: owner</p></dd> <dt><strong><span class=\"code\">8#00200</span></strong></dt> <dd><p>Write permission: owner</p></dd> <dt><strong><span class=\"code\">8#00100</span></strong></dt> <dd><p>Execute permission: owner</p></dd> <dt><strong><span class=\"code\">8#00040</span></strong></dt> <dd><p>Read permission: group</p></dd> <dt><strong><span class=\"code\">8#00020</span></strong></dt> <dd><p>Write permission: group</p></dd> <dt><strong><span class=\"code\">8#00010</span></strong></dt> <dd><p>Execute permission: group</p></dd> <dt><strong><span class=\"code\">8#00004</span></strong></dt> <dd><p>Read permission: other</p></dd> <dt><strong><span class=\"code\">8#00002</span></strong></dt> <dd><p>Write permission: other</p></dd> <dt><strong><span class=\"code\">8#00001</span></strong></dt> <dd><p>Execute permission: other</p></dd> <dt><strong><span class=\"code\">16#800</span></strong></dt> <dd><p>Set user id on execution</p></dd> <dt><strong><span class=\"code\">16#400</span></strong></dt> <dd><p>Set group id on execution</p></dd> </dl> <p>On Unix platforms, other bits than those listed above may be set.</p> </dd> <dt><strong><span class=\"code\">uid = integer() &gt;= 0</span></strong></dt> <dd> <p>Indicates the file owner. Ignored for non-Unix file systems.</p> </dd> <dt><strong><span class=\"code\">gid = integer() &gt;= 0</span></strong></dt> <dd> <p>Gives the group that the file owner belongs to. Ignored for non-Unix file systems.</p> </dd> </dl> <p>Typical error reasons:</p> <dl> <dt><strong><span class=\"code\">eacces</span></strong></dt> <dd> <p>Missing search permission for one of the parent directories of the file.</p> </dd> <dt><strong><span class=\"code\">enoent</span></strong></dt> <dd> <p>The file does not exist.</p> </dd> <dt><strong><span class=\"code\">enotdir</span></strong></dt> <dd> <p>A component of the filename is not a directory. On some platforms, <span class=\"code\">enoent</span> is returned instead.</p> </dd> </dl> <p></p></div> "}