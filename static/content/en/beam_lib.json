{"summary":"An interface to the BEAM file format.","description":"<p> </p><p>This module provides an interface to files created by the BEAM Compiler (&quot;BEAM files&quot;). The format used, a variant of &quot;EA IFF 1985&quot; Standard for Interchange Format Files, divides data into chunks.</p> <p>Chunk data can be returned as binaries or as compound terms. Compound terms are returned when chunks are referenced by names (atoms) rather than identifiers (strings). The recognized names and the corresponding identifiers are as follows:</p> <ul> <li><span class=\"code\">atoms (&quot;Atom&quot;)</span></li> <li><span class=\"code\">attributes (&quot;Attr&quot;)</span></li> <li><span class=\"code\">compile_info (&quot;CInf&quot;)</span></li> <li><span class=\"code\">debug_info (&quot;Dbgi&quot;)</span></li> <li><span class=\"code\">exports (&quot;ExpT&quot;)</span></li> <li><span class=\"code\">imports (&quot;ImpT&quot;)</span></li> <li><span class=\"code\">indexed_imports (&quot;ImpT&quot;)</span></li> <li><span class=\"code\">labeled_exports (&quot;ExpT&quot;)</span></li> <li><span class=\"code\">labeled_locals (&quot;LocT&quot;)</span></li> <li><span class=\"code\">locals (&quot;LocT&quot;)</span></li> </ul> <p></p>","funcs":" <a name=\"all_chunks-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-all_chunks-1-id360737\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L269\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>all_chunks(File :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-beam\">beam()</a></span>) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, beam_lib, [{<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chunkid\">chunkid()</a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-dataB\">dataB()</a></span>}]} |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, beam_lib, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-info_rsn\">info_rsn()</a></span>}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 18.2</span></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p> </p><p>Reads chunk data for all chunks.</p> <p></p></div> <a name=\"build_module-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-build_module-1-id360854\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L277\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>build_module(Chunks) -&gt; {ok, Binary}</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 18.2</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Chunks = [{<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chunkid\">chunkid()</a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-dataB\">dataB()</a></span>}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Binary = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Builds a BEAM module (as a binary) from a list of chunks.</p> <p></p></div> <a name=\"chunks-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-chunks-2-id360854\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L285\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>chunks(Beam, ChunkRefs) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, {module(), [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chunkdata\">chunkdata()</a></span>]}} |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, beam_lib, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chnk_rsn\">chnk_rsn()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Beam = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-beam\">beam()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ChunkRefs = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chunkref\">chunkref()</a></span>]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Reads chunk data for selected chunks references. The order of the returned list of chunk data is determined by the order of the list of chunks references.</p> <p></p></div> <a name=\"chunks-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-chunks-3-id360860\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L295\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>chunks(Beam, ChunkRefs, Options) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, {module(), [ChunkResult]}} |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, beam_lib, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chnk_rsn\">chnk_rsn()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Beam = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-beam\">beam()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ChunkRefs = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chunkref\">chunkref()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Options = [allow_missing_chunks]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">ChunkResult = <br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chunkdata\">chunkdata()</a></span> | {ChunkRef :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chunkref\">chunkref()</a></span>, missing_chunk}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Reads chunk data for selected chunks references. The order of the returned list of chunk data is determined by the order of the list of chunks references.</p> <p>By default, if any requested chunk is missing in <span class=\"code\">Beam</span>, an <span class=\"code\">error</span> tuple is returned. However, if option <span class=\"code\">allow_missing_chunks</span> is specified, a result is returned even if chunks are missing. In the result list, any missing chunks are represented as <span class=\"code\">{ChunkRef,missing_chunk}</span>. Notice however that if chunk <span class=\"code\">&quot;Atom&quot;</span> is missing, that is considered a fatal error and the return value is an <span class=\"code\">error</span> tuple.</p> <p></p></div> <a name=\"clear_crypto_key_fun-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-clear_crypto_key_fun-0-id360743\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L314\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>clear_crypto_key_fun() -&gt; undefined | {ok, Result}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Result = undefined | term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Unregisters the crypto key fun and terminates the process holding it, started by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#crypto_key_fun-1\"><span class=\"code\">crypto_key_fun/1</span></a></span>. </p> <p>Returns either <span class=\"code\">{ok, undefined}</span> if no crypto key fun is registered, or <span class=\"code\">{ok, Term}</span>, where <span class=\"code\">Term</span> is the return value from <span class=\"code\">CryptoKeyFun(clear)</span>, see <span class=\"code\">crypto_key_fun/1</span>.</p> <p></p></div> <a name=\"cmp-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-cmp-2-id361389\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L329\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>cmp(Beam1, Beam2) -&gt; ok | {error, beam_lib, cmp_rsn()}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Beam1 = Beam2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-beam\">beam()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-2\"> <span class=\"bold_code bc-5\">cmp_rsn() = <br>&#xA0;&#xA0;&#xA0;&#xA0;{modules_different, module(), module()} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{chunks_different, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chunkid\">chunkid()</a></span>} |<br>&#xA0;&#xA0;&#xA0;&#xA0;different_chunks |<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-info_rsn\">info_rsn()</a></span></span><br></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Compares the contents of two BEAM files. If the module names are the same, and all chunks except for chunk <span class=\"code\">&quot;CInf&quot;</span> (the chunk containing the compilation information that is returned by <span class=\"code\">Module:module_info(compile)</span>) have the same contents in both files, <span class=\"code\">ok</span> is returned. Otherwise an error message is returned.</p> <p></p></div> <a name=\"cmp_dirs-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-cmp_dirs-2-id361393\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L343\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>cmp_dirs(Dir1, Dir2) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{Only1, Only2, Different} | {error, beam_lib, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir1 = Dir2 = atom() | <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-filename\">file:filename()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Only1 = Only2 = [<span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-filename\">file:filename()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Different = <br>&#xA0;&#xA0;&#xA0;&#xA0;[{Filename1 :: <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-filename\">file:filename()</a></span>, Filename2 :: <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-filename\">file:filename()</a></span>}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = {not_a_directory, term()} | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-info_rsn\">info_rsn()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Compares the BEAM files in two directories. Only files with extension <span class=\"code\">&quot;.beam&quot;</span> are compared. BEAM files that exist only in directory <span class=\"code\">Dir1</span> (<span class=\"code\">Dir2</span>) are returned in <span class=\"code\">Only1</span> (<span class=\"code\">Only2</span>). BEAM files that exist in both directories but are considered different by <span class=\"code\">cmp/2</span> are returned as pairs {<span class=\"code\">Filename1</span>, <span class=\"code\">Filename2</span>}, where <span class=\"code\">Filename1</span> (<span class=\"code\">Filename2</span>) exists in directory <span class=\"code\">Dir1</span> (<span class=\"code\">Dir2</span>).</p> <p></p></div> <a name=\"crypto_key_fun-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-crypto_key_fun-1-id361574\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L361\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>crypto_key_fun(CryptoKeyFun) -&gt; ok | {error, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">CryptoKeyFun = crypto_fun()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = badfun | exists | term()</span></div><div class=\"REFTYPES rt-2\"> <span class=\"bold_code bc-5\">crypto_fun() = fun((crypto_fun_arg()) -&gt; term())</span><br></div><div class=\"REFTYPES rt-2\"> <span class=\"bold_code bc-5\">crypto_fun_arg() = <br>&#xA0;&#xA0;&#xA0;&#xA0;init | clear | {debug_info, mode(), module(), <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-filename\">file:filename()</a></span>}</span><br></div><div class=\"REFTYPES rt-2\"> <span class=\"bold_code bc-5\">mode() = des3_cbc</span><br></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Registers an unary fun that is called if <span class=\"code\">beam_lib</span> must read an <span class=\"code\">debug_info</span> chunk that has been encrypted. The fun is held in a process that is started by the function.</p> <p>If a fun is already registered when attempting to register a fun, <span class=\"code\">{error, exists}</span> is returned.</p> <p>The fun must handle the following arguments:</p> <div class=\"example example-none\"><pre>CryptoKeyFun(init) -&gt; ok | {ok, NewCryptoKeyFun} | {error, Term}</pre></div> <p>Called when the fun is registered, in the process that holds the fun. Here the crypto key fun can do any necessary initializations. If <span class=\"code\">{ok, NewCryptoKeyFun}</span> is returned, <span class=\"code\">NewCryptoKeyFun</span> is registered instead of <span class=\"code\">CryptoKeyFun</span>. If <span class=\"code\">{error, Term}</span> is returned, the registration is aborted and <span class=\"code\">crypto_key_fun/1</span> also returns <span class=\"code\">{error, Term}</span>.</p> <div class=\"example example-none\"><pre>CryptoKeyFun({debug_info, Mode, Module, Filename}) -&gt; Key</pre></div> <p>Called when the key is needed for module <span class=\"code\">Module</span> in the file named <span class=\"code\">Filename</span>. <span class=\"code\">Mode</span> is the type of crypto algorithm; currently, the only possible value is <span class=\"code\">des3_cbc</span>. The call is to fail (raise an exception) if no key is available.</p> <div class=\"example example-none\"><pre>CryptoKeyFun(clear) -&gt; term()</pre></div> <p>Called before the fun is unregistered. Here any cleaning up can be done. The return value is not important, but is passed back to the caller of <span class=\"code\">clear_crypto_key_fun/0</span> as part of its return value.</p> <p></p></div> <a name=\"diff_dirs-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-diff_dirs-2-id362052\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L400\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>diff_dirs(Dir1, Dir2) -&gt; ok | {error, beam_lib, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir1 = Dir2 = atom() | <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-filename\">file:filename()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = {not_a_directory, term()} | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-info_rsn\">info_rsn()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Compares the BEAM files in two directories as <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#cmp_dirs-2\"><span class=\"code\">cmp_dirs/2</span></a></span>, but the names of files that exist in only one directory or are different are presented on standard output.</p> <p></p></div> <a name=\"format_error-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-format_error-1-id362141\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L411\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>format_error(Reason) -&gt; <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/io_lib#type-chars\">io_lib:chars()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>For a specified error returned by any function in this module, this function returns a descriptive string of the error in English. For file errors, function <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/file#format_error-1\"><span class=\"code\">file:format_error(Posix)</span></a></span> is to be called.</p> <p></p></div> <a name=\"info-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-info-1-id362260\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L424\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>info(Beam) -&gt; [InfoPair] | {error, beam_lib, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-info_rsn\">info_rsn()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Beam = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-beam\">beam()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">InfoPair = <br>&#xA0;&#xA0;&#xA0;&#xA0;{file, Filename :: <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-filename\">file:filename()</a></span>} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{binary, Binary :: binary()} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{module, Module :: module()} |<br>&#xA0;&#xA0;&#xA0;&#xA0;{chunks,<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;[{ChunkId :: <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chunkid\">chunkid()</a></span>,<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Pos :: integer() &gt;= 0,<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Size :: integer() &gt;= 0}]}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list containing some information about a BEAM file as tuples <span class=\"code\">{Item, Info}</span>:</p> <dl> <dt><strong><span class=\"code\">{file, Filename} | {binary, Binary}</span></strong></dt> <dd> <p>The name (string) of the BEAM file, or the binary from which the information was extracted.</p> </dd> <dt><strong><span class=\"code\">{module, Module}</span></strong></dt> <dd> <p>The name (atom) of the module.</p> </dd> <dt><strong><span class=\"code\">{chunks, [{ChunkId, Pos, Size}]}</span></strong></dt> <dd> <p>For each chunk, the identifier (string) and the position and size of the chunk data, in bytes.</p> </dd> </dl> <p></p></div> <a name=\"md5-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-md5-1-id362238\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L451\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>md5(Beam) -&gt; {ok, {module(), MD5}} | {error, beam_lib, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chnk_rsn\">chnk_rsn()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Beam = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-beam\">beam()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">MD5 = binary()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Calculates an MD5 redundancy check for the code of the module (compilation date and other attributes are not included).</p> <p></p></div> <a name=\"strip-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-strip-1-id362284\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L460\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>strip(Beam1) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, {module(), Beam2}} | {error, beam_lib, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-info_rsn\">info_rsn()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Beam1 = Beam2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-beam\">beam()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Removes all chunks from a BEAM file except those needed by the loader. In particular, the debug information (chunk <span class=\"code\">debug_info</span> and <span class=\"code\">abstract_code</span>) is removed.</p> <p></p></div> <a name=\"strip-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-strip-2-id362591\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L472\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>strip(Beam1, AdditionalChunks) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, {module(), Beam2}} | {error, beam_lib, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-info_rsn\">info_rsn()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Beam1 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-beam\">beam()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AdditionalChunks = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chunkid\">chunkid()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Beam2 = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-beam\">beam()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Removes all chunks from a BEAM file except those needed by the loader or passed in. In particular, the debug information (chunk <span class=\"code\">debug_info</span> and <span class=\"code\">abstract_code</span>) is removed.</p> <p></p></div> <a name=\"strip_files-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-strip_files-1-id362571\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L484\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>strip_files(Files) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, [{module(), Beam}]} |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, beam_lib, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-info_rsn\">info_rsn()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Files = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-beam\">beam()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Beam = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-beam\">beam()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Removes all chunks except those needed by the loader from BEAM files. In particular, the debug information (chunk <span class=\"code\">debug_info</span> and <span class=\"code\">abstract_code</span>) is removed. The returned list contains one element for each specified filename, in the same order as in <span class=\"code\">Files</span>.</p> <p></p></div> <a name=\"strip_files-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-strip_files-2-id362850\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L497\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>strip_files(Files, AdditionalChunks) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, [{module(), Beam}]} |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, beam_lib, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-info_rsn\">info_rsn()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Files = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-beam\">beam()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AdditionalChunks = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chunkid\">chunkid()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Beam = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-beam\">beam()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Removes all chunks except those needed by the loader or passed in from BEAM files. In particular, the debug information (chunk <span class=\"code\">debug_info</span> and <span class=\"code\">abstract_code</span>) is removed. The returned list contains one element for each specified filename, in the same order as in <span class=\"code\">Files</span>.</p> <p></p></div> <a name=\"strip_release-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-strip_release-1-id362571\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L510\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>strip_release(Dir) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, [{module(), <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-filename\">file:filename()</a></span>}]} |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, beam_lib, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = atom() | <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-filename\">file:filename()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = {not_a_directory, term()} | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-info_rsn\">info_rsn()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Removes all chunks except those needed by the loader from the BEAM files of a release. <span class=\"code\">Dir</span> is to be the installation root directory. For example, the current OTP release can be stripped with the call <span class=\"code\">beam_lib:strip_release(code:root_dir())</span>.</p> <p></p></div> <a name=\"strip_release-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-strip_release-2-id363189\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L524\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>strip_release(Dir, AdditionalChunks) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, [{module(), <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-filename\">file:filename()</a></span>}]} |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, beam_lib, Reason}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Dir = atom() | <span class=\"bold_code bc-14\"><a href=\"/erldoc/docs/file#type-filename\">file:filename()</a></span></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AdditionalChunks = [<span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chunkid\">chunkid()</a></span>]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Reason = {not_a_directory, term()} | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-info_rsn\">info_rsn()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Removes all chunks except those needed by the loader or passed in from the BEAM files of a release. <span class=\"code\">Dir</span> is to be the installation root directory. For example, the current OTP release can be stripped with the call <span class=\"code\">beam_lib:strip_release(code:root_dir())</span>.</p> <p></p></div> <a name=\"version-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-version-1-id363011\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/beam_lib.xml#L538\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>version(Beam) -&gt;<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{ok, {module(), [Version :: term()]}} |<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{error, beam_lib, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-chnk_rsn\">chnk_rsn()</a></span>}</div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Beam = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-beam\">beam()</a></span></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the module version or versions. A version is defined by module attribute <span class=\"code\">-vsn(Vsn)</span>. If this attribute is not specified, the version defaults to the checksum of the module. Notice that if version <span class=\"code\">Vsn</span> is not a list, it is made into one, that is <span class=\"code\">{ok,{Module,[Vsn]}}</span> is returned. If there are many <span class=\"code\">-vsn</span> module attributes, the result is the concatenated list of versions.</p> <p><strong>Examples:</strong></p> <div class=\"example\"><pre>1&gt; <span class=\"bold_code bc-12\">beam_lib:version(a).</span> % -vsn(1).{ok,{a,[1]}}2&gt; <span class=\"bold_code bc-12\">beam_lib:version(b).</span> % -vsn([1]).{ok,{b,[1]}}3&gt; <span class=\"bold_code bc-12\">beam_lib:version(c).</span> % -vsn([1]). -vsn(2).{ok,{c,[1,2]}}4&gt; <span class=\"bold_code bc-12\">beam_lib:version(d).</span> % no -vsn attribute{ok,{d,[275613208176997377698094100858909383631]}}</pre></div> <p></p></div> "}