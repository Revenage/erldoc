{"summary":"A port of wxWidgets.","description":"<p></p><p>A port of <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.wxwidgets.org/\">wxWidgets</a></span>.</p> <p>This is the base api of <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.wxwidgets.org/\">wxWidgets</a></span>. This module contains functions for starting and stopping the wx-server, as well as other utility functions.</p> <p>wxWidgets is object oriented, and not functional. Thus, in wxErlang a module represents a class, and the object created by this class has an own type, wxCLASS(). This module represents the base class, and all other wxMODULE&apos;s are sub-classes of this class.</p> <p>Objects of a class are created with wxCLASS:new(...) and destroyed with wxCLASS:destroy(). Member functions are called with wxCLASS:member(Object, ...) instead of as in C++ Object.member(...).</p> <p>Sub class modules inherit (non static) functions from their parents. The inherited functions are not documented in the sub-classes.</p> <p>This erlang port of wxWidgets tries to be a one-to-one mapping with the original wxWidgets library. Some things are different though, as the optional arguments use property lists and can be in any order. The main difference is the event handling which is different from the original library. See <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/wxEvtHandler\">wxEvtHandler</a></span>.</p> <p>The following classes are implemented directly as erlang types: <br> wxPoint={x,y},wxSize={w,h},wxRect={x,y,w,h},wxColour={r,g,b [,a]}, wxString=<span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/unicode#type-chardata\">unicode:chardata()</a></span>, wxGBPosition={r,c},wxGBSpan={rs,cs},wxGridCellCoords={r,c}.</p> <p>wxWidgets uses a process specific environment, which is created by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/wx#new-0\">wx:new/0</a></span>. To be able to use the environment from other processes, call <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#get_env-0\">get_env/0</a></span> to retrieve the environment and <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#set_env-1\">set_env/1</a></span> to assign the environment in the other process.</p> <p>Global (classless) functions are located in the wx_misc module.</p><p></p>","funcs":"<table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-parent_class-1-id166423\"></span><a class=\"title_link\" name=\"parent_class-1\" href=\"/erldoc/docs/#parent_class-1\">parent_class(X1) -&gt; term()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"parent_class-1\"></a> </p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-new-0-id208658\"></span><a class=\"title_link\" name=\"new-0\" href=\"/erldoc/docs/#new-0\">new() -&gt; wx_object()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"new-0\"></a> </p><p>Starts a wx server.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-new-1-id251150\"></span><a class=\"title_link\" name=\"new-1\" href=\"/erldoc/docs/#new-1\">new(Options::[Option]) -&gt; wx_object()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Option = {debug, list() | atom()} | {silent_start, boolean()}</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"new-1\"></a> </p><p>Starts a wx server. Option may be {debug, Level}, see debug/1. Or {silent_start, Bool}, which causes error messages at startup to be suppressed. The latter can be used as a silent test of whether wx is properly installed or not.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-destroy-0-id248994\"></span><a class=\"title_link\" name=\"destroy-0\" href=\"/erldoc/docs/#destroy-0\">destroy() -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"destroy-0\"></a> </p><p>Stops a wx server.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_env-0-id251060\"></span><a class=\"title_link\" name=\"get_env-0\" href=\"/erldoc/docs/#get_env-0\">get_env() -&gt; wx_env()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"get_env-0\"></a> </p><p>Gets this process&apos;s current wx environment. Can be sent to other processes to allow them use this process wx environment.</p><p><strong>See also:</strong> <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#set_env-1\">set_env/1</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-set_env-1-id173169\"></span><a class=\"title_link\" name=\"set_env-1\" href=\"/erldoc/docs/#set_env-1\">set_env(Wx_env::wx_env()) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"set_env-1\"></a> </p><p>Sets the process wx environment, allows this process to use another process wx environment.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-null-0-id116590\"></span><a class=\"title_link\" name=\"null-0\" href=\"/erldoc/docs/#null-0\">null() -&gt; wx_object()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"null-0\"></a> </p><p>Returns the null object</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-is_null-1-id193440\"></span><a class=\"title_link\" name=\"is_null-1\" href=\"/erldoc/docs/#is_null-1\">is_null(Wx_ref::wx_object()) -&gt; boolean()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"is_null-1\"></a> </p><p>Returns true if object is null, false otherwise</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-equal-2-id251143\"></span><a class=\"title_link\" name=\"equal-2\" href=\"/erldoc/docs/#equal-2\">equal(Wx_ref::wx_object(), X2::wx_object()) -&gt; boolean()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"equal-2\"></a> </p><p>Returns true if both arguments references the same object, false otherwise</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-getObjectType-1-id185509\"></span><a class=\"title_link\" name=\"getObjectType-1\" href=\"/erldoc/docs/#getObjectType-1\">getObjectType(Wx_ref::wx_object()) -&gt; atom()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"getObjectType-1\"></a> </p><p>Returns the object type</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-typeCast-2-id60803\"></span><a class=\"title_link\" name=\"typeCast-2\" href=\"/erldoc/docs/#typeCast-2\">typeCast(Old::wx_object(), NewType::atom()) -&gt; wx_object()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"typeCast-2\"></a> </p><p>Casts the object to class NewType. It is needed when using functions like wxWindow:findWindow/2, which returns a generic wxObject type.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-batch-1-id251158\"></span><a class=\"title_link\" name=\"batch-1\" href=\"/erldoc/docs/#batch-1\">batch(Fun::function()) -&gt; term()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"batch-1\"></a> </p><p>Batches all <span class=\"code\">wx</span> commands used in the fun. Improves performance of the command processing by grabbing the wxWidgets thread so that no event processing will be done before the complete batch of commands is invoked. </p><p><strong>See also:</strong> <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#foldl-3\">foldl/3</a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#foldr-3\">foldr/3</a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#foreach-2\">foreach/2</a></span>, <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#map-2\">map/2</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-foreach-2-id247959\"></span><a class=\"title_link\" name=\"foreach-2\" href=\"/erldoc/docs/#foreach-2\">foreach(Fun::function(), List::list()) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"foreach-2\"></a> </p><p>Behaves like <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/lists#foreach-2\">lists:foreach/2</a></span> but batches wx commands. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#batch-1\">batch/1</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-map-2-id245718\"></span><a class=\"title_link\" name=\"map-2\" href=\"/erldoc/docs/#map-2\">map(Fun::function(), List::list()) -&gt; list()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"map-2\"></a> </p><p>Behaves like <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/lists#map-2\">lists:map/2</a></span> but batches wx commands. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#batch-1\">batch/1</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-foldl-3-id249277\"></span><a class=\"title_link\" name=\"foldl-3\" href=\"/erldoc/docs/#foldl-3\">foldl(Fun::function(), Acc::term(), List::list()) -&gt; term()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"foldl-3\"></a> </p><p>Behaves like <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/lists#foldl-3\">lists:foldl/3</a></span> but batches wx commands. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#batch-1\">batch/1</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-foldr-3-id245804\"></span><a class=\"title_link\" name=\"foldr-3\" href=\"/erldoc/docs/#foldr-3\">foldr(Fun::function(), Acc::term(), List::list()) -&gt; term()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"foldr-3\"></a> </p><p>Behaves like <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/lists#foldr-3\">lists:foldr/3</a></span> but batches wx commands. See <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#batch-1\">batch/1</a></span>.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-create_memory-1-id206819\"></span><a class=\"title_link\" name=\"create_memory-1\" href=\"/erldoc/docs/#create_memory-1\">create_memory(Size::integer()) -&gt; wx_memory()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"create_memory-1\"></a> </p><p>Creates a memory area (of Size in bytes) which can be used by an external library (i.e. opengl). It is up to the client to keep a reference to this object so it does not get garbage collected by erlang while still in use by the external library.</p> <p>This is far from erlang&apos;s intentional usage and can crash the erlang emulator. Use it carefully.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-get_memory_bin-1-id251099\"></span><a class=\"title_link\" name=\"get_memory_bin-1\" href=\"/erldoc/docs/#get_memory_bin-1\">get_memory_bin(Wx_mem::wx_memory()) -&gt; binary()</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"get_memory_bin-1\"></a> </p><p>Returns the memory area as a binary.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-retain_memory-1-id214355\"></span><a class=\"title_link\" name=\"retain_memory-1\" href=\"/erldoc/docs/#retain_memory-1\">retain_memory(Wx_mem::wx_memory()) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"retain_memory-1\"></a> </p><p>Saves the memory from deletion until release_memory/1 is called. If release_memory/1 is not called the memory will not be garbage collected.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-release_memory-1-id249001\"></span><a class=\"title_link\" name=\"release_memory-1\" href=\"/erldoc/docs/#release_memory-1\">release_memory(Wx_mem::wx_memory()) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"release_memory-1\"></a> </p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-debug-1-id209929\"></span><a class=\"title_link\" name=\"debug-1\" href=\"/erldoc/docs/#debug-1\">debug(Debug::Level | [Level]) -&gt; ok</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Level = none | verbose | trace | driver | integer()</span><br></div></div><div class=\"REFBODY rb-7\"><p><a name=\"debug-1\"></a> </p><p>Sets debug level. If debug level is &apos;verbose&apos; or &apos;trace&apos; each call is printed on console. If Level is &apos;driver&apos; each allocated object and deletion is printed on the console.</p><p></p></div><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-demo-0-id244841\"></span><a class=\"title_link\" name=\"demo-0\" href=\"/erldoc/docs/#demo-0\">demo() -&gt; ok | {error, atom()}</a></span></div></td><td class=\"func-since-td\"></td></tr></tbody></table><div class=\"REFBODY rb-7\"><p><a name=\"demo-0\"></a> </p><p>Starts a wxErlang demo if examples directory exists and is compiled</p><p></p></div>","name":"wx"}