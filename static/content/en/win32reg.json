{
	"erlref": {
		"header": {
			"copyright": {
				"year": [
					"2000",
					"2016"
				],
				"holder": "Ericsson AB. All Rights Reserved."
			},
			"legalnotice": "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.",
			"title": "win32reg",
			"prepared": "Bjorn Gustavsson",
			"responsible": {},
			"docno": {},
			"approved": {},
			"checked": {},
			"date": "2000-08-10",
			"rev": "PA1",
			"file": "win32reg.xml"
		},
		"module": {
			"since": "",
			"$t": "win32reg"
		},
		"modulesummary": "Provides access to the registry on Windows.",
		"description": {
			"p": [
				"This module provides read and write access to the registry on Windows. It is essentially a port driver wrapped around the Win32 API calls for accessing the registry.",
				"The registry is a hierarchical database, used to store various system and software information in Windows. It contains installation data, and is updated by installers and system programs. The Erlang installer updates the registry by adding data that Erlang needs.",
				"The registry contains keys and values. Keys are like the directories in a file system, they form a hierarchy. Values are like files, they have a name and a value, and also a type.",
				"Paths to keys are left to right, with subkeys to the right and backslash between keys. (Remember that backslashes must be doubled in Erlang strings.) Case is preserved but not significant.",
				{
					"c": "\"\\\\hkey_local_machine\\\\software\\\\Ericsson\\\\Erlang\\\\5.0\""
				},
				"There are six entry points in the Windows registry, top-level keys. They can be abbreviated in this module as follows:",
				{
					"c": "\"\\\\hklm\\\\software\\\\ericsson\\\\erlang\\\\5.0\""
				},
				"This module uses a current key. It works much like the current directory. From the current key, values can be fetched, subkeys can be listed, and so on.",
				"Under a key, any number of named values can be stored. They have names, types, and data.",
				{
					"c": "win32reg"
				},
				"Other types can be read, and are returned as binaries.",
				{
					"c": "default"
				},
				{
					"c": [
						"%SystemRoot%Windows",
						"SystemRoot",
						"%"
					],
					"seealso": {
						"marker": "#expand/1",
						"c": "expand/1"
					}
				},
				"For more information on the Windows registry, see consult the Win32 Programmer's Reference."
			],
			"pre": "Abbreviation Registry key============ ============hkcr HKEY_CLASSES_ROOTcurrent_user HKEY_CURRENT_USERhkcu HKEY_CURRENT_USERlocal_machine HKEY_LOCAL_MACHINEhklm HKEY_LOCAL_MACHINEusers HKEY_USERShku HKEY_USERScurrent_config HKEY_CURRENT_CONFIGhkcc HKEY_CURRENT_CONFIGdyn_data HKEY_DYN_DATAhkdd HKEY_DYN_DATA",
			"list": {
				"type": "bulleted",
				"item": [
					{
						"c": "REG_DWORD"
					},
					{
						"c": "REG_SZ"
					},
					{
						"c": "REG_BINARY"
					}
				]
			}
		},
		"datatypes": {
			"datatype": [
				{
					"name": {
						"name": "reg_handle"
					},
					"desc": {
						"p": {
							"seealso": {
								"marker": "#open/1",
								"c": "open/1"
							}
						}
					}
				},
				{
					"name": {
						"name": "name"
					}
				},
				{
					"name": {
						"name": "value"
					}
				}
			]
		},
		"funcs": {
			"func": [
				{
					"name": {
						"name": "change_key",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Move to a key in the registry.",
					"desc": {
						"p": {
							"c": [
								"cd",
								"\\."
							]
						}
					}
				},
				{
					"name": {
						"name": "change_key_create",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Move to a key, create it if it is not there.",
					"desc": {
						"p": [
							{
								"c": [
									"mkdir",
									"cd",
									"RegCreateKeyEx()"
								]
							},
							"The registry must have been opened in write mode."
						]
					}
				},
				{
					"name": {
						"name": "close",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Close the registry.",
					"desc": {
						"p": {
							"c": {
								"anno": "RegHandle"
							}
						}
					}
				},
				{
					"name": {
						"name": "current_key",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Return the path to the current key.",
					"desc": {
						"p": [
							{
								"c": "pwd"
							},
							"Notice that the current key is stored in the driver, and can be invalid (for example, if the key has been removed)."
						]
					}
				},
				{
					"name": {
						"name": "delete_key",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Delete the current key.",
					"desc": {
						"p": {
							"c": "RegDeleteKey()",
							"seealso": {
								"marker": "#change_key_create/2",
								"c": "change_key_create/2"
							}
						}
					}
				},
				{
					"name": {
						"name": "delete_value",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Delete the named value on the current key.",
					"desc": {
						"p": [
							{
								"c": "default"
							},
							"The registry must have been opened in write mode."
						]
					}
				},
				{
					"name": {
						"name": "expand",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Expand a string with environment variables.",
					"desc": {
						"p": [
							{
								"c": [
									"%",
									"%",
									"%"
								]
							},
							"A variable name that is not in the environment results in an error."
						]
					}
				},
				{
					"name": {
						"name": "format_error",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Convert a POSIX error code to a string.",
					"desc": {
						"p": {
							"c": "erl_posix_msg:message/1"
						}
					}
				},
				{
					"name": {
						"name": "open",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Open the registry for reading or writing.",
					"desc": {
						"p": [
							{
								"c": [
									"HKEY_CLASSES_ROOT",
									"read"
								]
							},
							{
								"seealso": [
									{
										"marker": "#change_key/2",
										"c": "change_key/2"
									},
									{
										"marker": "#open/1",
										"c": "open"
									}
								]
							}
						]
					}
				},
				{
					"name": {
						"name": "set_value",
						"arity": "3",
						"since": ""
					},
					"fsummary": "Set value at the current registry key with specified name.",
					"desc": {
						"p": [
							{
								"c": [
									"value",
									"RegSetValueEx()"
								]
							},
							"Other types cannot be added or changed.",
							"The registry must have been opened in write mode."
						],
						"list": {
							"type": "bulleted",
							"item": [
								{
									"c": "REG_DWORD"
								},
								{
									"c": "REG_SZ"
								},
								{
									"c": "REG_BINARY"
								}
							]
						}
					}
				},
				{
					"name": {
						"name": "sub_keys",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Get subkeys to the current key.",
					"desc": {
						"p": [
							{
								"c": "EnumRegKeysEx()"
							},
							"Avoid calling this on the root keys, as it can be slow."
						]
					}
				},
				{
					"name": {
						"name": "value",
						"arity": "2",
						"since": ""
					},
					"fsummary": "Get the named value on the current key.",
					"desc": {
						"p": {
							"c": [
								"REG_SZ",
								"REG_DWORD"
							]
						}
					}
				},
				{
					"name": {
						"name": "values",
						"arity": "1",
						"since": ""
					},
					"fsummary": "Get all values on the current key.",
					"desc": {
						"p": {
							"seealso": {
								"marker": "#value/2",
								"c": "value/2"
							},
							"c": "EnumRegValuesEx()"
						}
					}
				}
			]
		},
		"section": {
			"title": "See Also",
			"p": {
				"c": "erl_posix_msg"
			}
		}
	}
}