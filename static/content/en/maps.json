{"summary":"Maps processing functions.","description":"<p> </p><p>This module contains functions for maps processing.</p> <p></p>","funcs":" <a name=\"filter-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-filter-2-id335725\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L56\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>filter(Pred, MapOrIter) -&gt; Map</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 18.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Pred = fun((Key, Value) -&gt; boolean())</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">MapOrIter = #{Key =&gt; Value} | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-iterator\">iterator</a></span>(Key, Value)</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map = #{Key =&gt; Value}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a map <span class=\"code\">Map</span> for which predicate <span class=\"code\">Pred</span> holds true in <span class=\"code\">MapOrIter</span>.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">MapOrIter</span> is not a map or valid iterator, or with <span class=\"code\">badarg</span> if <span class=\"code\">Pred</span> is not a function of arity 2.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; M = #{a =&gt; 2, b =&gt; 3, c=&gt; 4, &quot;a&quot; =&gt; 1, &quot;b&quot; =&gt; 2, &quot;c&quot; =&gt; 4}, Pred = fun(K,V) -&gt; is_atom(K) andalso (V rem 2) =:= 0 end, maps:filter(Pred,M).#{a =&gt; 2,c =&gt; 4}</pre></div> <p></p></div> <a name=\"find-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-find-2-id351601\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L75\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>find(Key, Map) -&gt; {ok, Value} | error</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map = #{Key =&gt; Value, term() =&gt; term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a tuple <span class=\"code\">{ok, Value}</span>, where <span class=\"code\">Value</span> is the value associated with <span class=\"code\">Key</span>, or <span class=\"code\">error</span> if no value is associated with <span class=\"code\">Key</span> in <span class=\"code\">Map</span>.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">Map</span> is not a map.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Map = #{&quot;hi&quot; =&gt; 42}, Key = &quot;hi&quot;, maps:find(Key,Map).{ok,42}</pre></div> <p></p></div> <a name=\"fold-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-fold-3-id350125\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L94\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>fold(Fun, Init, MapOrIter) -&gt; Acc</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((Key, Value, AccIn) -&gt; AccOut)</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Init = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Acc = AccOut</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">AccIn = Init | AccOut</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">MapOrIter = #{Key =&gt; Value} | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-iterator\">iterator</a></span>(Key, Value)</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Calls <span class=\"code\">F(Key, Value, AccIn)</span> for every <span class=\"code\">Key</span> to value <span class=\"code\">Value</span> association in <span class=\"code\">MapOrIter</span> in any order. Function <span class=\"code\">fun F/3</span> must return a new accumulator, which is passed to the next successive call. This function returns the final value of the accumulator. The initial accumulator value <span class=\"code\">Init</span> is returned if the map is empty.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">MapOrIter</span> is not a map or valid iterator, or with <span class=\"code\">badarg</span> if <span class=\"code\">Fun</span> is not a function of arity 3.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Fun = fun(K,V,AccIn) when is_list(K) -&gt; AccIn + V end, Map = #{&quot;k1&quot; =&gt; 1, &quot;k2&quot; =&gt; 2, &quot;k3&quot; =&gt; 3}, maps:fold(Fun,0,Map).6</pre></div> <p></p></div> <a name=\"from_list-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-from_list-1-id358077\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L118\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>from_list(List) -&gt; Map</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">List = [{Key, Value}]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = Value = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map = map()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Takes a list of key-value tuples elements and builds a map. The associations can be in any order, and both keys and values in the association can be of any term. If the same key appears more than once, the latter (right-most) value is used and the previous values are ignored.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; List = [{&quot;a&quot;,ignored},{1337,&quot;value two&quot;},{42,value_three},{&quot;a&quot;,1}], maps:from_list(List).#{42 =&gt; value_three,1337 =&gt; &quot;value two&quot;,&quot;a&quot; =&gt; 1}</pre></div> <p></p></div> <a name=\"get-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get-2-id354997\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L135\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get(Key, Map) -&gt; Value</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map = map()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Value = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns value <span class=\"code\">Value</span> associated with <span class=\"code\">Key</span> if <span class=\"code\">Map</span> contains <span class=\"code\">Key</span>.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">Map</span> is not a map, or with a <span class=\"code\">{badkey,Key}</span> exception if no value is associated with <span class=\"code\">Key</span>.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Key = 1337, Map = #{42 =&gt; value_two,1337 =&gt; &quot;value one&quot;,&quot;a&quot; =&gt; 1}, maps:get(Key,Map).&quot;value one&quot;</pre></div> <p></p></div> <a name=\"get-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-get-3-id359326\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L154\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>get(Key, Map, Default) -&gt; Value | Default</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.1</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map = #{Key =&gt; Value, term() =&gt; term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns value <span class=\"code\">Value</span> associated with <span class=\"code\">Key</span> if <span class=\"code\">Map</span> contains <span class=\"code\">Key</span>. If no value is associated with <span class=\"code\">Key</span>, <span class=\"code\">Default</span> is returned.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">Map</span> is not a map.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Map = #{ key1 =&gt; val1, key2 =&gt; val2 }.#{key1 =&gt; val1,key2 =&gt; val2}&gt; maps:get(key1, Map, &quot;Default value&quot;).val1&gt; maps:get(key3, Map, &quot;Default value&quot;).&quot;Default value&quot;</pre></div> <p></p></div> <a name=\"is_key-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-is_key-2-id359463\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L175\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>is_key(Key, Map) -&gt; boolean()</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map = map()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns <span class=\"code\">true</span> if map <span class=\"code\">Map</span> contains <span class=\"code\">Key</span> and returns <span class=\"code\">false</span> if it does not contain the <span class=\"code\">Key</span>.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">Map</span> is not a map.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Map = #{&quot;42&quot; =&gt; value}.#{&quot;42&quot; =&gt; value}&gt; maps:is_key(&quot;42&quot;,Map).true&gt; maps:is_key(value,Map).false</pre></div> <p></p></div> <a name=\"iterator-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-iterator-1-id359608\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L195\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>iterator(Map) -&gt; Iterator</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map = #{Key =&gt; Value}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Iterator = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-iterator\">iterator</a></span>(Key, Value)</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a map iterator <span class=\"code\">Iterator</span> that can be used by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#next-1\"><span class=\"code\">maps:next/1</span></a></span> to traverse the key-value associations in a map. When iterating over a map, the memory usage is guaranteed to be bounded no matter the size of the map.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">Map</span> is not a map.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; M = #{ a =&gt; 1, b =&gt; 2 }.#{a =&gt; 1,b =&gt; 2}&gt; I = maps:iterator(M), ok.ok&gt; {K1, V1, I2} = maps:next(I), {K1, V1}.{a,1}&gt; {K2, V2, I3} = maps:next(I2),{K2, V2}.{b,2}&gt; maps:next(I3).none</pre></div> <p></p></div> <a name=\"keys-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-keys-1-id359734\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L221\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>keys(Map) -&gt; Keys</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map = #{Key =&gt; term()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Keys = [Key]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a complete list of keys, in any order, which resides within <span class=\"code\">Map</span>.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">Map</span> is not a map.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Map = #{42 =&gt; value_three,1337 =&gt; &quot;value two&quot;,&quot;a&quot; =&gt; 1}, maps:keys(Map).[42,1337,&quot;a&quot;]</pre></div> <p></p></div> <a name=\"map-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-map-2-id359866\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L237\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>map(Fun, MapOrIter) -&gt; Map</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((Key, Value1) -&gt; Value2)</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">MapOrIter = #{Key =&gt; Value1} | <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-iterator\">iterator</a></span>(Key, Value1)</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map = #{Key =&gt; Value2}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Produces a new map <span class=\"code\">Map</span> by calling function <span class=\"code\">fun F(Key, Value1)</span> for every <span class=\"code\">Key</span> to value <span class=\"code\">Value1</span> association in <span class=\"code\">MapOrIter</span> in any order. Function <span class=\"code\">fun Fun/2</span> must return value <span class=\"code\">Value2</span> to be associated with key <span class=\"code\">Key</span> for the new map <span class=\"code\">Map</span>.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">MapOrIter</span> is not a map or valid iterator, or with <span class=\"code\">badarg</span> if <span class=\"code\">Fun</span> is not a function of arity 2.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Fun = fun(K,V1) when is_list(K) -&gt; V1*2 end, Map = #{&quot;k1&quot; =&gt; 1, &quot;k2&quot; =&gt; 2, &quot;k3&quot; =&gt; 3}, maps:map(Fun,Map).#{&quot;k1&quot; =&gt; 2,&quot;k2&quot; =&gt; 4,&quot;k3&quot; =&gt; 6}</pre></div> <p></p></div> <a name=\"merge-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-merge-2-id360066\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L261\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>merge(Map1, Map2) -&gt; Map3</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map1 = Map2 = Map3 = map()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Merges two maps into a single map <span class=\"code\">Map3</span>. If two keys exist in both maps, the value in <span class=\"code\">Map1</span> is superseded by the value in <span class=\"code\">Map2</span>.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">Map1</span> or <span class=\"code\">Map2</span> is not a map.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Map1 = #{a =&gt; &quot;value_one&quot;, b =&gt; &quot;value_two&quot;}, Map2 = #{a =&gt; 1, c =&gt; 2}, maps:merge(Map1,Map2).#{a =&gt; 1,b =&gt; &quot;value_two&quot;,c =&gt; 2}</pre></div> <p></p></div> <a name=\"new-0\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-new-0-id360206\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L279\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>new() -&gt; Map</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map = #{}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a new empty map.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; maps:new().#{}</pre></div> <p></p></div> <a name=\"next-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-next-1-id360293\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L291\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>next(Iterator) -&gt; {Key, Value, NextIterator} | none</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Iterator = NextIterator = <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#type-iterator\">iterator</a></span>(Key, Value)</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the next key-value association in <span class=\"code\">Iterator</span> and a new iterator for the remaining associations in the iterator. </p> <p> If there are no more associations in the iterator, <span class=\"code\">none</span> is returned. </p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Map = #{a =&gt; 1, b =&gt; 2, c =&gt; 3}.#{a =&gt; 1,b =&gt; 2,c =&gt; 3}&gt; I = maps:iterator(Map), ok.ok&gt; {K1, V1, I1} = maps:next(I), {K1, V1}.{a,1}&gt; {K2, V2, I2} = maps:next(I1), {K2, V2}.{b,2}&gt; {K3, V3, I3} = maps:next(I2), {K3, V3}.{c,3}&gt; maps:next(I3).none</pre></div> <p></p></div> <a name=\"put-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-put-3-id360291\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L320\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>put(Key, Value, Map1) -&gt; Map2</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = Value = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map1 = Map2 = map()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Associates <span class=\"code\">Key</span> with value <span class=\"code\">Value</span> and inserts the association into map <span class=\"code\">Map2</span>. If key <span class=\"code\">Key</span> already exists in map <span class=\"code\">Map1</span>, the old associated value is replaced by value <span class=\"code\">Value</span>. The function returns a new map <span class=\"code\">Map2</span> containing the new association and the old associations in <span class=\"code\">Map1</span>.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">Map1</span> is not a map.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Map = #{&quot;a&quot; =&gt; 1}.#{&quot;a&quot; =&gt; 1}&gt; maps:put(&quot;a&quot;, 42, Map).#{&quot;a&quot; =&gt; 42}&gt; maps:put(&quot;b&quot;, 1337, Map).#{&quot;a&quot; =&gt; 1,&quot;b&quot; =&gt; 1337}</pre></div> <p></p></div> <a name=\"remove-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-remove-2-id360588\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L344\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>remove(Key, Map1) -&gt; Map2</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Key = term()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map1 = Map2 = map()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Removes the <span class=\"code\">Key</span>, if it exists, and its associated value from <span class=\"code\">Map1</span> and returns a new map <span class=\"code\">Map2</span> without key <span class=\"code\">Key</span>.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">Map1</span> is not a map.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Map = #{&quot;a&quot; =&gt; 1}.#{&quot;a&quot; =&gt; 1}&gt; maps:remove(&quot;a&quot;,Map).#{}&gt; maps:remove(&quot;b&quot;,Map).#{&quot;a&quot; =&gt; 1}</pre></div> <p></p></div> <a name=\"size-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-size-1-id360731\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L364\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>size(Map) -&gt; integer() &gt;= 0</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map = map()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns the number of key-value associations in <span class=\"code\">Map</span>. This operation occurs in constant time.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Map = #{42 =&gt; value_two,1337 =&gt; &quot;value one&quot;,&quot;a&quot; =&gt; 1}, maps:size(Map).3</pre></div> <p></p></div> <a name=\"take-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-take-2-id360825\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L378\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>take(Key, Map1) -&gt; {Value, Map2} | error</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map1 = #{Key =&gt; Value, term() =&gt; term()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map2 = #{term() =&gt; term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>The function removes the <span class=\"code\">Key</span>, if it exists, and its associated value from <span class=\"code\">Map1</span> and returns a tuple with the removed <span class=\"code\">Value</span> and the new map <span class=\"code\">Map2</span> without key <span class=\"code\">Key</span>. If the key does not exist <span class=\"code\">error</span> is returned. </p> <p>The call will fail with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">Map1</span> is not a map. </p> <p>Example:</p> <div class=\"example example-none\"><pre>&gt; Map = #{&quot;a&quot; =&gt; &quot;hello&quot;, &quot;b&quot; =&gt; &quot;world&quot;}.#{&quot;a&quot; =&gt; &quot;hello&quot;, &quot;b&quot; =&gt; &quot;world&quot;}&gt; maps:take(&quot;a&quot;,Map).{&quot;hello&quot;,#{&quot;b&quot; =&gt; &quot;world&quot;}}&gt; maps:take(&quot;does not exist&quot;,Map).error</pre></div> <p></p></div> <a name=\"to_list-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-to_list-1-id360972\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L403\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>to_list(Map) -&gt; [{Key, Value}]</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map = #{Key =&gt; Value}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a list of pairs representing the key-value associations of <span class=\"code\">Map</span>, where the pairs <span class=\"code\">[{K1,V1}, ..., {Kn,Vn}]</span> are returned in arbitrary order.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">Map</span> is not a map.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Map = #{42 =&gt; value_three,1337 =&gt; &quot;value two&quot;,&quot;a&quot; =&gt; 1}, maps:to_list(Map).[{42,value_three},{1337,&quot;value two&quot;},{&quot;a&quot;,1}]</pre></div> <p></p></div> <a name=\"update-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-update-3-id361091\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L420\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>update(Key, Value, Map1) -&gt; Map2</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map1 = #{Key := term(), term() =&gt; term()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map2 = #{Key := Value, term() =&gt; term()}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>If <span class=\"code\">Key</span> exists in <span class=\"code\">Map1</span>, the old associated value is replaced by value <span class=\"code\">Value</span>. The function returns a new map <span class=\"code\">Map2</span> containing the new associated value.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">Map1</span> is not a map, or with a <span class=\"code\">{badkey,Key}</span> exception if no value is associated with <span class=\"code\">Key</span>.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Map = #{&quot;a&quot; =&gt; 1}.#{&quot;a&quot; =&gt; 1}&gt; maps:update(&quot;a&quot;, 42, Map).#{&quot;a&quot; =&gt; 42}</pre></div> <p></p></div> <a name=\"update_with-3\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-update_with-3-id361238\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L440\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>update_with(Key, Fun, Map1) -&gt; Map2</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map1 = #{Key := Value1, term() =&gt; term()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map2 = #{Key := Value2, term() =&gt; term()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((Value1) -&gt; Value2)</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Update a value in a <span class=\"code\">Map1</span> associated with <span class=\"code\">Key</span> by calling <span class=\"code\">Fun</span> on the old value to get a new value. An exception <span class=\"code\">{badkey,Key}</span> is generated if <span class=\"code\">Key</span> is not present in the map.</p> <p>Example:</p> <div class=\"example example-none\"><pre>&gt; Map = #{&quot;counter&quot; =&gt; 1}, Fun = fun(V) -&gt; V + 1 end, maps:update_with(&quot;counter&quot;,Fun,Map).#{&quot;counter&quot; =&gt; 2}</pre></div> <p></p></div> <a name=\"update_with-4\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-update_with-4-id361375\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L459\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>update_with(Key, Fun, Init, Map1) -&gt; Map2</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 19.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map1 = #{Key =&gt; Value1, term() =&gt; term()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map2 = #{Key := Value2 | Init, term() =&gt; term()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Fun = fun((Value1) -&gt; Value2)</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Update a value in a <span class=\"code\">Map1</span> associated with <span class=\"code\">Key</span> by calling <span class=\"code\">Fun</span> on the old value to get a new value. If <span class=\"code\">Key</span> is not present in <span class=\"code\">Map1</span> then <span class=\"code\">Init</span> will be associated with <span class=\"code\">Key</span>. </p> <p>Example:</p> <div class=\"example example-none\"><pre>&gt; Map = #{&quot;counter&quot; =&gt; 1}, Fun = fun(V) -&gt; V + 1 end, maps:update_with(&quot;new counter&quot;,Fun,42,Map).#{&quot;counter&quot; =&gt; 1,&quot;new counter&quot; =&gt; 42}</pre></div> <p></p></div> <a name=\"values-1\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-values-1-id361518\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L479\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>values(Map) -&gt; Values</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map = #{term() =&gt; Value}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Values = [Value]</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a complete list of values, in arbitrary order, contained in map <span class=\"code\">Map</span>.</p> <p>The call fails with a <span class=\"code\">{badmap,Map}</span> exception if <span class=\"code\">Map</span> is not a map.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Map = #{42 =&gt; value_three,1337 =&gt; &quot;value two&quot;,&quot;a&quot; =&gt; 1}, maps:values(Map).[value_three,&quot;value two&quot;,1]</pre></div> <p></p></div> <a name=\"with-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-with-2-id361636\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L495\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>with(Ks, Map1) -&gt; Map2</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.3</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Ks = [K]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map1 = #{K =&gt; V, term() =&gt; term()}</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map2 = #{K =&gt; V}</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a new map <span class=\"code\">Map2</span> with the keys <span class=\"code\">K1</span> through <span class=\"code\">Kn</span> and their associated values from map <span class=\"code\">Map1</span>. Any key in <span class=\"code\">Ks</span> that does not exist in <span class=\"code\">Map1</span> is ignored.</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Map = #{42 =&gt; value_three,1337 =&gt; &quot;value two&quot;,&quot;a&quot; =&gt; 1}, Ks = [&quot;a&quot;,42,&quot;other key&quot;], maps:with(Ks,Map).#{42 =&gt; value_three,&quot;a&quot; =&gt; 1}</pre></div> <p></p></div> <a name=\"without-2\"></a><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code func-head\" ><span id=\"ghlink-without-2-id361773\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/stdlib/doc/src/maps.xml#L512\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span>without(Ks, Map1) -&gt; Map2</div></td><td class=\"func-since-td\"><span class=\"since\">OTP 17.0</span></td></tr></tbody></table><div class=\"REFBODY fun-types\"><h3 class=\"func-types-title\">Types</h3><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Ks = [K]</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">Map1 = Map2 = map()</span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\"></span></div><div class=\"REFTYPES rt-1\"><span class=\"bold_code bc-2\">K = term()</span></div></div><div class=\"REFBODY rb-7\"><p> </p><p>Returns a new map <span class=\"code\">Map2</span> without keys <span class=\"code\">K1</span> through <span class=\"code\">Kn</span> and their associated values from map <span class=\"code\">Map1</span>. Any key in <span class=\"code\">Ks</span> that does not exist in <span class=\"code\">Map1</span> is ignored</p> <p><strong>Example:</strong></p> <div class=\"example example-none\"><pre>&gt; Map = #{42 =&gt; value_three,1337 =&gt; &quot;value two&quot;,&quot;a&quot; =&gt; 1}, Ks = [&quot;a&quot;,42,&quot;other key&quot;], maps:without(Ks,Map).#{1337 =&gt; &quot;value two&quot;}</pre></div> <p></p></div> "}