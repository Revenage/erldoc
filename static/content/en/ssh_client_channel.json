{"summary":"-behaviour(ssh_client_channel). (Replaces ssh_channel)\n  ","description":"<p> </p><div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p> </p><p>This module replaces ssh_channel.</p> <p>The old module is still available for compatibility, but should not be used for new programs. The old module will not be maintained except for some error corrections </p> <p></p></div></div> <p>SSH services (clients and servers) are implemented as channels that are multiplexed over an SSH connection and communicates over the <span class=\"bold_code bc-20\"><a href=\"/erldoc/docs/http://www.ietf.org/rfc/rfc4254.txt\"> SSH Connection Protocol</a></span>. This module provides a callback API that takes care of generic channel aspects for clients, such as flow control and close messages. It lets the callback functions take care of the service (application) specific parts. This behavior also ensures that the channel process honors the principal of an OTP-process so that it can be part of a supervisor tree. This is a requirement of channel processes implementing a subsystem that will be added to the <span class=\"code\">ssh</span> applications supervisor tree. </p> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p></p><p>When implementing a <span class=\"code\">ssh</span> subsystem for daemons, use <span class=\"bold_code bc-19\"><a href=\"/erldoc/docs/ssh_server_channel\">-behaviour(ssh_server_channel)</a></span> (Replaces ssh_daemon_channel) instead. </p> <p></p></div></div> <div class=\"dont\"><div class=\"label\">Don&apos;t</div><div class=\"content\"><p> </p><p>Functions in this module are not supposed to be called outside a module implementing this behaviour! </p> <p></p></div></div> <p></p>","funcs":" <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-call-2-id83968\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/ssh/doc/src/ssh_client_channel.xml#L70\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"call-2\" href=\"/erldoc/docs/#call-2\">call(ChannelRef, Msg) -&gt;</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.0</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-call-3-id83974\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/ssh/doc/src/ssh_client_channel.xml#L70\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"call-3\" href=\"/erldoc/docs/#call-3\">call(ChannelRef, Msg, Timeout) -&gt; Reply | {error, Reason}</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.0</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ChannelRef = pid() </span><br></div> <div class=\"REFBODY rb-6\">As returned by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#start_link-4\">start_link/4</a></span></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Msg = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Timeout = timeout()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reply = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = closed | timeout</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Makes a synchronous call to the channel process by sending a message and waiting until a reply arrives, or a time-out occurs. The channel calls <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Module:handle_call-3\">Module:handle_call/3</a></span> to handle the message. If the channel process does not exist, <span class=\"code\">{error, closed}</span> is returned. </p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-cast-2-id84040\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/ssh/doc/src/ssh_client_channel.xml#L94\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"cast-2\" href=\"/erldoc/docs/#cast-2\">cast(ChannelRef, Msg) -&gt; ok </a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.0</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ChannelRef = pid()</span><br></div> <div class=\"REFBODY rb-6\">As returned by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#start_link-4\">start_link/4</a></span></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Msg = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Sends an asynchronous message to the channel process and returns ok immediately, ignoring if the destination node or channel process does not exist. The channel calls <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Module:handle_cast-2\">Module:handle_cast/2</a></span> to handle the message. </p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-enter_loop-1-id84092\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/ssh/doc/src/ssh_client_channel.xml#L113\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"enter_loop-1\" href=\"/erldoc/docs/#enter_loop-1\">enter_loop(State) -&gt; _ </a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.0</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">State = term()</span><br></div> <div class=\"REFBODY rb-6\">as returned by <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#init-1\">init/1</a></span></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Makes an existing process an <span class=\"code\">ssh_client_channel</span> (replaces ssh_channel) process. Does not return, instead the calling process enters the <span class=\"code\">ssh_client_channel</span> (replaces ssh_channel) process receive loop and become an <span class=\"code\">ssh_client_channel</span> process. The process must have been started using one of the start functions in <span class=\"code\">proc_lib</span>, see the <span class=\"bold_code bc-18\"><a href=\"/erldoc/docs/proc_lib\">proc_lib(3)</a></span> manual page in STDLIB. The user is responsible for any initialization of the process and must call <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#init-1\">init/1</a></span>. </p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-init-1-id84161\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/ssh/doc/src/ssh_client_channel.xml#L133\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"init-1\" href=\"/erldoc/docs/#init-1\">init(Options) -&gt; {ok, State} | {ok, State, Timeout} | {stop, Reason} </a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.0</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Options = [{Option, Value}]</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">State = term()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Timeout = timeout()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reason = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p> The following options must be present: </p> <dl> <dt><strong><span class=\"code\">{channel_cb, atom()}</span></strong></dt> <dd><p>The module that implements the channel behaviour.</p></dd> <dt><strong><span class=\"code\">{init_args(), list()}</span></strong></dt> <dd><p>The list of arguments to the <span class=\"code\">init</span> function of the callback module.</p></dd> <dt><strong><span class=\"code\">{cm, </span><span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/ssh#type-connection_ref\">ssh:connection_ref()</a></span><span class=\"code\">}</span></strong></dt> <dd><p>Reference to the <span class=\"code\">ssh</span> connection as returned by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ssh#connect-3\">ssh:connect/3</a></span>. </p></dd> <dt><strong><span class=\"code\">{channel_id, </span><span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/ssh#type-channel_id\">ssh:channel_id()</a></span><span class=\"code\">}</span></strong></dt> <dd><p>Id of the <span class=\"code\">ssh</span> channel as returned by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ssh_connection#session_channel-2\">ssh_connection:session_channel/2,4</a></span>. </p></dd> </dl> <div class=\"note\"><div class=\"label\">Note</div><div class=\"content\"><p></p><p>This function is normally not called by the user. The user only needs to call if the channel process needs to be started with help of <span class=\"code\">proc_lib</span> instead of calling <span class=\"code\">start/4</span> or <span class=\"code\">start_link/4</span>.</p> <p></p></div></div> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-reply-2-id84306\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/ssh/doc/src/ssh_client_channel.xml#L175\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"reply-2\" href=\"/erldoc/docs/#reply-2\">reply(Client, Reply) -&gt; _</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.0</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Client = opaque()</span><br></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">Reply = term()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>This function can be used by a channel to send a reply to a client that called <span class=\"code\">call/[2,3]</span> when the reply cannot be defined in the return value of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#Module:handle_call-3\">Module:handle_call/3</a></span>.</p> <p><span class=\"code\">Client</span> must be the <span class=\"code\">From</span> argument provided to the callback function <span class=\"code\">handle_call/3</span>. <span class=\"code\">Reply</span> is an arbitrary term, which is given back to the client as the return value of <span class=\"bold_code bc-17\"><a href=\"/erldoc/docs/#call-2\">call/[2,3].</a></span></p> <p></p></div> <table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-start-4-id84375\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/ssh/doc/src/ssh_client_channel.xml#L195\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"start-4\" href=\"/erldoc/docs/#start-4\">start(SshConnection, ChannelId, ChannelCb, CbInitArgs) -&gt; </a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.0</span></td></tr></tbody></table><table class=\"func-table\"><tbody><tr class=\"func-tr\"><td class=\"func-td\"><div class=\"bold_code fun-type\"><span ><span id=\"ghlink-start_link-4-id84381\" class=\"ghlink\"><a href=\"/erldoc/docs/https://github.com/erlang/otp/edit/maint/lib/ssh/doc/src/ssh_client_channel.xml#L195\" title=\"Found an issue with the documentation? Fix it by clicking here!\"><span class=\"pencil\"></span></a></span><a class=\"title_link\" name=\"start_link-4\" href=\"/erldoc/docs/#start_link-4\">start_link(SshConnection, ChannelId, ChannelCb, CbInitArgs) -&gt; {ok, ChannelRef} | {error, Reason}</a></span></div></td><td class=\"func-since-td\"><span class=\"since\">OTP 21.0</span></td></tr></tbody></table><div class=\"REFBODY rb-5\"><h3 class=\"func-types-title\">Types</h3> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">SshConnection = <span class=\"bold_code bc-13\"><a href=\"/erldoc/docs/ssh#type-connection_ref\">ssh:connection_ref()</a></span></span><br></div> <div class=\"REFBODY rb-6\">As returned by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ssh#connect-3\">ssh:connect/3</a></span></div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ChannelId = <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ssh#type-channel_id\">ssh:channel_id()</a></span></span><br></div> <div class=\"REFBODY rb-6\">As returned by <span class=\"bold_code bc-15\"><a href=\"/erldoc/docs/ssh_connection#session_channel-2\">ssh_connection:session_channel/[2,4]</a></span>.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ChannelCb = atom()</span><br></div> <div class=\"REFBODY rb-6\">Name of the module implementing the service-specific parts of the channel.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">CbInitArgs = [term()]</span><br></div> <div class=\"REFBODY rb-6\">Argument list for the <span class=\"code\">init</span> function in the callback module.</div> <div class=\"REFTYPES rt-4\"><span class=\"bold_code fun-param-type\">ChannelRef = pid()</span><br></div> </div><div class=\"REFBODY rb-7\"><p> </p><p>Starts a process that handles an SSH channel. It is called internally, by the <span class=\"code\">ssh</span> daemon, or explicitly by the <span class=\"code\">ssh</span> client implementations. The behavior sets the <span class=\"code\">trap_exit</span> flag to <span class=\"code\">true</span>. </p> <p></p></div> ","name":"ssh_client_channel"}